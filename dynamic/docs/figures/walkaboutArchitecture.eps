%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ImageMark Software Labs
%%For: () ()
%%Title: D:\MyFiles\Cristina\presentations\walkaboutArchitecture.eps
%%CreationDate: () ()
%%BoundingBox: 0.0000 0.0000 372.0000 236.7500

%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%+Helvetica-Bold

%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cmykcolor 1.1 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 0
%%+ procset Adobe_Illustrator_AI3 1.0 0
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 0.0000 0.0000 372.0000 236.7500

%AI3_TileBox: 0.0000 0.0000 372.0000 236.7500

%AI3_DocumentPreview: None
%%Template:
%%PageOrigin:0.0000 0.0000

%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
{
pop
}
{
Adobe_packedarray begin
Adobe_packedarray
{
dup xcheck
{
bind
} if
userdict 3 1 roll put
} forall
end
} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource

Adobe_packedarray /initialize get exec

%%Title: (CMYK Color Operators)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize
{
/setcmykcolor where
{
pop
}
{
userdict /Adobe_cmykcolor_vars 2 dict dup begin put
/_setrgbcolor
/setrgbcolor load def
/_currentrgbcolor
/currentrgbcolor load def
Adobe_cmykcolor begin
Adobe_cmykcolor
{
dup xcheck
{
bind
} if
pop pop
} forall
end
end
Adobe_cmykcolor begin
} ifelse
} def
/terminate
{
currentdict Adobe_cmykcolor eq
{
end
} if
} def
/setcmykcolor
{
1 sub 4 1 roll
3
{
3 index add neg dup 0 lt
{
pop 0
} if
3 1 roll
} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
{
1 sub neg 3 1 roll
} repeat
0
} def
currentdict readonly pop end
setpacking

%%EndResource

%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
{
pop
}
{
userdict /Adobe_cshow_vars 1 dict dup begin put
/_cshow 
{} def
Adobe_cshow begin
Adobe_cshow
{
dup xcheck
{
bind
} if
userdict 3 1 roll put
} forall
end
end
} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
exch /_cshow
exch put
{
0 0 Adobe_cshow_vars /_cshow get exec
} forall
} def
currentdict readonly pop end
setpacking

%%EndResource

%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
{
pop
}
{
Adobe_customcolor begin
Adobe_customcolor
{
dup xcheck
{
bind
} if
pop pop
} forall
end
Adobe_customcolor begin
} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
{
end
} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
{
4 index mul 4 1 roll
} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource 


%%BeginResource: procset Adobe_typography_AI3 1.0 0
%%Title: (Typography Operators)%%Version: 1.0
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 46 dict dup begin put
/initialize
{
/TZ
where
{
pop
}
{
Adobe_typography_AI3 begin
Adobe_typography_AI3
{
dup xcheck
{
bind
} if
pop pop
} forall
end
Adobe_typography_AI3 begin
} ifelse
} def
/terminate
{
currentdict Adobe_typography_AI3 eq
{
end
} if
} def
/modifyEncoding
{
/_tempEncode exch ddef
/_pntr 0 ddef
{
counttomark -1 roll
dup type dup /marktype eq   
{
pop pop exit
}
{
/nametype eq
{
_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
put
}
{
/_pntr exch ddef
}
ifelse
}
ifelse
}
loop 
_tempEncode
}
def
/TE 
{
StandardEncoding 256 array copy modifyEncoding 
/_nativeEncoding exch def
} def
/TZ  
{
/_useNativeEncoding exch def
pop pop
findfont dup length 2 add dict
begin
mark exch
{
1 index /FID ne { def } if cleartomark mark
}
forall
pop
/FontName exch def
counttomark 0 eq
{
Encoding StandardEncoding eq 1 _useNativeEncoding eq and
{
/Encoding _nativeEncoding def
}
if
cleartomark
}
{ 
/Encoding load 256 array copy 
modifyEncoding /Encoding exch def
}
ifelse  
FontName currentdict
end
definefont pop
}
def
/tr
{
_ax _ay 3 2 roll
} def
/trj 
{
_cx _cy _sp _ax _ay 6 5 roll
} def

/a0
{
/Tx 
{
dup 
currentpoint 3 2 roll
tr _psf
newpath moveto
tr _ctm _pss
} ddef
/Tj 
{
dup
currentpoint 3 2 roll
trj _pjsf
newpath moveto
trj _ctm _pjss
} ddef
} def
/a1
{
W B
} def
/e0
{
/Tx 
{
tr _psf
} ddef
/Tj 
{
trj _pjsf
} ddef
} def
/e1
{
W F 
} def
/i0
{
/Tx
{
tr sp
} ddef
/Tj
{
trj jsp
} ddef
} def
/o0
{
/Tx
{
tr sw rmoveto
} ddef
/Tj
{
trj swj rmoveto
} ddef
} def
/r0
{
/Tx
{
tr _ctm _pss
} ddef
/Tj
{
trj _ctm _pjss
} ddef
} def
/r1
{
W S
} def
/To
{
pop _ctm currentmatrix pop
} def
/TO
{
Te _ctm setmatrix newpath
} def
/Tp
{
pop _tm astore pop _ctm setmatrix 
2 dict begin /W {} def /h {} def
} def
/TP
{
end
iTm 0 0 moveto
} def
/Tr
{
Te currentpoint newpath moveto
dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
dup /_render exch ddef
_renderStart exch get load exec
} def
/iTm 
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Te
{
_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
/_render -1 ddef
} def
/Tf
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl
{
pop
0 exch _leading astore pop
} def
/Tt 
{
pop
} def
/TW
{
3 npop
} def
/Tw
{
/_cx exch ddef
} def
/Tc
{
/_ax exch ddef
} def
/Ts
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti
{
3 npop
} def
/Tz
{
100 div /_hs exch ddef
iTm
} def
/Tq 
{
pop
} def
/TX {pop} def
/Tk
{
exch pop _fScl mul neg 0 rmoveto
} def
/T- 
{
_hyphen Tx
} def
/TS
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource

%%BeginResource: procset Adobe_Illustrator_AI3 1.0 0
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.0 
%%CreationDate: (7/22/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 55 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /i0 /i0 /i0 /i0] def 
/_renderEnd [null null null null /e1 /r1 /a1 /clip] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
{
dup xcheck
{
bind
} if
pop pop
} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def

/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
{
dup dup load dup
length 2 mul dict copy def
} if
load begin def end
} def
/npop
{
{
pop
} repeat
} def

/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
{
2 npop 
(0) exch 2 copy 0 exch put pop
gsave
false charpath currentpoint
4 index setmatrix
stroke
grestore
moveto
2 copy rmoveto
} exch cshow
3 npop
} def
/jss
{
4 1 roll
{
2 npop 
(0) exch 2 copy 0 exch put 
gsave
_sp eq 
{
exch 6 index 6 index 6 index 5 -1 roll widthshow  
currentpoint
}
{
false charpath currentpoint
4 index setmatrix stroke
}ifelse
grestore
moveto
2 copy rmoveto
} exch cshow
6 npop
} def
/sp
{
{
2 npop (0) exch
2 copy 0 exch put pop
false charpath
2 copy rmoveto
} exch cshow
2 npop
} def
/jsp
{
{
2 npop 
(0) exch 2 copy 0 exch put 
_sp eq 
{
exch 5 index 5 index 5 index 5 -1 roll widthshow  
}
{
false charpath
}ifelse
2 copy rmoveto
} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
{pop true setstrokeadjust
/c
{
curveto
} def
/C
/c load def
/v
{
currentpoint 6 2 roll curveto
} def
/V
/v load def
/y
{
2 copy curveto
} def
/Y
/y load def
/l
{
lineto
} def
/L
/l load def
/m
{
moveto
} def
}
{
/c
{
pl curveto
} def
/C
/c load def
/v
{
currentpoint 6 2 roll pl curveto
} def
/V
/v load def
/y
{
pl 2 copy curveto
} def
/Y
/y load def
/l
{
pl lineto
} def
/L
/l load def
/m
{
pl moveto
} def
} ifelse
/d
{
setdash
} def
/cf {} def
/i
{
dup 0 eq
{
pop cf
} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H {} def /h { closepath } def /N { _pola 0 eq {

_doClip 1 eq {clip /_doClip 0 ddef} if newpath } {

/CRender {N} ddef }ifelse } def /n {N} def

/F
{
_pola 0 eq 
{
_doClip 1 eq 
{
gsave _pf grestore clip newpath /_lp /none ddef _fc 
/_doClip 0 ddef
}
{
_pf
}ifelse
} 
{
/CRender {F} ddef
}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
{
_doClip 1 eq 
{
gsave _ps grestore clip newpath /_lp /none ddef _sc 
/_doClip 0 ddef
}
{
_ps
}ifelse
} 
{
/CRender {S} ddef
}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
{
_doClip 1 eq
gsave F grestore 
{
gsave S grestore clip newpath /_lp /none ddef _sc
/_doClip 0 ddef
} 
{
S
}ifelse
}
{
/CRender {B} ddef
}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
{
dup type (stringtype) eq {pop} if
} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat
userdict begin
/showpage {} def
false setoverprint
pop
} def
/~ { end _i restore } def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
{
_of setoverprint
_gf setgray
/_lp /fill ddef
} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
{
_os setoverprint
_gs setgray
/_lp /stroke ddef
} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
{
_of setoverprint
_cf aload pop setcmykcolor
/_lp /fill ddef
} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
{
_os setoverprint
_cs aload pop setcmykcolor
/_lp /stroke ddef
} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
{
_of setoverprint
_if _gf 1 exch sub setcustomcolor
/_lp /fill ddef
} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
{
_os setoverprint
_is _gs 1 exch sub setcustomcolor
/_lp /stroke ddef
} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
{
0 1 _dp 1 sub _dl mod
{
_da exch get 3 get
} for
_dp 1 sub _dl mod 1 add packedarray
_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
definepattern pop
} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
{
null dp
} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
{
0
{
dup 1 add index type /arraytype eq
{
1 add
}
{
exit
} ifelse
} loop
array astore
} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
{
/_d exch _dd exch get def
0 2 _d length 2 sub
{
/_x exch def
/_c _d _x get _ ne def
/_r _d _x 1 add get cvlit def
_r _ ne
{
_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
[
/save cvx
_llx neg _lly neg /translate cvx
_c
{
nc /begin cvx
} if
_r dup type /stringtype eq
{
cvx
}
{
{exec} /forall cvx
} ifelse
_c
{
/end cvx
} if
/restore cvx
] cvx
/_fn 12 _n length add string def
_y _fn cvs pop
/_y _y 1 add def
_fn 12 _n putinterval
_fn _c false dp
_d exch _x 1 add exch put
} if
} for
} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
{
dup _pm rotate fc
1 -1 _pm scale fc
neg _pm rotate fc
}
{
pop
} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
0 1 _fdd length 1 sub
{
/_fd exch _fdd exch get ddef
_fd
0 2 _fd length 2 sub
{
gsave
2 copy get dup _ ne
{
cvx exec _fc
}
{
pop
} ifelse
2 copy 1 add get dup _ ne
{
aload pop findfont _fm
patternfill
}
{
pop
fill
} ifelse
grestore
pop
} for
pop
} for
restore
newpath
} ddef
/_psf
{
save
0 1 _fdd length 1 sub
{
/_fd exch _fdd exch get ddef
_fd
0 2 _fd length 2 sub
{
gsave
2 copy get dup _ ne
{
cvx exec _fc
}
{
pop
} ifelse
2 copy 1 add get dup _ ne
{
aload pop findfont _fm
9 copy 6 npop patternashow
}
{
pop
6 copy 3 npop ashow
} ifelse
grestore
pop
} for
pop
} for
restore

sw rmoveto
} ddef
/_pjsf
{
save
0 1 _fdd length 1 sub
{
/_fd exch _fdd exch get ddef
_fd
0 2 _fd length 2 sub
{
gsave
2 copy get dup _ ne
{
cvx exec _fc
}
{
pop
} ifelse
2 copy 1 add get dup _ ne
{
aload pop findfont _fm
12 copy 6 npop patternawidthshow
}
{
pop 9 copy 3 npop awidthshow
} ifelse
grestore
pop
} for
pop
} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
{
dup _pm rotate sc
1 -1 _pm scale sc
neg _pm rotate sc
}
{
pop
} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
0 1 _sdd length 1 sub
{
/_sd exch _sdd exch get ddef
_sd
0 2 _sd length 2 sub
{
gsave
2 copy get dup _ ne
{
cvx exec _sc
}
{
pop
} ifelse
2 copy 1 add get dup _ ne
{
aload pop findfont _sm
patternstroke
}
{
pop stroke
} ifelse
grestore
pop
} for
pop
} for
restore
newpath
} ddef
/_pss
{
save
0 1 _sdd length 1 sub
{
/_sd exch _sdd exch get ddef
_sd
0 2 _sd length 2 sub
{
gsave
2 copy get dup _ ne
{
cvx exec _sc
}
{
pop
} ifelse
2 copy 1 add get dup _ ne
{
aload pop findfont _sm
10 copy 6 npop patternashowstroke
}
{
pop 7 copy 3 npop ss
} ifelse
grestore
pop
} for
pop
} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
0 1 _sdd length 1 sub
{
/_sd exch _sdd exch get ddef
_sd
0 2 _sd length 2 sub
{
gsave
2 copy get dup _ ne
{
cvx exec _sc
}
{
pop
} ifelse
2 copy 1 add get dup _ ne
{
aload pop findfont _sm
13 copy 6 npop patternawidthshowstroke
}
{
pop 10 copy 3 npop jss
} ifelse
grestore
pop
} for
pop
} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def

/A
{
pop
} def

/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
/Z {findfont begin currentdict dup length dict begin
{1 index /FID ne {def} {pop pop} ifelse} forall /FontName exch def dup length 0 ne
{/Encoding Encoding 256 array copy def 0 exch {dup type /nametype eq
{Encoding 2 index 2 index put pop 1 add} {exch pop} ifelse} forall} if pop
currentdict dup end end /FontName get exch definefont pop} bind def
currentdict readonly pop end
setpacking
/annotatepage
{
} def

%%EndResource
%AI3-Grid.0 0 0 0 0 0 0 2
%%EndProlog
%%BeginSetup
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
%%BeginEncoding:_Helvetica Helvetica
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
]  /_Helvetica/Helvetica Z
%%EndEncoding
%%BeginEncoding:_Helvetica-Bold Helvetica-Bold
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
]  /_Helvetica-Bold/Helvetica-Bold Z
%%EndEncoding
%%EndSetup
u
  0.000 0.000 0.000 0.000 k
 [] 0 d
0.2500 w
  0.000 0.000 0.000 0.898 K
1 j
  1.5000 98.7500 m
  75.7500 98.7500 L
  75.7500 145.0000 L
  1.5000 145.0000 L
  1.5000 98.7500 L
B
U
0 To
1 0 0 1 11.5 119.25 0 Tp
TP
/_Helvetica 8.2500 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 0.898 k
(M\r) Tx
TO
0 To
1 0 0 1 18.75 116.25 0 Tp
TP
/_Helvetica 5.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 0.898 k
(s\r) Tx
TO
0 To
1 0 0 1 21.75 119.25 0 Tp
TP
/_Helvetica 8.2500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 0.898 k
( Interpreter\r) Tx
TO
u
  0.000 0.000 0.000 0.000 k
0.2500 w
1 j
  67.0000 188.7500 m
  141.2500 188.7500 L
  141.2500 235.2500 L
  67.0000 235.2500 L
  67.0000 188.7500 L
B
U
0 To
1 0 0 1 87.75 214.75 0 Tp
TP
/_Helvetica 8.2500 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 0.898 k
(M\r) Tx
TO
0 To
1 0 0 1 95 211.75 0 Tp
TP
/_Helvetica 5.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 0.898 k
(s\r) Tx
TO
0 To
1 0 0 1 98 214.75 0 Tp
TP
/_Helvetica 8.2500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 0.898 k
( -> M\r) Tx
TO
0 To
1 0 0 1 118.75 211.75 0 Tp
TP
/_Helvetica 5.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 0.898 k
(t\r) Tx
TO
0 To
1 0 0 1 83.75 204 0 Tp
TP
/_Helvetica 8.2500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 0.898 k
(Translator\r) Tx
TO
u
  0.000 0.000 0.000 0.000 k
0.2500 w
1 j
  121.0000 33.0000 m
  195.0000 33.0000 L
  195.0000 79.2500 L
  121.0000 79.2500 L
  121.0000 33.0000 L
B
U
0 To
1 0 0 1 136.25 53.5 0 Tp
TP
/_Helvetica 8.2500 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 0.898 k
(Dispatcher\r) Tx
TO
u
0.2500 w
1 J
1 j
  158.0000 28.2500 m
  158.0000 25.0000 L
  157.7500 25.0000 L
  157.7500 25.0000 L
  157.7500 17.2500 L
S
U
u
  0.000 0.000 0.000 0.898 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  155.2500 27.5000 m
  158.0000 33.0000 L
  160.7500 27.5000 L
  155.2500 27.5000 L
F
U
0 To
1 0 0 1 137 6.25 0 Tp
TP
/_Helvetica 7.2500 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 0.898 K
0 j
  0.000 0.000 0.000 0.898 k
(Ms binary file\r) Tx
TO
u
  0.000 0.000 0.000 0.000 k
0.2500 w
1 j
  200.0000 188.7500 m
  274.0000 188.7500 L
  274.0000 235.2500 L
  200.0000 235.2500 L
  200.0000 188.7500 L
B
U
0 To
1 0 0 1 220.5 214.75 0 Tp
TP
/_Helvetica 8.2500 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 0.898 k
(M\r) Tx
TO
0 To
1 0 0 1 227.75 211.75 0 Tp
TP
/_Helvetica 5.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 0.898 k
(t\r) Tx
TO
0 To
1 0 0 1 229.5 214.75 0 Tp
TP
/_Helvetica 8.2500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 0.898 k
( Code\r) Tx
TO
0 To
1 0 0 1 216.75 204 0 Tp
TP
/_Helvetica 8.2500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 0.898 k
(Generator\r) Tx
TO
u
  0.000 0.000 0.000 0.000 k
0.2500 w
1 j
  265.2500 56.2500 m
  339.5000 56.2500 L
  339.5000 102.5000 L
  265.2500 102.5000 L
  265.2500 56.2500 L
B
U
0 To
1 0 0 1 277.25 76.75 0 Tp
TP
/_Helvetica 8.2500 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 0.898 k
(M\r) Tx
TO
0 To
1 0 0 1 284.5 73.75 0 Tp
TP
/_Helvetica 5.5000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 0.898 k
(t\r) Tx
TO
0 To
1 0 0 1 286.25 76.75 0 Tp
TP
/_Helvetica 8.2500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 0.898 k
( Optimizer\r) Tx
TO
u
  0.000 0.000 0.000 0.000 k
0.2500 w
  0.000 0.000 0.000 1.000 K
1 j
  302.2500 171.7500 m
  302.2500 143.0000 L
  302.5000 142.0000 L
  303.2500 141.2500 L
  304.2500 140.5000 L
  306.0000 139.7500 L
  308.0000 139.0000 L
  310.2500 138.5000 L
  313.0000 137.7500 L
  316.0000 137.5000 L
  319.2500 137.0000 L
  322.7500 136.5000 L
  326.5000 136.2500 L
  330.5000 136.2500 L
  334.2500 136.0000 L
  338.2500 136.0000 L
  342.2500 136.2500 L
  346.0000 136.2500 L
  349.7500 136.5000 L
  353.2500 137.0000 L
  356.7500 137.5000 L
  359.7500 137.7500 L
  362.5000 138.5000 L
  364.7500 139.0000 L
  366.7500 139.7500 L
  368.2500 140.5000 L
  369.5000 141.2500 L
  370.0000 142.0000 L
  370.2500 143.0000 L
  370.2500 171.7500 L
  370.0000 172.5000 L
  369.5000 173.2500 L
  368.2500 174.0000 L
  366.7500 174.7500 L
  364.7500 175.5000 L
  362.5000 176.0000 L
  359.7500 176.7500 L
  356.7500 177.2500 L
  353.2500 177.7500 L
  349.7500 178.0000 L
  346.0000 178.2500 L
  342.2500 178.2500 L
  338.2500 178.5000 L
  334.2500 178.5000 L
  330.5000 178.2500 L
  326.5000 178.2500 L
  322.7500 178.0000 L
  319.2500 177.7500 L
  316.0000 177.2500 L
  313.0000 176.7500 L
  310.2500 176.0000 L
  308.0000 175.5000 L
  306.0000 174.7500 L
  304.2500 174.0000 L
  303.2500 173.2500 L
  302.5000 172.5000 L
  302.2500 171.7500 L
B
U
u
  0.000 0.000 0.000 1.000 K
  302.2500 171.7500 m
  302.5000 171.0000 L
  303.2500 170.0000 L
  304.2500 169.5000 L
  306.0000 168.7500 L
  308.0000 168.0000 L
  310.2500 167.2500 L
  313.0000 166.7500 L
  316.0000 166.2500 L
  319.2500 165.7500 L
  322.7500 165.5000 L
  326.5000 165.2500 L
  330.5000 165.0000 L
  334.2500 165.0000 L
  338.2500 165.0000 L
  342.2500 165.0000 L
  346.0000 165.2500 L
  349.7500 165.5000 L
  353.2500 165.7500 L
  356.7500 166.2500 L
  359.7500 166.7500 L
  362.5000 167.2500 L
  364.7500 168.0000 L
  366.7500 168.7500 L
  368.2500 169.5000 L
  369.5000 170.0000 L
  370.0000 171.0000 L
  370.2500 171.7500 L
S
U
u
  302.2500 168.2500 m
  302.5000 167.5000 L
  303.2500 166.7500 L
  304.2500 166.0000 L
  306.0000 165.2500 L
  308.0000 164.5000 L
  310.2500 164.0000 L
  313.0000 163.5000 L
  316.0000 163.0000 L
  319.2500 162.5000 L
  322.7500 162.0000 L
  326.5000 161.7500 L
  330.5000 161.5000 L
  334.2500 161.5000 L
  338.2500 161.5000 L
  342.2500 161.5000 L
  346.0000 161.7500 L
  349.7500 162.0000 L
  353.2500 162.5000 L
  356.7500 163.0000 L
  359.7500 163.5000 L
  362.5000 164.0000 L
  364.7500 164.5000 L
  366.7500 165.2500 L
  368.2500 166.0000 L
  369.5000 166.7500 L
  370.0000 167.5000 L
  370.2500 168.2500 L
S
U
u
  302.2500 165.0000 m
  302.5000 164.0000 L
  303.2500 163.5000 L
  304.2500 162.5000 L
  306.0000 161.7500 L
  308.0000 161.2500 L
  310.2500 160.5000 L
  313.0000 160.0000 L
  316.0000 159.5000 L
  319.2500 159.0000 L
  322.7500 158.7500 L
  326.5000 158.2500 L
  330.5000 158.2500 L
  334.2500 158.0000 L
  338.2500 158.0000 L
  342.2500 158.2500 L
  346.0000 158.2500 L
  349.7500 158.7500 L
  353.2500 159.0000 L
  356.7500 159.5000 L
  359.7500 160.0000 L
  362.5000 160.5000 L
  364.7500 161.2500 L
  366.7500 161.7500 L
  368.2500 162.5000 L
  369.5000 163.5000 L
  370.0000 164.0000 L
  370.2500 165.0000 L
S
U
0 To
1 0 0 1 325.5 145.75 0 Tp
TP
/_Helvetica 9.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(M\r) Tx
TO
0 To
1 0 0 1 333.75 142.5 0 Tp
TP
/_Helvetica 6.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(t\r) Tx
TO
0 To
1 0 0 1 335.75 145.75 0 Tp
TP
/_Helvetica 9.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( F$\r) Tx
TO
u
0.2500 w
1 j
  121.0000 56.2500 m
  120.7500 56.2500 L
  120.2500 56.2500 L
  119.7500 56.2500 L
  118.7500 56.2500 L
  117.5000 56.2500 L
  116.2500 56.2500 L
  114.7500 56.2500 L
  112.7500 56.2500 L
  111.0000 56.2500 L
  109.0000 56.2500 L
  106.5000 56.5000 L
  104.2500 56.7500 L
  102.0000 57.0000 L
  99.5000 57.2500 L
  96.7500 57.5000 L
  94.2500 58.0000 L
  91.5000 58.5000 L
  88.7500 59.0000 L
  86.0000 59.5000 L
  83.2500 60.2500 L
  80.5000 61.0000 L
  77.7500 62.0000 L
  75.2500 63.0000 L
  72.5000 64.0000 L
  70.0000 65.2500 L
  68.2500 66.2500 L
  66.5000 67.2500 L
  65.0000 68.2500 L
  63.2500 69.5000 L
  61.7500 70.5000 L
  60.0000 71.7500 L
  58.7500 73.0000 L
  57.2500 74.2500 L
  56.0000 75.5000 L
  54.5000 76.7500 L
  53.2500 78.2500 L
  52.0000 79.5000 L
  50.7500 80.7500 L
  49.7500 82.0000 L
  48.7500 83.2500 L
  47.7500 84.7500 L
  46.7500 86.0000 L
  45.7500 87.2500 L
  45.0000 88.2500 L
  44.2500 89.5000 L
  43.5000 90.7500 L
  42.7500 91.7500 L
  42.0000 92.7500 L
  41.5000 93.5000 L
  41.0000 94.5000 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  38.7500 92.5000 m
  38.5000 98.7500 L
  43.7500 95.2500 L
  38.7500 92.5000 L
F
U
u
0.2500 w
  0.000 0.000 0.000 1.000 K
  62.7500 209.7500 m
  61.7500 209.2500 L
  60.7500 208.7500 L
  59.5000 208.0000 L
  58.5000 207.5000 L
  57.2500 206.7500 L
  56.0000 206.0000 L
  54.5000 205.0000 L
  53.2500 204.2500 L
  51.7500 203.2500 L
  50.2500 202.2500 L
  49.0000 201.2500 L
  47.5000 200.0000 L
  46.0000 199.0000 L
  44.5000 197.7500 L
  43.0000 196.5000 L
  41.5000 195.2500 L
  40.2500 194.0000 L
  38.7500 192.7500 L
  37.5000 191.2500 L
  36.2500 189.7500 L
  35.0000 188.2500 L
  33.7500 186.7500 L
  32.5000 185.0000 L
  31.0000 183.0000 L
  29.5000 180.7500 L
  28.2500 178.2500 L
  27.2500 175.7500 L
  26.2500 173.5000 L
  25.2500 171.0000 L
  24.2500 168.7500 L
  23.5000 166.5000 L
  22.7500 164.0000 L
  22.2500 161.7500 L
  21.5000 159.7500 L
  21.0000 157.5000 L
  20.7500 155.5000 L
  20.2500 153.7500 L
  20.0000 152.0000 L
  19.7500 150.2500 L
  19.5000 149.0000 L
  19.5000 147.5000 L
  19.2500 146.5000 L
  19.2500 145.7500 L
  19.0000 145.0000 L
  19.0000 144.7500 L
  19.0000 144.5000 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  63.2500 207.0000 m
  67.0000 212.0000 L
  60.7500 212.0000 L
  63.2500 207.0000 L
F
U
u
0.2500 w
  195.0000 212.0000 m
  141.2500 212.0000 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  194.5000 209.2500 m
  200.0000 212.0000 L
  194.5000 214.7500 L
  194.5000 209.2500 L
F
U
u
0.2500 w
  333.5000 182.2500 m
  332.7500 183.0000 L
  332.0000 184.0000 L
  331.2500 184.7500 L
  330.5000 185.5000 L
  329.7500 186.5000 L
  328.7500 187.5000 L
  327.7500 188.5000 L
  326.7500 189.5000 L
  325.7500 190.2500 L
  324.5000 191.5000 L
  323.5000 192.5000 L
  322.0000 193.5000 L
  321.0000 194.5000 L
  319.5000 195.5000 L
  318.2500 196.5000 L
  316.7500 197.5000 L
  315.5000 198.5000 L
  314.0000 199.2500 L
  312.5000 200.2500 L
  310.7500 201.2500 L
  308.5000 202.2500 L
  306.2500 203.5000 L
  304.0000 204.5000 L
  301.5000 205.2500 L
  299.0000 206.2500 L
  296.7500 207.0000 L
  294.5000 207.5000 L
  292.2500 208.2500 L
  289.7500 209.0000 L
  287.7500 209.5000 L
  285.7500 210.0000 L
  283.5000 210.5000 L
  281.7500 210.7500 L
  280.2500 211.0000 L
  278.5000 211.2500 L
  277.2500 211.5000 L
  276.2500 211.7500 L
  275.2500 211.7500 L
  274.7500 212.0000 L
  274.2500 212.0000 L
  274.0000 212.0000 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  335.0000 184.5000 m
  336.5000 178.5000 L
  330.7500 181.2500 L
  335.0000 184.5000 L
F
U
u
0.2500 w
  0.000 0.000 0.000 1.000 K
  340.2500 133.2500 m
  340.5000 133.0000 L
  340.7500 132.7500 L
  341.0000 132.5000 L
  341.2500 132.2500 L
  341.2500 132.0000 L
  341.5000 131.7500 L
  341.7500 131.5000 L
  341.7500 131.0000 L
  342.0000 130.7500 L
  342.0000 130.5000 L
  342.2500 130.0000 L
  342.2500 129.7500 L
  342.2500 129.2500 L
  342.5000 128.7500 L
  342.5000 128.5000 L
  342.5000 128.2500 L
  342.2500 127.7500 L
  342.2500 127.2500 L
  342.2500 126.7500 L
  342.0000 126.2500 L
  342.0000 125.7500 L
  341.7500 125.5000 L
  341.5000 125.0000 L
  341.2500 124.5000 L
  341.0000 123.7500 L
  340.5000 123.0000 L
  340.0000 122.5000 L
  339.5000 121.5000 L
  338.7500 120.7500 L
  338.0000 120.0000 L
  337.2500 119.2500 L
  336.5000 118.2500 L
  335.7500 117.5000 L
  334.7500 116.7500 L
  333.7500 115.7500 L
  333.0000 115.0000 L
  332.0000 114.0000 L
  331.0000 113.2500 L
  330.2500 112.5000 L
  329.2500 111.7500 L
  328.2500 111.0000 L
  327.2500 110.2500 L
  326.2500 109.2500 L
  325.5000 108.5000 L
  324.5000 108.0000 L
  323.7500 107.2500 L
  322.7500 106.5000 L
  322.0000 106.0000 L
  321.2500 105.2500 L
  320.5000 105.0000 L
S
U
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
*u
  342.5000 135.2500 m
  336.5000 136.0000 L
  339.5000 130.7500 L
  342.5000 135.2500 L
  342.5000 135.2500 L
F
u
  319.2500 107.5000 m
  316.5000 102.0000 L
  322.5000 103.0000 L
  319.2500 107.5000 L
  319.2500 107.5000 L
F
U
*U
u
0.2500 w
  0.000 0.000 0.000 1.000 K
  293.7500 56.7500 m
  293.7500 56.7500 L
  293.2500 56.5000 L
  292.7500 56.2500 L
  292.0000 55.7500 L
  290.7500 55.2500 L
  289.5000 54.7500 L
  288.0000 54.0000 L
  286.5000 53.5000 L
  284.5000 52.7500 L
  282.5000 52.0000 L
  280.5000 51.0000 L
  278.2500 50.2500 L
  275.7500 49.5000 L
  273.2500 48.5000 L
  270.7500 47.7500 L
  268.0000 47.0000 L
  265.2500 46.2500 L
  262.5000 45.5000 L
  259.5000 45.0000 L
  256.7500 44.2500 L
  253.7500 43.7500 L
  250.7500 43.5000 L
  247.7500 43.2500 L
  244.7500 43.0000 L
  241.7500 42.7500 L
  239.5000 43.0000 L
  237.2500 43.0000 L
  235.0000 43.2500 L
  232.7500 43.5000 L
  230.5000 43.7500 L
  228.5000 44.0000 L
  226.5000 44.2500 L
  224.5000 44.7500 L
  222.2500 45.2500 L
  220.2500 45.7500 L
  218.5000 46.5000 L
  216.5000 46.7500 L
  214.7500 47.5000 L
  213.0000 48.0000 L
  211.2500 48.7500 L
  209.7500 49.5000 L
  208.0000 50.0000 L
  206.5000 50.5000 L
  205.0000 51.2500 L
  203.7500 51.7500 L
  202.5000 52.5000 L
  201.2500 52.7500 L
  200.2500 53.5000 L
  199.2500 54.0000 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
  201.2500 56.0000 m
  195.0000 56.2500 L
  198.5000 51.2500 L
  201.2500 56.0000 L
F
U
u
0.2500 w
  0.000 0.000 0.000 1.000 K
  297.7500 156.2500 m
  296.5000 156.0000 L
  295.2500 155.7500 L
  293.7500 155.5000 L
  292.2500 155.0000 L
  290.5000 154.7500 L
  288.7500 154.2500 L
  287.0000 153.7500 L
  285.2500 153.2500 L
  283.2500 152.7500 L
  281.2500 152.0000 L
  279.0000 151.5000 L
  277.0000 150.7500 L
  274.7500 150.0000 L
  272.5000 149.2500 L
  270.2500 148.5000 L
  268.0000 147.5000 L
  265.7500 146.5000 L
  263.2500 145.5000 L
  260.7500 144.5000 L
  258.5000 143.2500 L
  256.2500 142.2500 L
  253.7500 141.0000 L
  251.2500 139.7500 L
  249.0000 138.2500 L
  246.7500 137.0000 L
  244.2500 135.5000 L
  242.0000 134.0000 L
  239.7500 132.2500 L
  237.5000 130.7500 L
  235.5000 129.0000 L
  233.2500 127.2500 L
  231.2500 125.2500 L
  229.2500 123.2500 L
  227.5000 121.2500 L
  225.5000 119.2500 L
  223.7500 117.2500 L
  222.0000 115.0000 L
  220.2500 112.7500 L
  218.7500 110.7500 L
  217.2500 108.2500 L
  215.5000 106.0000 L
  214.2500 103.7500 L
  212.7500 101.5000 L
  211.5000 99.2500 L
  210.2500 96.7500 L
  209.2500 94.5000 L
  208.0000 92.2500 L
  206.7500 90.0000 L
  206.0000 87.7500 L
  204.7500 85.5000 L
  204.0000 83.2500 L
  203.0000 81.2500 L
  202.2500 79.0000 L
  201.5000 77.0000 L
  200.7500 75.0000 L
  200.0000 73.0000 L
  199.5000 71.2500 L
  198.7500 69.5000 L
  198.2500 67.7500 L
  197.7500 66.2500 L
  197.2500 64.7500 L
  197.0000 63.5000 L
  196.5000 62.0000 L
  196.2500 61.0000 L
S
U
  0.000 0.000 0.000 1.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
*u
  297.5000 153.5000 m
  302.2500 157.2500 L
  296.5000 159.0000 L
  297.5000 153.5000 L
  297.5000 153.5000 L
F
u
  193.7500 62.2500 m
  195.0000 56.2500 L
  199.0000 61.0000 L
  193.7500 62.2500 L
  193.7500 62.2500 L
F
U
*U
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF
