#define sign_extend(N,SIZE) (((int)((N) << (sizeof(unsigned)*8-(SIZE)))) >> (sizeof(unsigned)*8-(SIZE)))
#include <assert.h>

#line 2 "dynamic/emu/spathfinder.m"
/*
 * dynamic/emu/spathfinder.m - Emulator implementation file
 * 
 * Automatically generated by genemu 0.61 on Fri Feb  8 09:59:24 2002 from:
 *   machine/sparc/sparc-core.spec            (Wed Dec  5 15:15:32 2001)
 *   machine/sparc/sparc.ssl                  (Mon Nov 26 19:34:15 2001)
 */
/*
 * Copyright (C) 2001, Sun Microsystems, Inc
 *
 * See the file "LICENSE.TERMS" for information on usage and
 * redistribution of this file, and for a DISCLAIMER OF ALL
 * WARRANTIES.
 *
 */

#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include "spathfinder.h"




/* Globals */
long int icount;
int debug;

/* General purpose macros */
#define BITSLICE(x,lo,hi) (((x) & ((1LL<<(hi+1))-1))>>lo)
#define BITSLICEASSN(x,lo,hi,exp) (x=((x)&(~((1LL<<((hi)+1))-1)^((1LL<<(lo))-1)))|\
                                 (((exp)&((1LL<<((hi)-(lo)+1))-1))<<(lo)));
#define ROTATELEFT(x,n,w) (((x)<<(n)) | ((x)>>((w)-(n)) ))
#define ROTATERIGHT(x,n,w) (((x)>>(n)) | ((x)<<((w)-(n)) ))

/* Memory access macros */
#define getMemsint8_t(a)   *((sint8_t *)&mem[a])
#define getMemsint16_t(a)  *((sint16_t *)&mem[a])
#define getMemsint32_t(a)  *((sint32_t *)&mem[a])
#define getMemsint64_t(a)  *((sint64_t *)&mem[a])
#define getMemuint8_t(a)   *((uint8_t *)&mem[a])
#define getMemuint16_t(a)  *((uint16_t *)&mem[a])
#define getMemuint32_t(a)  *((uint32_t *)&mem[a])
#define getMemuint64_t(a)  *((uint64_t *)&mem[a])
#define getMemfloat32_t(a) *((float32_t *)&mem[a])
#define getMemfloat64_t(a) *((float64_t *)&mem[a])
#define getMemfloat128_t(a) *((float128_t *)&mem[a])
#define setMemsint8_t(a,x)   getMemsint8_t(a) = x
#define setMemsint16_t(a,x)  getMemsint16_t(a) = x
#define setMemsint32_t(a,x)  getMemsint32_t(a) = x
#define setMemsint64_t(a,x)  getMemsint64_t(a) = x
#define setMemuint8_t(a,x)   getMemuint8_t(a) = x
#define setMemuint16_t(a,x)  getMemuint16_t(a) = x
#define setMemuint32_t(a,x)  getMemuint32_t(a) = x
#define setMemuint64_t(a,x)  getMemuint64_t(a) = x
#define setMemfloat32_t(a,x) getMemfloat32_t(a) = x
#define setMemfloat64_t(a,x) getMemfloat64_t(a) = x
#define setMemfloat128_t(a,x) getMemfloat128_t(a) = x

#define ADDROF(x) ( (uint32_t)(((char *)&x) - mem) )

static inline sint32_t float32ToSint32( float32_t f ) {
    return *((sint32_t *)&f);
}
static inline sint64_t float64ToSint64( float64_t f ) {
    return *((sint64_t *)&f);
}
static inline float32_t sint32ToFloat32( sint32_t i ) {
    return *((float32_t *)&i);
}
static inline float64_t sint64ToFloat64( sint64_t i ) {
    return *((float64_t *)&i);
}

/* "Default" values */
#define defaultsint8_t 0
#define defaultsint16_t 0
#define defaultsint32_t 0
#define defaultsint64_t 0
#define defaultuint8_t 0
#define defaultuint16_t 0
#define defaultuint32_t 0
#define defaultuint64_t 0
#define defaultfloat32_t 0
#define defaultfloat64_t 0
#define defaultfloat128_t 0

/* Function names */
#define loge(x) log(x)
#define log2(x) log(x)/log(2)
#define arctan(x) atan(x)
#define arcsin(x) asin(x)
#define arccos(x) acos(x)
#define fround(a,b,x) rint(x)


/* Macros and types for NJMC */
#define getDword(pc) getMemuint32_t(pc)
#define getWord(pc) getMemuint16_t(pc)
#define getByte(pc) getMemuint8_t(pc)

#define addressToPC(pc) (pc)
#define doFlagTRAP(c,t) if(c) doTrap(t)
typedef uint32_t dword;

#ifndef HEXCUTOFF
#define HEXCUTOFF 1024
#endif
#define IMMEDTOSTRING( v, x, l ) \
    snprintf( v,l, ((x)>HEXCUTOFF || ((signed)(x))<-HEXCUTOFF)?"0x%x":"%d", x )
#define BADOPCODE(x) *opname = "#ERR#";

/**************** Disassembler core ******************/
static const char *aNames[2] = { "", ",a" };
static const char *cdNames[32] = { "%c0", "%c1", "%c2", "%c3", "%c4", "%c5", "%c6", "%c7", "%c8", "%c9", "%c10", "%c11", "%c12", "%c13", "%c14", "%c15", "%c16", "%c17", "%c18", "%c19", "%c20", "%c21", "%c22", "%c23", "%c24", "%c25", "%c26", "%c27", "%c28", "%c29", "%c30", "%c31" };
static const char *fddNames[32] = { "%f0to1", "a", "%f2to3", "b", "%f4to5", "c", "%f6to7", "d", "%f8to9", "e", "%f10to11", "f", "%f12to13", "g", "%f14to15", "h", "%f16to17", "i", "%f18to19", "j", "%f20to21", "k", "%f22to23", "l", "%f24to25", "m", "%f26to27", "n", "%f28to29", "o", "%f30to31", "p" };
static const char *fdqNames[32] = { "%f0to3", "q", "r", "s", "%f4to7", "t", "u", "v", "%f8to11", "w", "x", "y", "%f12to15", "z", "A", "B", "%f16to19", "C", "D", "E", "%f20to23", "F", "G", "H", "%f24to27", "I", "J", "K", "%f28to31", "L", "M", "N" };
static const char *fdsNames[32] = { "%f0", "%f1", "%f2", "%f3", "%f4", "%f5", "%f6", "%f7", "%f8", "%f9", "%f10", "%f11", "%f12", "%f13", "%f14", "%f15", "%f16", "%f17", "%f18", "%f19", "%f20", "%f21", "%f22", "%f23", "%f24", "%f25", "%f26", "%f27", "%f28", "%f29", "%f30", "%f31" };
static const char *fs1dNames[32] = { "%f0to1", "a", "%f2to3", "b", "%f4to5", "c", "%f6to7", "d", "%f8to9", "e", "%f10to11", "f", "%f12to13", "g", "%f14to15", "h", "%f16to17", "i", "%f18to19", "j", "%f20to21", "k", "%f22to23", "l", "%f24to25", "m", "%f26to27", "n", "%f28to29", "o", "%f30to31", "p" };
static const char *fs1qNames[32] = { "%f0to3", "q", "r", "s", "%f4to7", "t", "u", "v", "%f8to11", "w", "x", "y", "%f12to15", "z", "A", "B", "%f16to19", "C", "D", "E", "%f20to23", "F", "G", "H", "%f24to27", "I", "J", "K", "%f28to31", "L", "M", "N" };
static const char *fs1sNames[32] = { "%f0", "%f1", "%f2", "%f3", "%f4", "%f5", "%f6", "%f7", "%f8", "%f9", "%f10", "%f11", "%f12", "%f13", "%f14", "%f15", "%f16", "%f17", "%f18", "%f19", "%f20", "%f21", "%f22", "%f23", "%f24", "%f25", "%f26", "%f27", "%f28", "%f29", "%f30", "%f31" };
static const char *fs2dNames[32] = { "%f0to1", "a", "%f2to3", "b", "%f4to5", "c", "%f6to7", "d", "%f8to9", "e", "%f10to11", "f", "%f12to13", "g", "%f14to15", "h", "%f16to17", "i", "%f18to19", "j", "%f20to21", "k", "%f22to23", "l", "%f24to25", "m", "%f26to27", "n", "%f28to29", "o", "%f30to31", "p" };
static const char *fs2qNames[32] = { "%f0to3", "q", "r", "s", "%f4to7", "t", "u", "v", "%f8to11", "w", "x", "y", "%f12to15", "z", "A", "B", "%f16to19", "C", "D", "E", "%f20to23", "F", "G", "H", "%f24to27", "I", "J", "K", "%f28to31", "L", "M", "N" };
static const char *fs2sNames[32] = { "%f0", "%f1", "%f2", "%f3", "%f4", "%f5", "%f6", "%f7", "%f8", "%f9", "%f10", "%f11", "%f12", "%f13", "%f14", "%f15", "%f16", "%f17", "%f18", "%f19", "%f20", "%f21", "%f22", "%f23", "%f24", "%f25", "%f26", "%f27", "%f28", "%f29", "%f30", "%f31" };
static const char *rdNames[32] = { "%g0", "%g1", "%g2", "%g3", "%g4", "%g5", "%g6", "%g7", "%o0", "%o1", "%o2", "%o3", "%o4", "%o5", "%sp", "%o7", "%l0", "%l1", "%l2", "%l3", "%l4", "%l5", "%l6", "%l7", "%i0", "%i1", "%i2", "%i3", "%i4", "%i5", "%fp", "%i7" };
static const char *rs1Names[32] = { "%g0", "%g1", "%g2", "%g3", "%g4", "%g5", "%g6", "%g7", "%o0", "%o1", "%o2", "%o3", "%o4", "%o5", "%sp", "%o7", "%l0", "%l1", "%l2", "%l3", "%l4", "%l5", "%l6", "%l7", "%i0", "%i1", "%i2", "%i3", "%i4", "%i5", "%fp", "%i7" };
static const char *rs2Names[32] = { "%g0", "%g1", "%g2", "%g3", "%g4", "%g5", "%g6", "%g7", "%o0", "%o1", "%o2", "%o3", "%o4", "%o5", "%sp", "%o7", "%l0", "%l1", "%l2", "%l3", "%l4", "%l5", "%l6", "%l7", "%i0", "%i1", "%i2", "%i3", "%i4", "%i5", "%fp", "%i7" };
sint32_t disassembleaddress_( int pc, char * buf, size_t buflen, char ** opname )
{
sint32_t nextPC;


#line 131 "dynamic/emu/spathfinder.m"
{ 
  dword MATCH_p = 
    
    #line 131 "dynamic/emu/spathfinder.m"
    pc
    ;
  unsigned MATCH_w_32_0;
  { 
    MATCH_w_32_0 = getDword(MATCH_p); 
    if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 1) { 
      unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
      int /* [~4096..4095] */ simm13 = 
        sign_extend((MATCH_w_32_0 & 0x1fff) /* simm13 at 0 */, 13);
      nextPC = 4 + MATCH_p; 
      
      #line 133 "dynamic/emu/spathfinder.m"
       {

      char tmp2[15];

      IMMEDTOSTRING( tmp2, simm13, 15 );

      snprintf( buf, buflen, "%s + %s", rs1Names[rs1], tmp2);

      if( opname ) *opname = "dispA";

      }

      
      
      
    } /*opt-block*//*opt-block+*/
    else { 
      unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
      unsigned rs2 = (MATCH_w_32_0 & 0x1f) /* rs2 at 0 */;
      nextPC = 4 + MATCH_p; 
      
      #line 145 "dynamic/emu/spathfinder.m"
       {

      snprintf( buf, buflen, "%s + %s", rs1Names[rs1], rs2Names[rs2]);

      if( opname ) *opname = "indexA";

      }

      
      
      
    } /*opt-block*//*opt-block+*/
    
  }goto MATCH_finished_g; 
  
  MATCH_finished_g: (void)0; /*placeholder for label*/
  
}

#line 155 "dynamic/emu/spathfinder.m"
return nextPC;
}
sint32_t disassemblereg_or_imm( int pc, char * buf, size_t buflen, char ** opname )
{
sint32_t nextPC;


#line 159 "dynamic/emu/spathfinder.m"
{ 
  dword MATCH_p = 
    
    #line 159 "dynamic/emu/spathfinder.m"
    pc
    ;
  unsigned MATCH_w_32_0;
  { 
    MATCH_w_32_0 = getDword(MATCH_p); 
    if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 1) { 
      int /* [~4096..4095] */ simm13 = 
        sign_extend((MATCH_w_32_0 & 0x1fff) /* simm13 at 0 */, 13);
      nextPC = 4 + MATCH_p; 
      
      #line 161 "dynamic/emu/spathfinder.m"
       {

      char tmp1[15];

      IMMEDTOSTRING( tmp1, simm13, 15 );

      snprintf( buf, buflen, "%s", tmp1);

      if( opname ) *opname = "imode";

      }

      
      
      
    } /*opt-block*//*opt-block+*/
    else { 
      unsigned rs2 = (MATCH_w_32_0 & 0x1f) /* rs2 at 0 */;
      nextPC = 4 + MATCH_p; 
      
      #line 167 "dynamic/emu/spathfinder.m"
       {

      snprintf( buf, buflen, "%s", rs2Names[rs2]);

      if( opname ) *opname = "rmode";

      }

      
      
      
    } /*opt-block*//*opt-block+*/
    
  }goto MATCH_finished_f; 
  
  MATCH_finished_f: (void)0; /*placeholder for label*/
  
}

#line 173 "dynamic/emu/spathfinder.m"
return nextPC;
}
sint32_t disassembleregaddr( int pc, char * buf, size_t buflen, char ** opname )
{
sint32_t nextPC;


#line 177 "dynamic/emu/spathfinder.m"
{ 
  dword MATCH_p = 
    
    #line 177 "dynamic/emu/spathfinder.m"
    pc
    ;
  unsigned MATCH_w_32_0;
  { 
    MATCH_w_32_0 = getDword(MATCH_p); 
    if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 1) { 
      nextPC = MATCH_p; 
      
      #line 186 "dynamic/emu/spathfinder.m"
      { BADOPCODE(pc); };

      
      
      
    } /*opt-block*//*opt-block+*/
    else { 
      unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
      unsigned rs2 = (MATCH_w_32_0 & 0x1f) /* rs2 at 0 */;
      nextPC = 4 + MATCH_p; 
      
      #line 179 "dynamic/emu/spathfinder.m"
       {

      snprintf( buf, buflen, "%s + %s", rs1Names[rs1], rs2Names[rs2]);

      if( opname ) *opname = "indexR";

      }

      
      
      
    } /*opt-block*//*opt-block+*/
    
  }goto MATCH_finished_e; 
  
  MATCH_finished_e: (void)0; /*placeholder for label*/
  
}

#line 189 "dynamic/emu/spathfinder.m"
return nextPC;
}


int disassembleInstruction( int pc, char *buf, size_t buflen, char **opname )
{
    sint32_t nextPC;


#line 195 "dynamic/emu/spathfinder.m"
{ 
  dword MATCH_p = 
    
    #line 195 "dynamic/emu/spathfinder.m"
    pc
    ;
  unsigned MATCH_w_32_0;
  { 
    MATCH_w_32_0 = getDword(MATCH_p); 
    
      switch((MATCH_w_32_0 >> 30 & 0x3) /* op at 0 */) {
        case 0: 
          
            switch((MATCH_w_32_0 >> 22 & 0x7) /* op2 at 0 */) {
              case 0: 
                { 
                  unsigned imm22 = (MATCH_w_32_0 & 0x3fffff) /* imm22 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1659 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[15];

                  IMMEDTOSTRING( tmp1, imm22, 15 );

                  snprintf( buf, buflen, "%s", tmp1);

                  if( opname ) *opname = "UNIMP";

                  }

                  
                  
                  
                }
                
                break;
              case 1: case 3: case 5: 
                goto MATCH_label_d0; break;
              case 2: 
                if ((MATCH_w_32_0 >> 29 & 0x1) /* a at 0 */ == 1) 
                  
                    switch((MATCH_w_32_0 >> 25 & 0xf) /* cond at 0 */) {
                      case 0: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 409 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BN,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 1: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 325 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BE,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 2: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 385 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BLE,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 3: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 373 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BL,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 4: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 397 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BLEU,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 5: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 313 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BCS,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 6: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 433 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BNEG,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 7: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 469 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BVS,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 8: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 289 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BA,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 9: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 421 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BNE,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 10: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 337 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BG,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 11: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 349 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BGE,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 12: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 361 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BGU,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 13: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 301 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BCC,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 14: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 445 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BPOS,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 15: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 457 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BVC,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      default: assert(0);
                    } /* (MATCH_w_32_0 >> 25 & 0xf) -- cond at 0 --*/  
                else 
                  
                    switch((MATCH_w_32_0 >> 25 & 0xf) /* cond at 0 */) {
                      case 0: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 403 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BN";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 1: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 319 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BE";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 2: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 379 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BLE";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 3: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 367 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BL";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 4: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 391 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BLEU";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 5: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 307 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BCS";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 6: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 427 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BNEG";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 7: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 463 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BVS";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 8: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 283 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BA";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 9: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 415 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BNE";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 10: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 331 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BG";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 11: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 343 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BGE";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 12: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 355 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BGU";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 13: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 295 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BCC";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 14: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 439 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BPOS";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 15: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 451 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "BVC";

                          }

                          
                          
                          
                        }
                        
                        break;
                      default: assert(0);
                    } /* (MATCH_w_32_0 >> 25 & 0xf) -- cond at 0 --*/  
                break;
              case 4: 
                if ((MATCH_w_32_0 & 0x3fffff) /* imm22 at 0 */ == 0 && 
                  (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ == 0) { 
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1183 "dynamic/emu/spathfinder.m"
                   {

                  buf[0] = '\0';

                  if( opname ) *opname = "NOP";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                else 
                  goto MATCH_label_d1;  /*opt-block+*/
                
                break;
              case 6: 
                if ((MATCH_w_32_0 >> 29 & 0x1) /* a at 0 */ == 1) 
                  
                    switch((MATCH_w_32_0 >> 25 & 0xf) /* cond at 0 */) {
                      case 0: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 773 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBN,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 1: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 785 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBNE,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 2: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 761 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBLG,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 3: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 857 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBUL,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 4: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 737 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBL,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 5: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 833 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBUG,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 6: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 713 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBG,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 7: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 809 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBU,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 8: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 689 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBA,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 9: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 701 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBE,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 10: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 821 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBUE,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 11: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 725 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBGE,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 12: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 845 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBUGE,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 13: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 749 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBLE,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 14: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 869 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBULE,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 15: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 797 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBO,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      default: assert(0);
                    } /* (MATCH_w_32_0 >> 25 & 0xf) -- cond at 0 --*/  
                else 
                  
                    switch((MATCH_w_32_0 >> 25 & 0xf) /* cond at 0 */) {
                      case 0: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 767 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBN";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 1: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 779 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBNE";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 2: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 755 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBLG";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 3: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 851 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBUL";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 4: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 731 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBL";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 5: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 827 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBUG";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 6: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 707 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBG";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 7: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 803 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBU";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 8: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 683 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBA";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 9: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 695 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBE";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 10: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 815 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBUE";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 11: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 719 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBGE";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 12: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 839 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBUGE";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 13: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 743 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBLE";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 14: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 863 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBULE";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 15: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 791 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "FBO";

                          }

                          
                          
                          
                        }
                        
                        break;
                      default: assert(0);
                    } /* (MATCH_w_32_0 >> 25 & 0xf) -- cond at 0 --*/  
                break;
              case 7: 
                if ((MATCH_w_32_0 >> 29 & 0x1) /* a at 0 */ == 1) 
                  
                    switch((MATCH_w_32_0 >> 25 & 0xf) /* cond at 0 */) {
                      case 0: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 661 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CBN,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 1: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 589 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB123,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 2: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 577 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB12,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 3: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 601 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB13,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 4: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 565 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB1,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 5: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 625 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB23,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 6: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 613 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB2,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 7: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 637 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB3,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 8: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 649 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CBA,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 9: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 481 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB0,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 10: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 553 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB03,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 11: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 529 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB02,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 12: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 541 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB023,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 13: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 493 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB01,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 14: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 517 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB013,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 15: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 505 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB012,a";

                          }

                          
                          
                          
                        }
                        
                        break;
                      default: assert(0);
                    } /* (MATCH_w_32_0 >> 25 & 0xf) -- cond at 0 --*/  
                else 
                  
                    switch((MATCH_w_32_0 >> 25 & 0xf) /* cond at 0 */) {
                      case 0: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 655 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CBN";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 1: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 583 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB123";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 2: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 571 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB12";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 3: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 595 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB13";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 4: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 559 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB1";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 5: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 619 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB23";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 6: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 607 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB2";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 7: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 631 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB3";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 8: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 643 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CBA";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 9: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 475 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB0";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 10: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 547 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB03";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 11: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 523 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB02";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 12: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 535 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB023";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 13: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 487 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB01";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 14: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 511 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB013";

                          }

                          
                          
                          
                        }
                        
                        break;
                      case 15: 
                        { 
                          unsigned reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 499 "dynamic/emu/spathfinder.m"
                           {

                          char tmp1[15];

                          IMMEDTOSTRING( tmp1, reloc, 15 );

                          snprintf( buf, buflen, "%s", tmp1);

                          if( opname ) *opname = "CB012";

                          }

                          
                          
                          
                        }
                        
                        break;
                      default: assert(0);
                    } /* (MATCH_w_32_0 >> 25 & 0xf) -- cond at 0 --*/  
                break;
              default: assert(0);
            } /* (MATCH_w_32_0 >> 22 & 0x7) -- op2 at 0 --*/ 
          break;
        case 1: 
          { 
            unsigned reloc = 
              4 * sign_extend((MATCH_w_32_0 & 0x3fffffff) /* disp30 at 0 */, 
                          30) + addressToPC(MATCH_p);
            nextPC = 4 + MATCH_p; 
            
            #line 1721 "dynamic/emu/spathfinder.m"
             {

            char tmp1[15];

            IMMEDTOSTRING( tmp1, reloc, 15 );

            snprintf( buf, buflen, "%s", tmp1);

            if( opname ) *opname = "call__";

            }

            
            
            
          }
          
          break;
        case 2: 
          
            switch((MATCH_w_32_0 >> 19 & 0x3f) /* op3 at 0 */) {
              case 0: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 1) 
                  if ((MATCH_w_32_0 >> 14 & 0x1f) 
                          /* rs1 at 0 */ == (MATCH_w_32_0 >> 25 & 0x1f) 
                          /* rd at 0 */) { 
                    unsigned rd = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                    int /* [~4096..4095] */ simm13 = 
                      sign_extend((MATCH_w_32_0 & 0x1fff) /* simm13 at 0 */, 
                                  13);
                    nextPC = 4 + MATCH_p; 
                    
                    #line 197 "dynamic/emu/spathfinder.m"
                     {

                    char tmp1[15];

                    IMMEDTOSTRING( tmp1, simm13, 15 );

                    snprintf( buf, buflen, "%s, %s", tmp1, rdNames[rd]);

                    if( opname ) *opname = "inc";

                    }

                    
                    
                    
                  } /*opt-block*/
                  else { 
                    unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                    unsigned reg_or_imm = addressToPC(MATCH_p);
                    unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                    nextPC = 4 + MATCH_p; 
                    
                    #line 203 "dynamic/emu/spathfinder.m"
                     {

                    char tmp2[7];

                    disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                    snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                    if( opname ) *opname = "ADD";

                    }

                    
                    
                    
                  } /*opt-block*/ /*opt-block+*/
                else { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 203 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "ADD";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                
                break;
              case 1: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 247 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "AND";

                  }

                  
                  
                  
                }
                
                break;
              case 2: 
                if ((MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */ == 0) 
                  if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0 && 
                    (1 <= (MATCH_w_32_0 & 0x1f) /* rs2 at 0 */ && 
                    (MATCH_w_32_0 & 0x1f) /* rs2 at 0 */ < 32) || 
                    (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 1) 
                    goto MATCH_label_d2;  /*opt-block+*/
                  else 
                    if ((MATCH_w_32_0 >> 14 & 0x1f) 
                            /* rs1 at 0 */ == (MATCH_w_32_0 >> 25 & 0x1f) 
                            /* rd at 0 */) { 
                      unsigned rd = 
                        (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                      unsigned reg_or_imm = addressToPC(MATCH_p);
                      nextPC = 4 + MATCH_p; 
                      
                      #line 1187 "dynamic/emu/spathfinder.m"
                       {

                      char tmp1[7];

                      disassemblereg_or_imm( reg_or_imm, tmp1, sizeof(tmp1), NULL );

                      snprintf( buf, buflen, "%s, %s", tmp1, rdNames[rd]);

                      if( opname ) *opname = "bset";

                      }

                      
                      
                      
                    } /*opt-block*/
                    else { 
                      unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                      nextPC = 4 + MATCH_p; 
                      
                      #line 1193 "dynamic/emu/spathfinder.m"
                       {

                      snprintf( buf, buflen, "%s", rdNames[rd]);

                      if( opname ) *opname = "clr";

                      }

                      
                      
                      
                    } /*opt-block*/ /*opt-block+*/ /*opt-block+*/
                else 
                  if ((MATCH_w_32_0 >> 14 & 0x1f) 
                          /* rs1 at 0 */ == (MATCH_w_32_0 >> 25 & 0x1f) 
                          /* rd at 0 */) { 
                    unsigned rd = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                    unsigned reg_or_imm = addressToPC(MATCH_p);
                    nextPC = 4 + MATCH_p; 
                    
                    #line 1187 "dynamic/emu/spathfinder.m"
                     {

                    char tmp1[7];

                    disassemblereg_or_imm( reg_or_imm, tmp1, sizeof(tmp1), NULL );

                    snprintf( buf, buflen, "%s, %s", tmp1, rdNames[rd]);

                    if( opname ) *opname = "bset";

                    }

                    
                    
                    
                  } /*opt-block*/
                  else { 
                    unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                    unsigned reg_or_imm = addressToPC(MATCH_p);
                    unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                    nextPC = 4 + MATCH_p; 
                    
                    #line 1207 "dynamic/emu/spathfinder.m"
                     {

                    char tmp2[7];

                    disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                    snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                    if( opname ) *opname = "OR";

                    }

                    
                    
                    
                  } /*opt-block*/ /*opt-block+*/
                break;
              case 3: 
                if ((MATCH_w_32_0 >> 14 & 0x1f) 
                        /* rs1 at 0 */ == (MATCH_w_32_0 >> 25 & 0x1f) 
                        /* rd at 0 */) { 
                  unsigned rd = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1703 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[7];

                  disassemblereg_or_imm( reg_or_imm, tmp1, sizeof(tmp1), NULL );

                  snprintf( buf, buflen, "%s, %s", tmp1, rdNames[rd]);

                  if( opname ) *opname = "btog";

                  }

                  
                  
                  
                } /*opt-block*/
                else { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1709 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "XOR";

                  }

                  
                  
                  
                } /*opt-block*/
                
                break;
              case 4: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 1) 
                  if ((MATCH_w_32_0 >> 14 & 0x1f) 
                          /* rs1 at 0 */ == (MATCH_w_32_0 >> 25 & 0x1f) 
                          /* rd at 0 */) { 
                    unsigned rd = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                    int /* [~4096..4095] */ simm13 = 
                      sign_extend((MATCH_w_32_0 & 0x1fff) /* simm13 at 0 */, 
                                  13);
                    nextPC = 4 + MATCH_p; 
                    
                    #line 1451 "dynamic/emu/spathfinder.m"
                     {

                    char tmp1[15];

                    IMMEDTOSTRING( tmp1, simm13, 15 );

                    snprintf( buf, buflen, "%s, %s", tmp1, rdNames[rd]);

                    if( opname ) *opname = "dec";

                    }

                    
                    
                    
                  } /*opt-block*/
                  else { 
                    unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                    unsigned reg_or_imm = addressToPC(MATCH_p);
                    unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                    nextPC = 4 + MATCH_p; 
                    
                    #line 1465 "dynamic/emu/spathfinder.m"
                     {

                    char tmp2[7];

                    disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                    snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                    if( opname ) *opname = "SUB";

                    }

                    
                    
                    
                  } /*opt-block*/ /*opt-block+*/
                else 
                  if ((MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */ == 0) 
                    if ((MATCH_w_32_0 & 0x1f) 
                            /* rs2 at 0 */ == (MATCH_w_32_0 >> 25 & 0x1f) 
                            /* rd at 0 */) { 
                      unsigned rd = (MATCH_w_32_0 & 0x1f) /* rs2 at 0 */;
                      nextPC = 4 + MATCH_p; 
                      
                      #line 1457 "dynamic/emu/spathfinder.m"
                       {

                      snprintf( buf, buflen, "%s", rdNames[rd]);

                      if( opname ) *opname = "neg";

                      }

                      
                      
                      
                    } /*opt-block*/
                    else { 
                      unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                      unsigned rs2 = (MATCH_w_32_0 & 0x1f) /* rs2 at 0 */;
                      nextPC = 4 + MATCH_p; 
                      
                      #line 1461 "dynamic/emu/spathfinder.m"
                       {

                      snprintf( buf, buflen, "%s, %s", rs2Names[rs2], rdNames[rd]);

                      if( opname ) *opname = "neg2";

                      }

                      
                      
                      
                    } /*opt-block*/ /*opt-block+*/
                  else { 
                    unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                    unsigned reg_or_imm = addressToPC(MATCH_p);
                    unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                    nextPC = 4 + MATCH_p; 
                    
                    #line 1465 "dynamic/emu/spathfinder.m"
                     {

                    char tmp2[7];

                    disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                    snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                    if( opname ) *opname = "SUB";

                    }

                    
                    
                    
                  } /*opt-block*//*opt-block+*/ /*opt-block+*/
                break;
              case 5: 
                if ((MATCH_w_32_0 >> 14 & 0x1f) 
                        /* rs1 at 0 */ == (MATCH_w_32_0 >> 25 & 0x1f) 
                        /* rd at 0 */) { 
                  unsigned rd = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 253 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[7];

                  disassemblereg_or_imm( reg_or_imm, tmp1, sizeof(tmp1), NULL );

                  snprintf( buf, buflen, "%s, %s", tmp1, rdNames[rd]);

                  if( opname ) *opname = "bclr";

                  }

                  
                  
                  
                } /*opt-block*/
                else { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 259 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "ANDN";

                  }

                  
                  
                  
                } /*opt-block*/
                
                break;
              case 6: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1213 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "ORN";

                  }

                  
                  
                  
                }
                
                break;
              case 7: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0 && 
                  (1 <= (MATCH_w_32_0 & 0x1f) /* rs2 at 0 */ && 
                  (MATCH_w_32_0 & 0x1f) /* rs2 at 0 */ < 32) || 
                  (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 1) 
                  goto MATCH_label_d3;  /*opt-block+*/
                else 
                  if ((MATCH_w_32_0 >> 14 & 0x1f) 
                          /* rs1 at 0 */ == (MATCH_w_32_0 >> 25 & 0x1f) 
                          /* rd at 0 */) { 
                    unsigned rd = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                    nextPC = 4 + MATCH_p; 
                    
                    #line 1683 "dynamic/emu/spathfinder.m"
                     {

                    snprintf( buf, buflen, "%s", rdNames[rd]);

                    if( opname ) *opname = "not";

                    }

                    
                    
                    
                  } /*opt-block*/
                  else { 
                    unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                    unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                    nextPC = 4 + MATCH_p; 
                    
                    #line 1687 "dynamic/emu/spathfinder.m"
                     {

                    snprintf( buf, buflen, "%s, %s", rs1Names[rs1], rdNames[rd]);

                    if( opname ) *opname = "not2";

                    }

                    
                    
                    
                  } /*opt-block*/ /*opt-block+*/
                
                break;
              case 8: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 209 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "ADDX";

                  }

                  
                  
                  
                }
                
                break;
              case 9: case 13: case 25: case 29: case 44: case 45: case 46: 
              case 47: case 54: case 55: case 62: case 63: 
                goto MATCH_label_d0; break;
              case 10: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1647 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "UMUL";

                  }

                  
                  
                  
                }
                
                break;
              case 11: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1301 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "SMUL";

                  }

                  
                  
                  
                }
                
                break;
              case 12: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1471 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "SUBX";

                  }

                  
                  
                  
                }
                
                break;
              case 14: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1635 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "UDIV";

                  }

                  
                  
                  
                }
                
                break;
              case 15: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1283 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "SDIV";

                  }

                  
                  
                  
                }
                
                break;
              case 16: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 1) 
                  if ((MATCH_w_32_0 >> 14 & 0x1f) 
                          /* rs1 at 0 */ == (MATCH_w_32_0 >> 25 & 0x1f) 
                          /* rd at 0 */) { 
                    unsigned rd = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                    int /* [~4096..4095] */ simm13 = 
                      sign_extend((MATCH_w_32_0 & 0x1fff) /* simm13 at 0 */, 
                                  13);
                    nextPC = 4 + MATCH_p; 
                    
                    #line 235 "dynamic/emu/spathfinder.m"
                     {

                    char tmp1[15];

                    IMMEDTOSTRING( tmp1, simm13, 15 );

                    snprintf( buf, buflen, "%s, %s", tmp1, rdNames[rd]);

                    if( opname ) *opname = "inccc";

                    }

                    
                    
                    
                  } /*opt-block*/
                  else { 
                    unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                    unsigned reg_or_imm = addressToPC(MATCH_p);
                    unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                    nextPC = 4 + MATCH_p; 
                    
                    #line 241 "dynamic/emu/spathfinder.m"
                     {

                    char tmp2[7];

                    disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                    snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                    if( opname ) *opname = "ADDcc";

                    }

                    
                    
                    
                  } /*opt-block*/ /*opt-block+*/
                else { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 241 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "ADDcc";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                
                break;
              case 17: 
                if ((MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ == 0 && 
                  (0 <= (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ && 
                  (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ < 2)) { 
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 271 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[7];

                  disassemblereg_or_imm( reg_or_imm, tmp1, sizeof(tmp1), NULL );

                  snprintf( buf, buflen, "%s, %s", tmp1, rs1Names[rs1]);

                  if( opname ) *opname = "btst";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                else { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 277 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "ANDcc";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                
                break;
              case 18: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0 && 
                  (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ == 0 && 
                  (1 <= (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */ && 
                  (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */ < 32) || 
                  (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0 && 
                  (1 <= (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ && 
                  (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ < 32) || 
                  (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 1) 
                  goto MATCH_label_d4;  /*opt-block+*/
                else { 
                  unsigned rs2 = (MATCH_w_32_0 & 0x1f) /* rs2 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1225 "dynamic/emu/spathfinder.m"
                   {

                  snprintf( buf, buflen, "%s", rs2Names[rs2]);

                  if( opname ) *opname = "tst";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                
                break;
              case 19: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1715 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "XORcc";

                  }

                  
                  
                  
                }
                
                break;
              case 20: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 1) 
                  if ((MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ == 0) 
                    goto MATCH_label_d5;  /*opt-block+*/
                  else 
                    if ((MATCH_w_32_0 >> 14 & 0x1f) 
                            /* rs1 at 0 */ == (MATCH_w_32_0 >> 25 & 0x1f) 
                            /* rd at 0 */) { 
                      unsigned rd = 
                        (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                      int /* [~4096..4095] */ simm13 = 
                        sign_extend(
                                    (MATCH_w_32_0 & 0x1fff) 
                                          /* simm13 at 0 */, 13);
                      nextPC = 4 + MATCH_p; 
                      
                      #line 1489 "dynamic/emu/spathfinder.m"
                       {

                      char tmp1[15];

                      IMMEDTOSTRING( tmp1, simm13, 15 );

                      snprintf( buf, buflen, "%s, %s", tmp1, rdNames[rd]);

                      if( opname ) *opname = "deccc";

                      }

                      
                      
                      
                    } /*opt-block*/
                    else { 
                      unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                      unsigned reg_or_imm = addressToPC(MATCH_p);
                      unsigned rs1 = 
                        (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                      nextPC = 4 + MATCH_p; 
                      
                      #line 1495 "dynamic/emu/spathfinder.m"
                       {

                      char tmp2[7];

                      disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                      snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                      if( opname ) *opname = "SUBcc";

                      }

                      
                      
                      
                    } /*opt-block*/ /*opt-block+*/ /*opt-block+*/
                else 
                  if ((MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ == 0) 
                    goto MATCH_label_d5;  /*opt-block+*/
                  else { 
                    unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                    unsigned reg_or_imm = addressToPC(MATCH_p);
                    unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                    nextPC = 4 + MATCH_p; 
                    
                    #line 1495 "dynamic/emu/spathfinder.m"
                     {

                    char tmp2[7];

                    disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                    snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                    if( opname ) *opname = "SUBcc";

                    }

                    
                    
                    
                  } /*opt-block*//*opt-block+*/ /*opt-block+*/
                break;
              case 21: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 265 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "ANDNcc";

                  }

                  
                  
                  
                }
                
                break;
              case 22: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1219 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "ORNcc";

                  }

                  
                  
                  
                }
                
                break;
              case 23: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1697 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "XNORcc";

                  }

                  
                  
                  
                }
                
                break;
              case 24: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 229 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "ADDXcc";

                  }

                  
                  
                  
                }
                
                break;
              case 26: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1653 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "UMULcc";

                  }

                  
                  
                  
                }
                
                break;
              case 27: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1307 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "SMULcc";

                  }

                  
                  
                  
                }
                
                break;
              case 28: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1477 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "SUBXcc";

                  }

                  
                  
                  
                }
                
                break;
              case 30: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1641 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "UDIVcc";

                  }

                  
                  
                  
                }
                
                break;
              case 31: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1289 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "SDIVcc";

                  }

                  
                  
                  
                }
                
                break;
              case 32: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1521 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "TADDcc";

                  }

                  
                  
                  
                }
                
                break;
              case 33: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1611 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "TSUBcc";

                  }

                  
                  
                  
                }
                
                break;
              case 34: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1527 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "TADDccTV";

                  }

                  
                  
                  
                }
                
                break;
              case 35: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1617 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "TSUBccTV";

                  }

                  
                  
                  
                }
                
                break;
              case 36: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1177 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "MULScc";

                  }

                  
                  
                  
                }
                
                break;
              case 37: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1295 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "SLL";

                  }

                  
                  
                  
                }
                
                break;
              case 38: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1319 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "SRL";

                  }

                  
                  
                  
                }
                
                break;
              case 39: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1313 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

                  if( opname ) *opname = "SRA";

                  }

                  
                  
                  
                }
                
                break;
              case 40: 
                if ((MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */ == 0) { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1253 "dynamic/emu/spathfinder.m"
                   {

                  snprintf( buf, buflen, "%%y,   %s", rdNames[rd]);

                  if( opname ) *opname = "RDY";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                else { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned rs1i = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1i at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1235 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[15];

                  IMMEDTOSTRING( tmp1, rs1i, 15 );

                  snprintf( buf, buflen, "%%asr%s, %s", tmp1, rdNames[rd]);

                  if( opname ) *opname = "RDASR";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                
                break;
              case 41: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1241 "dynamic/emu/spathfinder.m"
                   {

                  snprintf( buf, buflen, "%%psr, %s", rdNames[rd]);

                  if( opname ) *opname = "RDPSR";

                  }

                  
                  
                  
                }
                
                break;
              case 42: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1249 "dynamic/emu/spathfinder.m"
                   {

                  snprintf( buf, buflen, "%%wim, %s", rdNames[rd]);

                  if( opname ) *opname = "RDWIM";

                  }

                  
                  
                  
                }
                
                break;
              case 43: 
                { 
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1245 "dynamic/emu/spathfinder.m"
                   {

                  snprintf( buf, buflen, "%%tbr, %s", rdNames[rd]);

                  if( opname ) *opname = "RDTBR";

                  }

                  
                  
                  
                }
                
                break;
              case 48: 
                if ((MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ == 0 && 
                  (0 <= (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ && 
                  (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ < 2)) { 
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 223 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %%y", rs1Names[rs1], tmp2);

                  if( opname ) *opname = "WRY";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                else { 
                  unsigned rdi = (MATCH_w_32_0 >> 25 & 0x1f) /* rdi at 0 */;
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 215 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  char tmp3[15];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  IMMEDTOSTRING( tmp3, rdi, 15 );

                  snprintf( buf, buflen, "%s, %s, %%asr%s", rs1Names[rs1], tmp2, tmp3);

                  if( opname ) *opname = "WRASR";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                
                break;
              case 49: 
                { 
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1665 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %%psr", rs1Names[rs1], tmp2);

                  if( opname ) *opname = "WRPSR";

                  }

                  
                  
                  
                }
                
                break;
              case 50: 
                { 
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1677 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %%wim", rs1Names[rs1], tmp2);

                  if( opname ) *opname = "WRWIM";

                  }

                  
                  
                  
                }
                
                break;
              case 51: 
                { 
                  unsigned reg_or_imm = addressToPC(MATCH_p);
                  unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1671 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[7];

                  disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, %s, %%tbr", rs1Names[rs1], tmp2);

                  if( opname ) *opname = "WRTBR";

                  }

                  
                  
                  
                }
                
                break;
              case 52: 
                if (111 <= (MATCH_w_32_0 >> 5 & 0x1ff) /* opf at 0 */ && 
                  (MATCH_w_32_0 >> 5 & 0x1ff) /* opf at 0 */ < 196 || 
                  212 <= (MATCH_w_32_0 >> 5 & 0x1ff) /* opf at 0 */ && 
                  (MATCH_w_32_0 >> 5 & 0x1ff) /* opf at 0 */ < 512) 
                  goto MATCH_label_d0;  /*opt-block+*/
                else 
                  switch((MATCH_w_32_0 >> 5 & 0x1ff) /* opf at 0 */) {
                    case 0: case 2: case 3: case 4: case 6: case 7: case 8: 
                    case 10: case 11: case 12: case 13: case 14: case 15: 
                    case 16: case 17: case 18: case 19: case 20: case 21: 
                    case 22: case 23: case 24: case 25: case 26: case 27: 
                    case 28: case 29: case 30: case 31: case 32: case 33: 
                    case 34: case 35: case 36: case 37: case 38: case 39: 
                    case 40: case 44: case 45: case 46: case 47: case 48: 
                    case 49: case 50: case 51: case 52: case 53: case 54: 
                    case 55: case 56: case 57: case 58: case 59: case 60: 
                    case 61: case 62: case 63: case 64: case 68: case 72: 
                    case 76: case 80: case 81: case 82: case 83: case 84: 
                    case 85: case 86: case 87: case 88: case 89: case 90: 
                    case 91: case 92: case 93: case 94: case 95: case 96: 
                    case 97: case 98: case 99: case 100: case 101: case 102: 
                    case 103: case 104: case 106: case 107: case 108: 
                    case 109: case 197: case 202: case 207: case 208: 
                      goto MATCH_label_d0; break;
                    case 1: 
                      { 
                        unsigned fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned fs2s = (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 917 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s", fs2sNames[fs2s], fdsNames[fds]);

                        if( opname ) *opname = "FMOVs";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 5: 
                      { 
                        unsigned fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned fs2s = (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 933 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s", fs2sNames[fs2s], fdsNames[fds]);

                        if( opname ) *opname = "FNEGs";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 9: 
                      { 
                        unsigned fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned fs2s = (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 667 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s", fs2sNames[fs2s], fdsNames[fds]);

                        if( opname ) *opname = "FABSs";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 41: 
                      { 
                        unsigned fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned fs2s = (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 945 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s", fs2sNames[fs2s], fdsNames[fds]);

                        if( opname ) *opname = "FSQRTs";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 42: 
                      { 
                        unsigned fdd = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdd at 0 */;
                        unsigned fs2d = (MATCH_w_32_0 & 0x1f) /* fs2d at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 937 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s", fs2dNames[fs2d], fddNames[fdd]);

                        if( opname ) *opname = "FSQRTd";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 43: 
                      { 
                        unsigned fdq = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdq at 0 */;
                        unsigned fs2q = (MATCH_w_32_0 & 0x1f) /* fs2q at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 941 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s", fs2qNames[fs2q], fdqNames[fdq]);

                        if( opname ) *opname = "FSQRTq";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 65: 
                      { 
                        unsigned fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned fs1s = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1s at 0 */;
                        unsigned fs2s = (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 679 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s, %s", fs1sNames[fs1s], fs2sNames[fs2s], fdsNames[fds]);

                        if( opname ) *opname = "FADDs";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 66: 
                      { 
                        unsigned fdd = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdd at 0 */;
                        unsigned fs1d = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1d at 0 */;
                        unsigned fs2d = (MATCH_w_32_0 & 0x1f) /* fs2d at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 671 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s, %s", fs1dNames[fs1d], fs2dNames[fs2d], fddNames[fdd]);

                        if( opname ) *opname = "FADDd";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 67: 
                      { 
                        unsigned fdq = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdq at 0 */;
                        unsigned fs1q = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1q at 0 */;
                        unsigned fs2q = (MATCH_w_32_0 & 0x1f) /* fs2q at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 675 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s, %s", fs1qNames[fs1q], fs2qNames[fs2q], fdqNames[fdq]);

                        if( opname ) *opname = "FADDq";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 69: 
                      { 
                        unsigned fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned fs1s = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1s at 0 */;
                        unsigned fs2s = (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 957 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s, %s", fs1sNames[fs1s], fs2sNames[fs2s], fdsNames[fds]);

                        if( opname ) *opname = "FSUBs";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 70: 
                      { 
                        unsigned fdd = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdd at 0 */;
                        unsigned fs1d = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1d at 0 */;
                        unsigned fs2d = (MATCH_w_32_0 & 0x1f) /* fs2d at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 949 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s, %s", fs1dNames[fs1d], fs2dNames[fs2d], fddNames[fdd]);

                        if( opname ) *opname = "FSUBd";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 71: 
                      { 
                        unsigned fdq = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdq at 0 */;
                        unsigned fs1q = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1q at 0 */;
                        unsigned fs2q = (MATCH_w_32_0 & 0x1f) /* fs2q at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 953 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s, %s", fs1qNames[fs1q], fs2qNames[fs2q], fdqNames[fdq]);

                        if( opname ) *opname = "FSUBq";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 73: 
                      { 
                        unsigned fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned fs1s = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1s at 0 */;
                        unsigned fs2s = (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 929 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s, %s", fs1sNames[fs1s], fs2sNames[fs2s], fdsNames[fds]);

                        if( opname ) *opname = "FMULs";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 74: 
                      { 
                        unsigned fdd = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdd at 0 */;
                        unsigned fs1d = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1d at 0 */;
                        unsigned fs2d = (MATCH_w_32_0 & 0x1f) /* fs2d at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 921 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s, %s", fs1dNames[fs1d], fs2dNames[fs2d], fddNames[fdd]);

                        if( opname ) *opname = "FMULd";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 75: 
                      { 
                        unsigned fdq = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdq at 0 */;
                        unsigned fs1q = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1q at 0 */;
                        unsigned fs2q = (MATCH_w_32_0 & 0x1f) /* fs2q at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 925 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s, %s", fs1qNames[fs1q], fs2qNames[fs2q], fdqNames[fdq]);

                        if( opname ) *opname = "FMULq";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 77: 
                      { 
                        unsigned fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned fs1s = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1s at 0 */;
                        unsigned fs2s = (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 907 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s, %s", fs1sNames[fs1s], fs2sNames[fs2s], fdsNames[fds]);

                        if( opname ) *opname = "FDIVs";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 78: 
                      { 
                        unsigned fdd = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdd at 0 */;
                        unsigned fs1d = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1d at 0 */;
                        unsigned fs2d = (MATCH_w_32_0 & 0x1f) /* fs2d at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 899 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s, %s", fs1dNames[fs1d], fs2dNames[fs2d], fddNames[fdd]);

                        if( opname ) *opname = "FDIVd";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 79: 
                      { 
                        unsigned fdq = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdq at 0 */;
                        unsigned fs1q = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1q at 0 */;
                        unsigned fs2q = (MATCH_w_32_0 & 0x1f) /* fs2q at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 903 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s, %s", fs1qNames[fs1q], fs2qNames[fs2q], fdqNames[fdq]);

                        if( opname ) *opname = "FDIVq";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 105: 
                      { 
                        unsigned fdd = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdd at 0 */;
                        unsigned fs1d = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1d at 0 */;
                        unsigned fs2d = (MATCH_w_32_0 & 0x1f) /* fs2d at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 1001 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s, %s", fs1dNames[fs1d], fs2dNames[fs2d], fddNames[fdd]);

                        if( opname ) *opname = "FsMULd";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 110: 
                      { 
                        unsigned fdq = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdq at 0 */;
                        unsigned fs1q = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1q at 0 */;
                        unsigned fs2q = (MATCH_w_32_0 & 0x1f) /* fs2q at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 961 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s, %s", fs1qNames[fs1q], fs2qNames[fs2q], fdqNames[fdq]);

                        if( opname ) *opname = "FdMULq";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 196: 
                      { 
                        unsigned fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned fs2s = (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 985 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s", fs2sNames[fs2s], fdsNames[fds]);

                        if( opname ) *opname = "FiTOs";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 198: 
                      { 
                        unsigned fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned fs2d = (MATCH_w_32_0 & 0x1f) /* fs2d at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 973 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s", fs2dNames[fs2d], fdsNames[fds]);

                        if( opname ) *opname = "FdTOs";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 199: 
                      { 
                        unsigned fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned fs2q = (MATCH_w_32_0 & 0x1f) /* fs2q at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 997 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s", fs2qNames[fs2q], fdsNames[fds]);

                        if( opname ) *opname = "FqTOs";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 200: 
                      { 
                        unsigned fdd = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdd at 0 */;
                        unsigned fs2s = (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 977 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s", fs2sNames[fs2s], fddNames[fdd]);

                        if( opname ) *opname = "FiTOd";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 201: 
                      { 
                        unsigned fdd = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdd at 0 */;
                        unsigned fs2s = (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 1005 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s", fs2sNames[fs2s], fddNames[fdd]);

                        if( opname ) *opname = "FsTOd";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 203: 
                      { 
                        unsigned fdd = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdd at 0 */;
                        unsigned fs2q = (MATCH_w_32_0 & 0x1f) /* fs2q at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 989 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s", fs2qNames[fs2q], fddNames[fdd]);

                        if( opname ) *opname = "FqTOd";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 204: 
                      { 
                        unsigned fdq = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdq at 0 */;
                        unsigned fs2s = (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 981 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s", fs2sNames[fs2s], fdqNames[fdq]);

                        if( opname ) *opname = "FiTOq";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 205: 
                      { 
                        unsigned fdq = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdq at 0 */;
                        unsigned fs2s = (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 1013 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s", fs2sNames[fs2s], fdqNames[fdq]);

                        if( opname ) *opname = "FsTOq";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 206: 
                      { 
                        unsigned fdq = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdq at 0 */;
                        unsigned fs2d = (MATCH_w_32_0 & 0x1f) /* fs2d at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 969 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s", fs2dNames[fs2d], fdqNames[fdq]);

                        if( opname ) *opname = "FdTOq";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 209: 
                      { 
                        unsigned fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned fs2s = (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 1009 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s", fs2sNames[fs2s], fdsNames[fds]);

                        if( opname ) *opname = "FsTOi";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 210: 
                      { 
                        unsigned fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned fs2d = (MATCH_w_32_0 & 0x1f) /* fs2d at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 965 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s", fs2dNames[fs2d], fdsNames[fds]);

                        if( opname ) *opname = "FdTOi";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 211: 
                      { 
                        unsigned fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned fs2q = (MATCH_w_32_0 & 0x1f) /* fs2q at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 993 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s", fs2qNames[fs2q], fdsNames[fds]);

                        if( opname ) *opname = "FqTOi";

                        }

                        
                        
                        
                      }
                      
                      break;
                    default: assert(0);
                  } /* (MATCH_w_32_0 >> 5 & 0x1ff) -- opf at 0 --*/ 
                break;
              case 53: 
                if (0 <= (MATCH_w_32_0 >> 5 & 0x1ff) /* opf at 0 */ && 
                  (MATCH_w_32_0 >> 5 & 0x1ff) /* opf at 0 */ < 81 || 
                  88 <= (MATCH_w_32_0 >> 5 & 0x1ff) /* opf at 0 */ && 
                  (MATCH_w_32_0 >> 5 & 0x1ff) /* opf at 0 */ < 512) 
                  goto MATCH_label_d0;  /*opt-block+*/
                else 
                  switch((MATCH_w_32_0 >> 5 & 0x1ff) /* opf at 0 */) {
                    case 84: 
                      goto MATCH_label_d0; break;
                    case 81: 
                      { 
                        unsigned fs1s = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1s at 0 */;
                        unsigned fs2s = (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 895 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s", fs1sNames[fs1s], fs2sNames[fs2s]);

                        if( opname ) *opname = "FCMPs";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 82: 
                      { 
                        unsigned fs1d = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1d at 0 */;
                        unsigned fs2d = (MATCH_w_32_0 & 0x1f) /* fs2d at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 887 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s", fs1dNames[fs1d], fs2dNames[fs2d]);

                        if( opname ) *opname = "FCMPd";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 83: 
                      { 
                        unsigned fs1q = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1q at 0 */;
                        unsigned fs2q = (MATCH_w_32_0 & 0x1f) /* fs2q at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 891 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s", fs1qNames[fs1q], fs2qNames[fs2q]);

                        if( opname ) *opname = "FCMPq";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 85: 
                      { 
                        unsigned fs1s = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1s at 0 */;
                        unsigned fs2s = (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 883 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s", fs1sNames[fs1s], fs2sNames[fs2s]);

                        if( opname ) *opname = "FCMPEs";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 86: 
                      { 
                        unsigned fs1d = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1d at 0 */;
                        unsigned fs2d = (MATCH_w_32_0 & 0x1f) /* fs2d at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 875 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s", fs1dNames[fs1d], fs2dNames[fs2d]);

                        if( opname ) *opname = "FCMPEd";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 87: 
                      { 
                        unsigned fs1q = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1q at 0 */;
                        unsigned fs2q = (MATCH_w_32_0 & 0x1f) /* fs2q at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 879 "dynamic/emu/spathfinder.m"
                         {

                        snprintf( buf, buflen, "%s, %s", fs1qNames[fs1q], fs2qNames[fs2q]);

                        if( opname ) *opname = "FCMPEq";

                        }

                        
                        
                        
                      }
                      
                      break;
                    default: assert(0);
                  } /* (MATCH_w_32_0 >> 5 & 0x1ff) -- opf at 0 --*/ 
                break;
              case 56: 
                
                  switch((MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */) {
                    case 0: 
                      { 
                        unsigned address_ = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 1023 "dynamic/emu/spathfinder.m"
                         {

                        char tmp1[13];

                        disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                        snprintf( buf, buflen, "%s", tmp1);

                        if( opname ) *opname = "jmp";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 1: case 2: case 3: case 4: case 5: case 6: case 7: 
                    case 8: case 9: case 10: case 11: case 12: case 13: 
                    case 14: case 16: case 17: case 18: case 19: case 20: 
                    case 21: case 22: case 23: case 24: case 25: case 26: 
                    case 27: case 28: case 29: case 30: case 31: 
                      { 
                        unsigned address_ = addressToPC(MATCH_p);
                        unsigned rd = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 1037 "dynamic/emu/spathfinder.m"
                         {

                        char tmp1[13];

                        disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                        snprintf( buf, buflen, "%s, %s", tmp1, rdNames[rd]);

                        if( opname ) *opname = "JMPL";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 15: 
                      { 
                        unsigned address_ = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 1017 "dynamic/emu/spathfinder.m"
                         {

                        char tmp1[13];

                        disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                        snprintf( buf, buflen, "%s", tmp1);

                        if( opname ) *opname = "call_";

                        }

                        
                        
                        
                      }
                      
                      break;
                    default: assert(0);
                  } /* (MATCH_w_32_0 >> 25 & 0x1f) -- rd at 0 --*/ 
                break;
              case 57: 
                { 
                  unsigned address_ = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1267 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[13];

                  disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                  snprintf( buf, buflen, "%s", tmp1);

                  if( opname ) *opname = "RETT";

                  }

                  
                  
                  
                }
                
                break;
              case 58: 
                
                  switch((MATCH_w_32_0 >> 25 & 0xf) /* cond at 0 */) {
                    case 0: 
                      { 
                        unsigned address_ = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 1587 "dynamic/emu/spathfinder.m"
                         {

                        char tmp1[13];

                        disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                        snprintf( buf, buflen, "%s", tmp1);

                        if( opname ) *opname = "TN";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 1: 
                      { 
                        unsigned address_ = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 1545 "dynamic/emu/spathfinder.m"
                         {

                        char tmp1[13];

                        disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                        snprintf( buf, buflen, "%s", tmp1);

                        if( opname ) *opname = "TE";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 2: 
                      { 
                        unsigned address_ = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 1575 "dynamic/emu/spathfinder.m"
                         {

                        char tmp1[13];

                        disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                        snprintf( buf, buflen, "%s", tmp1);

                        if( opname ) *opname = "TLE";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 3: 
                      { 
                        unsigned address_ = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 1569 "dynamic/emu/spathfinder.m"
                         {

                        char tmp1[13];

                        disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                        snprintf( buf, buflen, "%s", tmp1);

                        if( opname ) *opname = "TL";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 4: 
                      { 
                        unsigned address_ = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 1581 "dynamic/emu/spathfinder.m"
                         {

                        char tmp1[13];

                        disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                        snprintf( buf, buflen, "%s", tmp1);

                        if( opname ) *opname = "TLEU";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 5: 
                      { 
                        unsigned address_ = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 1539 "dynamic/emu/spathfinder.m"
                         {

                        char tmp1[13];

                        disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                        snprintf( buf, buflen, "%s", tmp1);

                        if( opname ) *opname = "TCS";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 6: 
                      { 
                        unsigned address_ = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 1599 "dynamic/emu/spathfinder.m"
                         {

                        char tmp1[13];

                        disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                        snprintf( buf, buflen, "%s", tmp1);

                        if( opname ) *opname = "TNEG";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 7: 
                      { 
                        unsigned address_ = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 1629 "dynamic/emu/spathfinder.m"
                         {

                        char tmp1[13];

                        disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                        snprintf( buf, buflen, "%s", tmp1);

                        if( opname ) *opname = "TVS";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 8: 
                      { 
                        unsigned address_ = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 1515 "dynamic/emu/spathfinder.m"
                         {

                        char tmp1[13];

                        disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                        snprintf( buf, buflen, "%s", tmp1);

                        if( opname ) *opname = "TA";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 9: 
                      { 
                        unsigned address_ = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 1593 "dynamic/emu/spathfinder.m"
                         {

                        char tmp1[13];

                        disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                        snprintf( buf, buflen, "%s", tmp1);

                        if( opname ) *opname = "TNE";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 10: 
                      { 
                        unsigned address_ = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 1551 "dynamic/emu/spathfinder.m"
                         {

                        char tmp1[13];

                        disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                        snprintf( buf, buflen, "%s", tmp1);

                        if( opname ) *opname = "TG";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 11: 
                      { 
                        unsigned address_ = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 1557 "dynamic/emu/spathfinder.m"
                         {

                        char tmp1[13];

                        disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                        snprintf( buf, buflen, "%s", tmp1);

                        if( opname ) *opname = "TGE";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 12: 
                      { 
                        unsigned address_ = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 1563 "dynamic/emu/spathfinder.m"
                         {

                        char tmp1[13];

                        disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                        snprintf( buf, buflen, "%s", tmp1);

                        if( opname ) *opname = "TGU";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 13: 
                      { 
                        unsigned address_ = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 1533 "dynamic/emu/spathfinder.m"
                         {

                        char tmp1[13];

                        disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                        snprintf( buf, buflen, "%s", tmp1);

                        if( opname ) *opname = "TCC";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 14: 
                      { 
                        unsigned address_ = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 1605 "dynamic/emu/spathfinder.m"
                         {

                        char tmp1[13];

                        disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                        snprintf( buf, buflen, "%s", tmp1);

                        if( opname ) *opname = "TPOS";

                        }

                        
                        
                        
                      }
                      
                      break;
                    case 15: 
                      { 
                        unsigned address_ = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 1623 "dynamic/emu/spathfinder.m"
                         {

                        char tmp1[13];

                        disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                        snprintf( buf, buflen, "%s", tmp1);

                        if( opname ) *opname = "TVC";

                        }

                        
                        
                        
                      }
                      
                      break;
                    default: assert(0);
                  } /* (MATCH_w_32_0 >> 25 & 0xf) -- cond at 0 --*/ 
                break;
              case 59: 
                { 
                  unsigned address_ = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 911 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[13];

                  disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                  snprintf( buf, buflen, "%s", tmp1);

                  if( opname ) *opname = "FLUSH";

                  }

                  
                  
                  
                }
                
                break;
              case 60: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0 && 
                  (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ == 0 && 
                  (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */ == 0 && 
                  (1 <= (MATCH_w_32_0 & 0x1f) /* rs2 at 0 */ && 
                  (MATCH_w_32_0 & 0x1f) /* rs2 at 0 */ < 32) || 
                  (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0 && 
                  (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ == 0 && 
                  (1 <= (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */ && 
                  (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */ < 32) || 
                  (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0 && 
                  (1 <= (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ && 
                  (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ < 32) || 
                  (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 1) 
                  goto MATCH_label_d6;  /*opt-block+*/
                else { 
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1273 "dynamic/emu/spathfinder.m"
                   {

                  snprintf( buf, buflen, "                 ");

                  if( opname ) *opname = "save_";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                
                break;
              case 61: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0 && 
                  (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ == 0 && 
                  (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */ == 0 && 
                  (1 <= (MATCH_w_32_0 & 0x1f) /* rs2 at 0 */ && 
                  (MATCH_w_32_0 & 0x1f) /* rs2 at 0 */ < 32) || 
                  (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0 && 
                  (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ == 0 && 
                  (1 <= (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */ && 
                  (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */ < 32) || 
                  (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0 && 
                  (1 <= (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ && 
                  (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ < 32) || 
                  (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 1) 
                  goto MATCH_label_d7;  /*opt-block+*/
                else { 
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1257 "dynamic/emu/spathfinder.m"
                   {

                  snprintf( buf, buflen, "              ");

                  if( opname ) *opname = "restore_";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                
                break;
              default: assert(0);
            } /* (MATCH_w_32_0 >> 19 & 0x3f) -- op3 at 0 --*/ 
          break;
        case 3: 
          
            switch((MATCH_w_32_0 >> 19 & 0x3f) /* op3 at 0 */) {
              case 0: 
                { 
                  unsigned address_ = addressToPC(MATCH_p);
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1043 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[13];

                  disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                  snprintf( buf, buflen, "[%s], %s", tmp1, rdNames[rd]);

                  if( opname ) *opname = "LD";

                  }

                  
                  
                  
                }
                
                break;
              case 1: 
                { 
                  unsigned address_ = addressToPC(MATCH_p);
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1149 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[13];

                  disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                  snprintf( buf, buflen, "[%s], %s", tmp1, rdNames[rd]);

                  if( opname ) *opname = "LDUB";

                  }

                  
                  
                  
                }
                
                break;
              case 2: 
                { 
                  unsigned address_ = addressToPC(MATCH_p);
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1163 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[13];

                  disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                  snprintf( buf, buflen, "[%s], %s", tmp1, rdNames[rd]);

                  if( opname ) *opname = "LDUH";

                  }

                  
                  
                  
                }
                
                break;
              case 3: 
                { 
                  unsigned address_ = addressToPC(MATCH_p);
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1069 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[13];

                  disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                  snprintf( buf, buflen, "[%s], %s", tmp1, rdNames[rd]);

                  if( opname ) *opname = "LDD";

                  }

                  
                  
                  
                }
                
                break;
              case 4: 
                if ((MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ == 0 && 
                  (0 <= (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ && 
                  (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ < 2)) { 
                  unsigned address_ = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1325 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[13];

                  disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                  snprintf( buf, buflen, "[%s]", tmp1);

                  if( opname ) *opname = "clr_";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                else { 
                  unsigned address_ = addressToPC(MATCH_p);
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1331 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[13];

                  disassembleaddress_( address_, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, [%s]", rdNames[rd], tmp2);

                  if( opname ) *opname = "ST";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                
                break;
              case 5: 
                if ((MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ == 0 && 
                  (0 <= (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ && 
                  (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ < 2)) { 
                  unsigned address_ = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1345 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[13];

                  disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                  snprintf( buf, buflen, "[%s]", tmp1);

                  if( opname ) *opname = "clrb";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                else { 
                  unsigned address_ = addressToPC(MATCH_p);
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1351 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[13];

                  disassembleaddress_( address_, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, [%s]", rdNames[rd], tmp2);

                  if( opname ) *opname = "STB";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                
                break;
              case 6: 
                if ((MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ == 0 && 
                  (0 <= (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ && 
                  (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ < 2)) { 
                  unsigned address_ = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1431 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[13];

                  disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                  snprintf( buf, buflen, "[%s]", tmp1);

                  if( opname ) *opname = "clrh";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                else { 
                  unsigned address_ = addressToPC(MATCH_p);
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1437 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[13];

                  disassembleaddress_( address_, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, [%s]", rdNames[rd], tmp2);

                  if( opname ) *opname = "STH";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                
                break;
              case 7: 
                { 
                  unsigned address_ = addressToPC(MATCH_p);
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1381 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[13];

                  disassembleaddress_( address_, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, [%s]", rdNames[rd], tmp2);

                  if( opname ) *opname = "STD";

                  }

                  
                  
                  
                }
                
                break;
              case 8: case 11: case 12: case 14: case 24: case 27: case 28: 
              case 30: case 34: case 40: case 41: case 42: case 43: case 44: 
              case 45: case 46: case 47: case 50: case 56: case 57: case 58: 
              case 59: case 60: case 61: case 62: case 63: 
                goto MATCH_label_d0; break;
              case 9: 
                { 
                  unsigned address_ = addressToPC(MATCH_p);
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1107 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[13];

                  disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                  snprintf( buf, buflen, "[%s], %s", tmp1, rdNames[rd]);

                  if( opname ) *opname = "LDSB";

                  }

                  
                  
                  
                }
                
                break;
              case 10: 
                { 
                  unsigned address_ = addressToPC(MATCH_p);
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1121 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[13];

                  disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                  snprintf( buf, buflen, "[%s], %s", tmp1, rdNames[rd]);

                  if( opname ) *opname = "LDSH";

                  }

                  
                  
                  
                }
                
                break;
              case 13: 
                { 
                  unsigned address_ = addressToPC(MATCH_p);
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1135 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[13];

                  disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                  snprintf( buf, buflen, "[%s], %s", tmp1, rdNames[rd]);

                  if( opname ) *opname = "LDSTUB";

                  }

                  
                  
                  
                }
                
                break;
              case 15: 
                { 
                  unsigned address_ = addressToPC(MATCH_p);
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1501 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[13];

                  disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                  snprintf( buf, buflen, "[%s], %s", tmp1, rdNames[rd]);

                  if( opname ) *opname = "SWAP.";

                  }

                  
                  
                  
                }
                
                break;
              case 16: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0) { 
                  unsigned asi = (MATCH_w_32_0 >> 5 & 0xff) /* asi at 0 */;
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned regaddr = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1049 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[10];

                  char tmp2[15];

                  disassembleregaddr( regaddr, tmp1, sizeof(tmp1), NULL );

                  IMMEDTOSTRING( tmp2, asi, 15 );

                  snprintf( buf, buflen, "[%s]%s, %s", tmp1, tmp2, rdNames[rd]);

                  if( opname ) *opname = "LDA";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                else 
                  goto MATCH_label_d0;  /*opt-block+*/
                
                break;
              case 17: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0) { 
                  unsigned asi = (MATCH_w_32_0 >> 5 & 0xff) /* asi at 0 */;
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned regaddr = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1155 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[10];

                  char tmp2[15];

                  disassembleregaddr( regaddr, tmp1, sizeof(tmp1), NULL );

                  IMMEDTOSTRING( tmp2, asi, 15 );

                  snprintf( buf, buflen, "[%s]%s, %s", tmp1, tmp2, rdNames[rd]);

                  if( opname ) *opname = "LDUBA";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                else 
                  goto MATCH_label_d0;  /*opt-block+*/
                
                break;
              case 18: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0) { 
                  unsigned asi = (MATCH_w_32_0 >> 5 & 0xff) /* asi at 0 */;
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned regaddr = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1169 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[10];

                  char tmp2[15];

                  disassembleregaddr( regaddr, tmp1, sizeof(tmp1), NULL );

                  IMMEDTOSTRING( tmp2, asi, 15 );

                  snprintf( buf, buflen, "[%s]%s, %s", tmp1, tmp2, rdNames[rd]);

                  if( opname ) *opname = "LDUHA";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                else 
                  goto MATCH_label_d0;  /*opt-block+*/
                
                break;
              case 19: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0) { 
                  unsigned asi = (MATCH_w_32_0 >> 5 & 0xff) /* asi at 0 */;
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned regaddr = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1075 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[10];

                  char tmp2[15];

                  disassembleregaddr( regaddr, tmp1, sizeof(tmp1), NULL );

                  IMMEDTOSTRING( tmp2, asi, 15 );

                  snprintf( buf, buflen, "[%s]%s, %s", tmp1, tmp2, rdNames[rd]);

                  if( opname ) *opname = "LDDA";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                else 
                  goto MATCH_label_d0;  /*opt-block+*/
                
                break;
              case 20: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0) { 
                  unsigned asi = (MATCH_w_32_0 >> 5 & 0xff) /* asi at 0 */;
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned regaddr = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1337 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[10];

                  char tmp3[15];

                  disassembleregaddr( regaddr, tmp2, sizeof(tmp2), NULL );

                  IMMEDTOSTRING( tmp3, asi, 15 );

                  snprintf( buf, buflen, "%s, [%s]%s", rdNames[rd], tmp2, tmp3);

                  if( opname ) *opname = "STA";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                else 
                  goto MATCH_label_d0;  /*opt-block+*/
                
                break;
              case 21: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0) { 
                  unsigned asi = (MATCH_w_32_0 >> 5 & 0xff) /* asi at 0 */;
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned regaddr = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1357 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[10];

                  char tmp3[15];

                  disassembleregaddr( regaddr, tmp2, sizeof(tmp2), NULL );

                  IMMEDTOSTRING( tmp3, asi, 15 );

                  snprintf( buf, buflen, "%s, [%s]%s", rdNames[rd], tmp2, tmp3);

                  if( opname ) *opname = "STBA";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                else 
                  goto MATCH_label_d0;  /*opt-block+*/
                
                break;
              case 22: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0) { 
                  unsigned asi = (MATCH_w_32_0 >> 5 & 0xff) /* asi at 0 */;
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned regaddr = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1443 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[10];

                  char tmp3[15];

                  disassembleregaddr( regaddr, tmp2, sizeof(tmp2), NULL );

                  IMMEDTOSTRING( tmp3, asi, 15 );

                  snprintf( buf, buflen, "%s, [%s]%s", rdNames[rd], tmp2, tmp3);

                  if( opname ) *opname = "STHA";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                else 
                  goto MATCH_label_d0;  /*opt-block+*/
                
                break;
              case 23: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0) { 
                  unsigned asi = (MATCH_w_32_0 >> 5 & 0xff) /* asi at 0 */;
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned regaddr = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1387 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[10];

                  char tmp3[15];

                  disassembleregaddr( regaddr, tmp2, sizeof(tmp2), NULL );

                  IMMEDTOSTRING( tmp3, asi, 15 );

                  snprintf( buf, buflen, "%s, [%s]%s", rdNames[rd], tmp2, tmp3);

                  if( opname ) *opname = "STDA";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                else 
                  goto MATCH_label_d0;  /*opt-block+*/
                
                break;
              case 25: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0) { 
                  unsigned asi = (MATCH_w_32_0 >> 5 & 0xff) /* asi at 0 */;
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned regaddr = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1113 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[10];

                  char tmp2[15];

                  disassembleregaddr( regaddr, tmp1, sizeof(tmp1), NULL );

                  IMMEDTOSTRING( tmp2, asi, 15 );

                  snprintf( buf, buflen, "[%s]%s, %s", tmp1, tmp2, rdNames[rd]);

                  if( opname ) *opname = "LDSBA";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                else 
                  goto MATCH_label_d0;  /*opt-block+*/
                
                break;
              case 26: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0) { 
                  unsigned asi = (MATCH_w_32_0 >> 5 & 0xff) /* asi at 0 */;
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned regaddr = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1127 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[10];

                  char tmp2[15];

                  disassembleregaddr( regaddr, tmp1, sizeof(tmp1), NULL );

                  IMMEDTOSTRING( tmp2, asi, 15 );

                  snprintf( buf, buflen, "[%s]%s, %s", tmp1, tmp2, rdNames[rd]);

                  if( opname ) *opname = "LDSHA";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                else 
                  goto MATCH_label_d0;  /*opt-block+*/
                
                break;
              case 29: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0) { 
                  unsigned asi = (MATCH_w_32_0 >> 5 & 0xff) /* asi at 0 */;
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned regaddr = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1141 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[10];

                  char tmp2[15];

                  disassembleregaddr( regaddr, tmp1, sizeof(tmp1), NULL );

                  IMMEDTOSTRING( tmp2, asi, 15 );

                  snprintf( buf, buflen, "[%s]%s, %s", tmp1, tmp2, rdNames[rd]);

                  if( opname ) *opname = "LDSTUBA";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                else 
                  goto MATCH_label_d0;  /*opt-block+*/
                
                break;
              case 31: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0) { 
                  unsigned asi = (MATCH_w_32_0 >> 5 & 0xff) /* asi at 0 */;
                  unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned regaddr = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1507 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[10];

                  char tmp2[15];

                  disassembleregaddr( regaddr, tmp1, sizeof(tmp1), NULL );

                  IMMEDTOSTRING( tmp2, asi, 15 );

                  snprintf( buf, buflen, "[%s]%s, %s", tmp1, tmp2, rdNames[rd]);

                  if( opname ) *opname = "SWAPA";

                  }

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                else 
                  goto MATCH_label_d0;  /*opt-block+*/
                
                break;
              case 32: 
                { 
                  unsigned address_ = addressToPC(MATCH_p);
                  unsigned fds = (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1095 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[13];

                  disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                  snprintf( buf, buflen, "[%s], %s", tmp1, fdsNames[fds]);

                  if( opname ) *opname = "LDF";

                  }

                  
                  
                  
                }
                
                break;
              case 33: 
                { 
                  unsigned address_ = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1101 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[13];

                  disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                  snprintf( buf, buflen, "[%s], %%fsr", tmp1);

                  if( opname ) *opname = "LDFSR";

                  }

                  
                  
                  
                }
                
                break;
              case 35: 
                { 
                  unsigned address_ = addressToPC(MATCH_p);
                  unsigned fdd = (MATCH_w_32_0 >> 25 & 0x1f) /* fdd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1089 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[13];

                  disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                  snprintf( buf, buflen, "[%s], %s", tmp1, fddNames[fdd]);

                  if( opname ) *opname = "LDDF";

                  }

                  
                  
                  
                }
                
                break;
              case 36: 
                { 
                  unsigned address_ = addressToPC(MATCH_p);
                  unsigned fds = (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1419 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[13];

                  disassembleaddress_( address_, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, [%s]", fdsNames[fds], tmp2);

                  if( opname ) *opname = "STF";

                  }

                  
                  
                  
                }
                
                break;
              case 37: 
                { 
                  unsigned address_ = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1425 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[13];

                  disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                  snprintf( buf, buflen, "%%fsr, [%s]", tmp1);

                  if( opname ) *opname = "STFSR";

                  }

                  
                  
                  
                }
                
                break;
              case 38: 
                { 
                  unsigned address_ = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1413 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[13];

                  disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                  snprintf( buf, buflen, "%%fq,  [%s]", tmp1);

                  if( opname ) *opname = "STDFQ";

                  }

                  
                  
                  
                }
                
                break;
              case 39: 
                { 
                  unsigned address_ = addressToPC(MATCH_p);
                  unsigned fdd = (MATCH_w_32_0 >> 25 & 0x1f) /* fdd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1407 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[13];

                  disassembleaddress_( address_, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, [%s]", fddNames[fdd], tmp2);

                  if( opname ) *opname = "STDF";

                  }

                  
                  
                  
                }
                
                break;
              case 48: 
                { 
                  unsigned address_ = addressToPC(MATCH_p);
                  unsigned cd = (MATCH_w_32_0 >> 25 & 0x1f) /* cd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1057 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[13];

                  disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                  snprintf( buf, buflen, "[%s], %s", tmp1, cdNames[cd]);

                  if( opname ) *opname = "LDC";

                  }

                  
                  
                  
                }
                
                break;
              case 49: 
                { 
                  unsigned address_ = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1063 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[13];

                  disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                  snprintf( buf, buflen, "[%s], %%csr", tmp1);

                  if( opname ) *opname = "LDCSR";

                  }

                  
                  
                  
                }
                
                break;
              case 51: 
                { 
                  unsigned address_ = addressToPC(MATCH_p);
                  unsigned cd = (MATCH_w_32_0 >> 25 & 0x1f) /* cd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1083 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[13];

                  disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                  snprintf( buf, buflen, "[%s], %s", tmp1, cdNames[cd]);

                  if( opname ) *opname = "LDDC";

                  }

                  
                  
                  
                }
                
                break;
              case 52: 
                { 
                  unsigned address_ = addressToPC(MATCH_p);
                  unsigned cd = (MATCH_w_32_0 >> 25 & 0x1f) /* cd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1369 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[13];

                  disassembleaddress_( address_, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, [%s]", cdNames[cd], tmp2);

                  if( opname ) *opname = "STC";

                  }

                  
                  
                  
                }
                
                break;
              case 53: 
                { 
                  unsigned address_ = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1375 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[13];

                  disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                  snprintf( buf, buflen, "%%csr, [%s]", tmp1);

                  if( opname ) *opname = "STCSR";

                  }

                  
                  
                  
                }
                
                break;
              case 54: 
                { 
                  unsigned address_ = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1401 "dynamic/emu/spathfinder.m"
                   {

                  char tmp1[13];

                  disassembleaddress_( address_, tmp1, sizeof(tmp1), NULL );

                  snprintf( buf, buflen, "%%cq,  [%s]", tmp1);

                  if( opname ) *opname = "STDCQ";

                  }

                  
                  
                  
                }
                
                break;
              case 55: 
                { 
                  unsigned address_ = addressToPC(MATCH_p);
                  unsigned cd = (MATCH_w_32_0 >> 25 & 0x1f) /* cd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 1395 "dynamic/emu/spathfinder.m"
                   {

                  char tmp2[13];

                  disassembleaddress_( address_, tmp2, sizeof(tmp2), NULL );

                  snprintf( buf, buflen, "%s, [%s]", cdNames[cd], tmp2);

                  if( opname ) *opname = "STDC";

                  }

                  
                  
                  
                }
                
                break;
              default: assert(0);
            } /* (MATCH_w_32_0 >> 19 & 0x3f) -- op3 at 0 --*/ 
          break;
        default: assert(0);
      } /* (MATCH_w_32_0 >> 30 & 0x3) -- op at 0 --*/ 
    
  }goto MATCH_finished_d; 
  
  MATCH_label_d0: (void)0; /*placeholder for label*/ 
    { 
      nextPC = MATCH_p; 
      
      #line 1732 "dynamic/emu/spathfinder.m"
      { BADOPCODE(pc); };

      
      
      
    } 
    goto MATCH_finished_d; 
    
  MATCH_label_d1: (void)0; /*placeholder for label*/ 
    { 
      unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
      unsigned val = (MATCH_w_32_0 & 0x3fffff) /* imm22 at 0 */ << 10;
      nextPC = 4 + MATCH_p; 
      
      #line 1727 "dynamic/emu/spathfinder.m"
       {

      char tmp1[15];

      IMMEDTOSTRING( tmp1, val, 15 );

      snprintf( buf, buflen, "%%hi(%s), %s", tmp1, rdNames[rd]);

      if( opname ) *opname = "sethi";

      }

      
      
      
    } 
    goto MATCH_finished_d; 
    
  MATCH_label_d2: (void)0; /*placeholder for label*/ 
    if ((MATCH_w_32_0 >> 14 & 0x1f) 
            /* rs1 at 0 */ == (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */) { 
      unsigned rd = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
      unsigned reg_or_imm = addressToPC(MATCH_p);
      nextPC = 4 + MATCH_p; 
      
      #line 1187 "dynamic/emu/spathfinder.m"
       {

      char tmp1[7];

      disassemblereg_or_imm( reg_or_imm, tmp1, sizeof(tmp1), NULL );

      snprintf( buf, buflen, "%s, %s", tmp1, rdNames[rd]);

      if( opname ) *opname = "bset";

      }

      
      
      
    } /*opt-block*/
    else { 
      unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
      unsigned reg_or_imm = addressToPC(MATCH_p);
      nextPC = 4 + MATCH_p; 
      
      #line 1197 "dynamic/emu/spathfinder.m"
       {

      char tmp1[7];

      disassemblereg_or_imm( reg_or_imm, tmp1, sizeof(tmp1), NULL );

      snprintf( buf, buflen, "%s, %s", tmp1, rdNames[rd]);

      if( opname ) *opname = "mov";

      }

      
      
      
    } /*opt-block*/ 
    goto MATCH_finished_d; 
    
  MATCH_label_d3: (void)0; /*placeholder for label*/ 
    { 
      unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
      unsigned reg_or_imm = addressToPC(MATCH_p);
      unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
      nextPC = 4 + MATCH_p; 
      
      #line 1691 "dynamic/emu/spathfinder.m"
       {

      char tmp2[7];

      disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

      snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

      if( opname ) *opname = "XNOR";

      }

      
      
      
    } 
    goto MATCH_finished_d; 
    
  MATCH_label_d4: (void)0; /*placeholder for label*/ 
    { 
      unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
      unsigned reg_or_imm = addressToPC(MATCH_p);
      unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
      nextPC = 4 + MATCH_p; 
      
      #line 1229 "dynamic/emu/spathfinder.m"
       {

      char tmp2[7];

      disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

      snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

      if( opname ) *opname = "ORcc";

      }

      
      
      
    } 
    goto MATCH_finished_d; 
    
  MATCH_label_d5: (void)0; /*placeholder for label*/ 
    { 
      unsigned reg_or_imm = addressToPC(MATCH_p);
      unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
      nextPC = 4 + MATCH_p; 
      
      #line 1483 "dynamic/emu/spathfinder.m"
       {

      char tmp2[7];

      disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

      snprintf( buf, buflen, "%s, %s", rs1Names[rs1], tmp2);

      if( opname ) *opname = "cmp";

      }

      
      
      
    } 
    goto MATCH_finished_d; 
    
  MATCH_label_d6: (void)0; /*placeholder for label*/ 
    { 
      unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
      unsigned reg_or_imm = addressToPC(MATCH_p);
      unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
      nextPC = 4 + MATCH_p; 
      
      #line 1277 "dynamic/emu/spathfinder.m"
       {

      char tmp2[7];

      disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

      snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

      if( opname ) *opname = "SAVE";

      }

      
      
      
    } 
    goto MATCH_finished_d; 
    
  MATCH_label_d7: (void)0; /*placeholder for label*/ 
    { 
      unsigned rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
      unsigned reg_or_imm = addressToPC(MATCH_p);
      unsigned rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
      nextPC = 4 + MATCH_p; 
      
      #line 1261 "dynamic/emu/spathfinder.m"
       {

      char tmp2[7];

      disassemblereg_or_imm( reg_or_imm, tmp2, sizeof(tmp2), NULL );

      snprintf( buf, buflen, "%s, %s, %s", rs1Names[rs1], tmp2, rdNames[rd]);

      if( opname ) *opname = "RESTORE";

      }

      
      
      
    } 
    goto MATCH_finished_d; 
    
  MATCH_finished_d: (void)0; /*placeholder for label*/
  
}

#line 1735 "dynamic/emu/spathfinder.m"
return nextPC;

}

disasm_fmt_t defDisasmFmt = { "%08X: ", "%02x ", 1, 6, 10, 32, true, false };

int sprintDisassembleInst( int pc, char *buf, int buflen,
                           disasm_fmt_t &fmt = defDisasmFmt )        
{
    char operands[80];
    char *opname;
    int pos = 0;
    int npc = disassembleInstruction( pc, operands,
                                      sizeof(operands), &opname );
    pos += snprintf( buf+pos, buflen-pos, fmt.addrfmt, pc );
    if( fmt.showHex ) {
        for( int i=0; i < fmt.hexlen; i+=fmt.hexwidth, pc+=fmt.hexwidth ) {
            if( pc < npc )                                                 
                pos += snprintf( buf+pos, buflen-pos, fmt.hexfmt,
                                 (int)mem[pc]&((1<<(8*fmt.hexwidth))-1) );
            else                                                           
                pos += snprintf( buf+pos, buflen-pos, "%*c",
            fmt.hexwidth*2+1, ' ' );   
        }
    }    
    pos += snprintf( buf+pos, buflen-pos, "%-*s", fmt.opnamelen, opname );
    pos += snprintf( buf+pos, buflen-pos, " " );
    pos += snprintf( buf+pos, buflen-pos, "%-*s", fmt.operandlen, operands );
    return npc;
}


void unimplemented( int pc ) {
    char buf[80];
    sprintDisassembleInst( pc, buf, sizeof(buf) );
    fprintf(stderr, "Unimplmented instruction: %s\n", buf );
    exit(1);
}

/************** Register definitions **************/
RegisterFile regs;

float64_t * regs_fdd[32] = { &(regs.r_f0to3_un.r_f0to3_str.r_f0to1_un.r_f0to1), NULL, &(regs.r_f0to3_un.r_f0to3_str.r_f2to3_un.r_f2to3), NULL, &(regs.r_f4to7_un.r_f4to7_str.r_f4to5_un.r_f4to5), NULL, &(regs.r_f4to7_un.r_f4to7_str.r_f6to7_un.r_f6to7), NULL, &(regs.r_f8to11_un.r_f8to11_str.r_f8to9_un.r_f8to9), NULL, &(regs.r_f8to11_un.r_f8to11_str.r_f10to11_un.r_f10to11), NULL, &(regs.r_f12to15_un.r_f12to15_str.r_f12to13_un.r_f12to13), NULL, &(regs.r_f12to15_un.r_f12to15_str.r_f14to15_un.r_f14to15), NULL, &(regs.r_f16to19_un.r_f16to19_str.r_f16to17_un.r_f16to17), NULL, &(regs.r_f16to19_un.r_f16to19_str.r_f18to19_un.r_f18to19), NULL, &(regs.r_f20to23_un.r_f20to23_str.r_f20to21_un.r_f20to21), NULL, &(regs.r_f20to23_un.r_f20to23_str.r_f22to23_un.r_f22to23), NULL, &(regs.r_f24to27_un.r_f24to27_str.r_f24to25_un.r_f24to25), NULL, &(regs.r_f24to27_un.r_f24to27_str.r_f26to27_un.r_f26to27), NULL, &(regs.r_f28to31_un.r_f28to31_str.r_f28to29_un.r_f28to29), NULL, &(regs.r_f28to31_un.r_f28to31_str.r_f30to31_un.r_f30to31), NULL };
float128_t * regs_fdq[32] = { &(regs.r_f0to3_un.r_f0to3), NULL, NULL, NULL, &(regs.r_f4to7_un.r_f4to7), NULL, NULL, NULL, &(regs.r_f8to11_un.r_f8to11), NULL, NULL, NULL, &(regs.r_f12to15_un.r_f12to15), NULL, NULL, NULL, &(regs.r_f16to19_un.r_f16to19), NULL, NULL, NULL, &(regs.r_f20to23_un.r_f20to23), NULL, NULL, NULL, &(regs.r_f24to27_un.r_f24to27), NULL, NULL, NULL, &(regs.r_f28to31_un.r_f28to31), NULL, NULL, NULL };
float32_t * regs_fds[32] = { &(regs.r_f0to3_un.r_f0to3_str.r_f0to1_un.r_f0to1_str.r_f0), &(regs.r_f0to3_un.r_f0to3_str.r_f0to1_un.r_f0to1_str.r_f1), &(regs.r_f0to3_un.r_f0to3_str.r_f2to3_un.r_f2to3_str.r_f2), &(regs.r_f0to3_un.r_f0to3_str.r_f2to3_un.r_f2to3_str.r_f3), &(regs.r_f4to7_un.r_f4to7_str.r_f4to5_un.r_f4to5_str.r_f4), &(regs.r_f4to7_un.r_f4to7_str.r_f4to5_un.r_f4to5_str.r_f5), &(regs.r_f4to7_un.r_f4to7_str.r_f6to7_un.r_f6to7_str.r_f6), &(regs.r_f4to7_un.r_f4to7_str.r_f6to7_un.r_f6to7_str.r_f7), &(regs.r_f8to11_un.r_f8to11_str.r_f8to9_un.r_f8to9_str.r_f8), &(regs.r_f8to11_un.r_f8to11_str.r_f8to9_un.r_f8to9_str.r_f9), &(regs.r_f8to11_un.r_f8to11_str.r_f10to11_un.r_f10to11_str.r_f10), &(regs.r_f8to11_un.r_f8to11_str.r_f10to11_un.r_f10to11_str.r_f11), &(regs.r_f12to15_un.r_f12to15_str.r_f12to13_un.r_f12to13_str.r_f12), &(regs.r_f12to15_un.r_f12to15_str.r_f12to13_un.r_f12to13_str.r_f13), &(regs.r_f12to15_un.r_f12to15_str.r_f14to15_un.r_f14to15_str.r_f14), &(regs.r_f12to15_un.r_f12to15_str.r_f14to15_un.r_f14to15_str.r_f15), &(regs.r_f16to19_un.r_f16to19_str.r_f16to17_un.r_f16to17_str.r_f16), &(regs.r_f16to19_un.r_f16to19_str.r_f16to17_un.r_f16to17_str.r_f17), &(regs.r_f16to19_un.r_f16to19_str.r_f18to19_un.r_f18to19_str.r_f18), &(regs.r_f16to19_un.r_f16to19_str.r_f18to19_un.r_f18to19_str.r_f19), &(regs.r_f20to23_un.r_f20to23_str.r_f20to21_un.r_f20to21_str.r_f20), &(regs.r_f20to23_un.r_f20to23_str.r_f20to21_un.r_f20to21_str.r_f21), &(regs.r_f20to23_un.r_f20to23_str.r_f22to23_un.r_f22to23_str.r_f22), &(regs.r_f20to23_un.r_f20to23_str.r_f22to23_un.r_f22to23_str.r_f23), &(regs.r_f24to27_un.r_f24to27_str.r_f24to25_un.r_f24to25_str.r_f24), &(regs.r_f24to27_un.r_f24to27_str.r_f24to25_un.r_f24to25_str.r_f25), &(regs.r_f24to27_un.r_f24to27_str.r_f26to27_un.r_f26to27_str.r_f26), &(regs.r_f24to27_un.r_f24to27_str.r_f26to27_un.r_f26to27_str.r_f27), &(regs.r_f28to31_un.r_f28to31_str.r_f28to29_un.r_f28to29_str.r_f28), &(regs.r_f28to31_un.r_f28to31_str.r_f28to29_un.r_f28to29_str.r_f29), &(regs.r_f28to31_un.r_f28to31_str.r_f30to31_un.r_f30to31_str.r_f30), &(regs.r_f28to31_un.r_f28to31_str.r_f30to31_un.r_f30to31_str.r_f31) };


/**************** Register Dumping ****************/
void dumpControlRegisters( FILE * out )
{
fprintf( out, "%%CWP: %08x %%FGF: %s %%FLF: %s %%FSR: %08x %%FZF: %s %%PSR: %08x %%TBR: %08x %%WIM: %08x \n", regs.r_CWP, regs.r_FGF? "true " : "false", regs.r_FLF? "true " : "false", regs.r_FSR, regs.r_FZF? "true " : "false", regs.r_PSR, regs.r_TBR, regs.r_WIM);
fprintf( out, "%%Y: %08x %%npc: %08x %%pc: %08x Flags: %c%c%c%c%c \n", regs.r_Y, regs.r_npc, regs.r_pc, regs.r_AF? 'A' : '-', regs.r_CF? 'C' : '-', regs.r_NF? 'N' : '-', regs.r_OF? 'O' : '-', regs.r_ZF? 'Z' : '-');
}
void dumpMainRegisters( FILE * out )
{
fprintf( out, "%%g0: %08x %%g1: %08x %%g2: %08x %%g3: %08x %%g4: %08x %%g5: %08x %%g6: %08x %%g7: %08x \n", regs.rd[0], regs.rd[1], regs.rd[2], regs.rd[3], regs.rd[4], regs.rd[5], regs.rd[6], regs.rd[7]);
fprintf( out, "%%o0: %08x %%o1: %08x %%o2: %08x %%o3: %08x %%o4: %08x %%o5: %08x %%sp: %08x %%o7: %08x \n", regs.rd[8], regs.rd[9], regs.rd[10], regs.rd[11], regs.rd[12], regs.rd[13], regs.rd[14], regs.rd[15]);
fprintf( out, "%%l0: %08x %%l1: %08x %%l2: %08x %%l3: %08x %%l4: %08x %%l5: %08x %%l6: %08x %%l7: %08x \n", regs.rd[16], regs.rd[17], regs.rd[18], regs.rd[19], regs.rd[20], regs.rd[21], regs.rd[22], regs.rd[23]);
fprintf( out, "%%i0: %08x %%i1: %08x %%i2: %08x %%i3: %08x %%i4: %08x %%i5: %08x %%fp: %08x %%i7: %08x \n", regs.rd[24], regs.rd[25], regs.rd[26], regs.rd[27], regs.rd[28], regs.rd[29], regs.rd[30], regs.rd[31]);
fprintf( out, "%%CWP: %08x %%FGF: %s %%FLF: %s %%FSR: %08x %%FZF: %s %%PSR: %08x %%TBR: %08x %%WIM: %08x \n", regs.r_CWP, regs.r_FGF? "true " : "false", regs.r_FLF? "true " : "false", regs.r_FSR, regs.r_FZF? "true " : "false", regs.r_PSR, regs.r_TBR, regs.r_WIM);
fprintf( out, "%%Y: %08x %%npc: %08x %%pc: %08x Flags: %c%c%c%c%c \n", regs.r_Y, regs.r_npc, regs.r_pc, regs.r_AF? 'A' : '-', regs.r_CF? 'C' : '-', regs.r_NF? 'N' : '-', regs.r_OF? 'O' : '-', regs.r_ZF? 'Z' : '-');
}
void dumpFloatRegisters( FILE * out )
{
fprintf( out, "%%f0: %+.8e %%f1: %+.8e %%f2: %+.8e %%f3: %+.8e %%f4: %+.8e %%f5: %+.8e \n", regs.r_f0to3_un.r_f0to3_str.r_f0to1_un.r_f0to1_str.r_f0, regs.r_f0to3_un.r_f0to3_str.r_f0to1_un.r_f0to1_str.r_f1, regs.r_f0to3_un.r_f0to3_str.r_f2to3_un.r_f2to3_str.r_f2, regs.r_f0to3_un.r_f0to3_str.r_f2to3_un.r_f2to3_str.r_f3, regs.r_f4to7_un.r_f4to7_str.r_f4to5_un.r_f4to5_str.r_f4, regs.r_f4to7_un.r_f4to7_str.r_f4to5_un.r_f4to5_str.r_f5);
fprintf( out, "%%f6: %+.8e %%f7: %+.8e %%f8: %+.8e %%f9: %+.8e %%f10: %+.8e \n", regs.r_f4to7_un.r_f4to7_str.r_f6to7_un.r_f6to7_str.r_f6, regs.r_f4to7_un.r_f4to7_str.r_f6to7_un.r_f6to7_str.r_f7, regs.r_f8to11_un.r_f8to11_str.r_f8to9_un.r_f8to9_str.r_f8, regs.r_f8to11_un.r_f8to11_str.r_f8to9_un.r_f8to9_str.r_f9, regs.r_f8to11_un.r_f8to11_str.r_f10to11_un.r_f10to11_str.r_f10);
fprintf( out, "%%f11: %+.8e %%f12: %+.8e %%f13: %+.8e %%f14: %+.8e %%f15: %+.8e \n", regs.r_f8to11_un.r_f8to11_str.r_f10to11_un.r_f10to11_str.r_f11, regs.r_f12to15_un.r_f12to15_str.r_f12to13_un.r_f12to13_str.r_f12, regs.r_f12to15_un.r_f12to15_str.r_f12to13_un.r_f12to13_str.r_f13, regs.r_f12to15_un.r_f12to15_str.r_f14to15_un.r_f14to15_str.r_f14, regs.r_f12to15_un.r_f12to15_str.r_f14to15_un.r_f14to15_str.r_f15);
fprintf( out, "%%f16: %+.8e %%f17: %+.8e %%f18: %+.8e %%f19: %+.8e %%f20: %+.8e \n", regs.r_f16to19_un.r_f16to19_str.r_f16to17_un.r_f16to17_str.r_f16, regs.r_f16to19_un.r_f16to19_str.r_f16to17_un.r_f16to17_str.r_f17, regs.r_f16to19_un.r_f16to19_str.r_f18to19_un.r_f18to19_str.r_f18, regs.r_f16to19_un.r_f16to19_str.r_f18to19_un.r_f18to19_str.r_f19, regs.r_f20to23_un.r_f20to23_str.r_f20to21_un.r_f20to21_str.r_f20);
fprintf( out, "%%f21: %+.8e %%f22: %+.8e %%f23: %+.8e %%f24: %+.8e %%f25: %+.8e \n", regs.r_f20to23_un.r_f20to23_str.r_f20to21_un.r_f20to21_str.r_f21, regs.r_f20to23_un.r_f20to23_str.r_f22to23_un.r_f22to23_str.r_f22, regs.r_f20to23_un.r_f20to23_str.r_f22to23_un.r_f22to23_str.r_f23, regs.r_f24to27_un.r_f24to27_str.r_f24to25_un.r_f24to25_str.r_f24, regs.r_f24to27_un.r_f24to27_str.r_f24to25_un.r_f24to25_str.r_f25);
fprintf( out, "%%f26: %+.8e %%f27: %+.8e %%f28: %+.8e %%f29: %+.8e %%f30: %+.8e \n", regs.r_f24to27_un.r_f24to27_str.r_f26to27_un.r_f26to27_str.r_f26, regs.r_f24to27_un.r_f24to27_str.r_f26to27_un.r_f26to27_str.r_f27, regs.r_f28to31_un.r_f28to31_str.r_f28to29_un.r_f28to29_str.r_f28, regs.r_f28to31_un.r_f28to31_str.r_f28to29_un.r_f28to29_str.r_f29, regs.r_f28to31_un.r_f28to31_str.r_f30to31_un.r_f30to31_str.r_f30);
fprintf( out, "%%f31: %+.8e \n", regs.r_f28to31_un.r_f28to31_str.r_f30to31_un.r_f30to31_str.r_f31);
}
void dumpAllRegisters( FILE * out )
{
fprintf( out, "%%g0: %08x %%g1: %08x %%g2: %08x %%g3: %08x %%g4: %08x %%g5: %08x %%g6: %08x %%g7: %08x \n", regs.rd[0], regs.rd[1], regs.rd[2], regs.rd[3], regs.rd[4], regs.rd[5], regs.rd[6], regs.rd[7]);
fprintf( out, "%%o0: %08x %%o1: %08x %%o2: %08x %%o3: %08x %%o4: %08x %%o5: %08x %%sp: %08x %%o7: %08x \n", regs.rd[8], regs.rd[9], regs.rd[10], regs.rd[11], regs.rd[12], regs.rd[13], regs.rd[14], regs.rd[15]);
fprintf( out, "%%l0: %08x %%l1: %08x %%l2: %08x %%l3: %08x %%l4: %08x %%l5: %08x %%l6: %08x %%l7: %08x \n", regs.rd[16], regs.rd[17], regs.rd[18], regs.rd[19], regs.rd[20], regs.rd[21], regs.rd[22], regs.rd[23]);
fprintf( out, "%%i0: %08x %%i1: %08x %%i2: %08x %%i3: %08x %%i4: %08x %%i5: %08x %%fp: %08x %%i7: %08x \n", regs.rd[24], regs.rd[25], regs.rd[26], regs.rd[27], regs.rd[28], regs.rd[29], regs.rd[30], regs.rd[31]);
fprintf( out, "%%CWP: %08x %%FGF: %s %%FLF: %s %%FSR: %08x %%FZF: %s %%PSR: %08x %%TBR: %08x %%WIM: %08x \n", regs.r_CWP, regs.r_FGF? "true " : "false", regs.r_FLF? "true " : "false", regs.r_FSR, regs.r_FZF? "true " : "false", regs.r_PSR, regs.r_TBR, regs.r_WIM);
fprintf( out, "%%Y: %08x %%npc: %08x %%pc: %08x Flags: %c%c%c%c%c \n", regs.r_Y, regs.r_npc, regs.r_pc, regs.r_AF? 'A' : '-', regs.r_CF? 'C' : '-', regs.r_NF? 'N' : '-', regs.r_OF? 'O' : '-', regs.r_ZF? 'Z' : '-');
fprintf( out, "%%f0: %+.8e %%f1: %+.8e %%f2: %+.8e %%f3: %+.8e %%f4: %+.8e %%f5: %+.8e \n", regs.r_f0to3_un.r_f0to3_str.r_f0to1_un.r_f0to1_str.r_f0, regs.r_f0to3_un.r_f0to3_str.r_f0to1_un.r_f0to1_str.r_f1, regs.r_f0to3_un.r_f0to3_str.r_f2to3_un.r_f2to3_str.r_f2, regs.r_f0to3_un.r_f0to3_str.r_f2to3_un.r_f2to3_str.r_f3, regs.r_f4to7_un.r_f4to7_str.r_f4to5_un.r_f4to5_str.r_f4, regs.r_f4to7_un.r_f4to7_str.r_f4to5_un.r_f4to5_str.r_f5);
fprintf( out, "%%f6: %+.8e %%f7: %+.8e %%f8: %+.8e %%f9: %+.8e %%f10: %+.8e \n", regs.r_f4to7_un.r_f4to7_str.r_f6to7_un.r_f6to7_str.r_f6, regs.r_f4to7_un.r_f4to7_str.r_f6to7_un.r_f6to7_str.r_f7, regs.r_f8to11_un.r_f8to11_str.r_f8to9_un.r_f8to9_str.r_f8, regs.r_f8to11_un.r_f8to11_str.r_f8to9_un.r_f8to9_str.r_f9, regs.r_f8to11_un.r_f8to11_str.r_f10to11_un.r_f10to11_str.r_f10);
fprintf( out, "%%f11: %+.8e %%f12: %+.8e %%f13: %+.8e %%f14: %+.8e %%f15: %+.8e \n", regs.r_f8to11_un.r_f8to11_str.r_f10to11_un.r_f10to11_str.r_f11, regs.r_f12to15_un.r_f12to15_str.r_f12to13_un.r_f12to13_str.r_f12, regs.r_f12to15_un.r_f12to15_str.r_f12to13_un.r_f12to13_str.r_f13, regs.r_f12to15_un.r_f12to15_str.r_f14to15_un.r_f14to15_str.r_f14, regs.r_f12to15_un.r_f12to15_str.r_f14to15_un.r_f14to15_str.r_f15);
fprintf( out, "%%f16: %+.8e %%f17: %+.8e %%f18: %+.8e %%f19: %+.8e %%f20: %+.8e \n", regs.r_f16to19_un.r_f16to19_str.r_f16to17_un.r_f16to17_str.r_f16, regs.r_f16to19_un.r_f16to19_str.r_f16to17_un.r_f16to17_str.r_f17, regs.r_f16to19_un.r_f16to19_str.r_f18to19_un.r_f18to19_str.r_f18, regs.r_f16to19_un.r_f16to19_str.r_f18to19_un.r_f18to19_str.r_f19, regs.r_f20to23_un.r_f20to23_str.r_f20to21_un.r_f20to21_str.r_f20);
fprintf( out, "%%f21: %+.8e %%f22: %+.8e %%f23: %+.8e %%f24: %+.8e %%f25: %+.8e \n", regs.r_f20to23_un.r_f20to23_str.r_f20to21_un.r_f20to21_str.r_f21, regs.r_f20to23_un.r_f20to23_str.r_f22to23_un.r_f22to23_str.r_f22, regs.r_f20to23_un.r_f20to23_str.r_f22to23_un.r_f22to23_str.r_f23, regs.r_f24to27_un.r_f24to27_str.r_f24to25_un.r_f24to25_str.r_f24, regs.r_f24to27_un.r_f24to27_str.r_f24to25_un.r_f24to25_str.r_f25);
fprintf( out, "%%f26: %+.8e %%f27: %+.8e %%f28: %+.8e %%f29: %+.8e %%f30: %+.8e \n", regs.r_f24to27_un.r_f24to27_str.r_f26to27_un.r_f26to27_str.r_f26, regs.r_f24to27_un.r_f24to27_str.r_f26to27_un.r_f26to27_str.r_f27, regs.r_f28to31_un.r_f28to31_str.r_f28to29_un.r_f28to29_str.r_f28, regs.r_f28to31_un.r_f28to31_str.r_f28to29_un.r_f28to29_str.r_f29, regs.r_f28to31_un.r_f28to31_str.r_f30to31_un.r_f30to31_str.r_f30);
fprintf( out, "%%f31: %+.8e \n", regs.r_f28to31_un.r_f28to31_str.r_f30to31_un.r_f30to31_str.r_f31);
}


/*********** Parameter decoding support ***********/
sint32_t inline decodeeaddr( sint32_t pc )
{


#line 1827 "dynamic/emu/spathfinder.m"
{ 
  dword MATCH_p = 
    
    #line 1827 "dynamic/emu/spathfinder.m"
    pc
    ;
  unsigned MATCH_w_32_0;
  { 
    MATCH_w_32_0 = getDword(MATCH_p); 
    if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 1) 
      if ((MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */ == 0) { 
        int /* [~4096..4095] */ op_simm13 = 
          sign_extend((MATCH_w_32_0 & 0x1fff) /* simm13 at 0 */, 13);
        
        #line 1828 "dynamic/emu/spathfinder.m"
         return ((sint32_t)( ~(((sint8_t)((op_simm13>>12)&0x1L)) - 1) << 13) | op_simm13);

        
        
        
      } /*opt-block*//*opt-block+*/
      else { 
        unsigned op_rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
        int /* [~4096..4095] */ op_simm13 = 
          sign_extend((MATCH_w_32_0 & 0x1fff) /* simm13 at 0 */, 13);
        
        #line 1829 "dynamic/emu/spathfinder.m"
         return (regs.rd[op_rs1] + ((sint32_t)( ~(((sint8_t)((op_simm13>>12)&0x1L)) - 1) << 13) | op_simm13));

        
        
        
      } /*opt-block*//*opt-block+*/ /*opt-block+*/
    else 
      if ((MATCH_w_32_0 & 0x1f) /* rs2 at 0 */ == 0) { 
        unsigned op_rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
        
        #line 1830 "dynamic/emu/spathfinder.m"
         return regs.rd[op_rs1];

        
        
        
      } /*opt-block*//*opt-block+*/
      else { 
        unsigned op_rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
        unsigned op_rs2 = (MATCH_w_32_0 & 0x1f) /* rs2 at 0 */;
        
        #line 1831 "dynamic/emu/spathfinder.m"
         return (regs.rd[op_rs1] + regs.rd[op_rs2]);

        
        
        
      } /*opt-block*//*opt-block+*/ /*opt-block+*/
    
  }goto MATCH_finished_c; 
  
  MATCH_finished_c: (void)0; /*placeholder for label*/
  
}

#line 1835 "dynamic/emu/spathfinder.m"
}
sint32_t inline decodereg_or_imm( sint32_t pc )
{


#line 1837 "dynamic/emu/spathfinder.m"
{ 
  dword MATCH_p = 
    
    #line 1837 "dynamic/emu/spathfinder.m"
    pc
    ;
  unsigned MATCH_w_32_0;
  { 
    MATCH_w_32_0 = getDword(MATCH_p); 
    if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 1) { 
      int /* [~4096..4095] */ op_simm13 = 
        sign_extend((MATCH_w_32_0 & 0x1fff) /* simm13 at 0 */, 13);
      
      #line 1838 "dynamic/emu/spathfinder.m"
       return ((sint32_t)( ~(((sint8_t)((op_simm13>>12)&0x1L)) - 1) << 13) | op_simm13);

      
      
      
    } /*opt-block*//*opt-block+*/
    else { 
      unsigned op_rs2 = (MATCH_w_32_0 & 0x1f) /* rs2 at 0 */;
      
      #line 1839 "dynamic/emu/spathfinder.m"
       return regs.rd[op_rs2];

      
      
      
    } /*opt-block*//*opt-block+*/
    
  }goto MATCH_finished_b; 
  
  MATCH_finished_b: (void)0; /*placeholder for label*/
  
}

#line 1843 "dynamic/emu/spathfinder.m"
}


/**************** Flag call macros ****************/


/******************* Operations *******************/


#include "sparc.NET.direct.extra.cc"

void inline executeADD( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
sint32_t tmp;
tmp = regs.rd[op_rs1];
regs.rd[op_rd] = (regs.rd[op_rs1] + op_regorimm);
}

void inline executeADDCC( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
sint32_t tmp;
tmp = regs.rd[op_rs1];
regs.rd[op_rd] = (regs.rd[op_rs1] + op_regorimm);
{regs.r_NF = ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)));
regs.r_ZF = ((regs.rd[op_rd] == 0) ? 1 : 0);
regs.r_OF = (((((sint8_t)((sint8_t)((tmp>>31)&0x1L))) & ((sint8_t)((sint8_t)((op_regorimm>>31)&0x1L)))) &  ! ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)))) | (( ! ((sint8_t)((sint8_t)((tmp>>31)&0x1L))) &  ! ((sint8_t)((sint8_t)((op_regorimm>>31)&0x1L)))) & ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)))));
regs.r_CF = ((((sint8_t)((sint8_t)((tmp>>31)&0x1L))) & ((sint8_t)((sint8_t)((op_regorimm>>31)&0x1L)))) | ( ! ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L))) & (((sint8_t)((sint8_t)((tmp>>31)&0x1L))) | ((sint8_t)((sint8_t)((op_regorimm>>31)&0x1L))))));
}
}

void inline executeADDX( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
sint32_t tmp;
tmp = regs.rd[op_rs1];
regs.rd[op_rd] = ((regs.rd[op_rs1] + op_regorimm) + ((sint32_t)((uint32_t)((uint8_t)(regs.r_CF&0x1L)))));
}

void inline executeADDXCC( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
sint32_t tmp;
tmp = regs.rd[op_rs1];
regs.rd[op_rd] = ((regs.rd[op_rs1] + op_regorimm) + ((sint32_t)((uint32_t)((uint8_t)(regs.r_CF&0x1L)))));
{regs.r_NF = ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)));
regs.r_ZF = ((regs.rd[op_rd] == 0) ? 1 : 0);
regs.r_OF = (((((sint8_t)((sint8_t)((tmp>>31)&0x1L))) & ((sint8_t)((sint8_t)((op_regorimm>>31)&0x1L)))) &  ! ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)))) | (( ! ((sint8_t)((sint8_t)((tmp>>31)&0x1L))) &  ! ((sint8_t)((sint8_t)((op_regorimm>>31)&0x1L)))) & ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)))));
regs.r_CF = ((((sint8_t)((sint8_t)((tmp>>31)&0x1L))) & ((sint8_t)((sint8_t)((op_regorimm>>31)&0x1L)))) | ( ! ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L))) & (((sint8_t)((sint8_t)((tmp>>31)&0x1L))) | ((sint8_t)((sint8_t)((op_regorimm>>31)&0x1L))))));
}
}

void inline executeAND( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
regs.rd[op_rd] = (regs.rd[op_rs1] & op_regorimm);
}

void inline executeANDCC( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
regs.rd[op_rd] = (regs.rd[op_rs1] & op_regorimm);
{regs.r_NF = ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)));
regs.r_ZF = ((regs.rd[op_rd] == 0) ? 1 : 0);
regs.r_OF = 0;
regs.r_CF = 0;
}
}

void inline executeANDN( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
regs.rd[op_rd] = (regs.rd[op_rs1] & ((0 - op_regorimm) - 1));
}

void inline executeANDNCC( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
regs.rd[op_rd] = (regs.rd[op_rs1] & ((0 - op_regorimm) - 1));
{regs.r_NF = ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)));
regs.r_ZF = ((regs.rd[op_rd] == 0) ? 1 : 0);
regs.r_OF = 0;
regs.r_CF = 0;
}
}

void inline executeBA( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = regs.r_npc;
regs.r_npc = ((1 == 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBAA( sint32_t op_reloc )
{
regs.r_pc = op_reloc;
regs.r_npc = (op_reloc + 4);
regs.r_CTI = 1;
}

void inline executeBCC( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = regs.r_npc;
regs.r_npc = ((regs.r_CF != 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBCCA( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = ((regs.r_CF != 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = ((regs.r_CF != 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBCLR( sint32_t op_regorimm, sint8_t op_rd )
{
regs.rd[op_rd] = (regs.rd[op_rd] & ((0 - op_regorimm) - 1));
}

void inline executeBCS( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = regs.r_npc;
regs.r_npc = ((regs.r_CF == 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBCSA( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = ((regs.r_CF == 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = ((regs.r_CF == 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBE( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = regs.r_npc;
regs.r_npc = ((regs.r_ZF == 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBEA( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = ((regs.r_ZF == 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = ((regs.r_ZF == 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBG( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = regs.r_npc;
regs.r_npc = (((regs.r_ZF | (regs.r_NF ^ regs.r_OF)) != 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBGA( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = (((regs.r_ZF | (regs.r_NF ^ regs.r_OF)) != 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = (((regs.r_ZF | (regs.r_NF ^ regs.r_OF)) != 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBGE( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = regs.r_npc;
regs.r_npc = (((regs.r_NF ^ regs.r_OF) != 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBGEA( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = (((regs.r_NF ^ regs.r_OF) != 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = (((regs.r_NF ^ regs.r_OF) != 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBGU( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = regs.r_npc;
regs.r_npc = (((regs.r_CF | regs.r_ZF) != 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBGUA( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = (((regs.r_CF | regs.r_ZF) != 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = (((regs.r_CF | regs.r_ZF) != 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBL( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = regs.r_npc;
regs.r_npc = (((regs.r_NF ^ regs.r_OF) == 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBLA( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = (((regs.r_NF ^ regs.r_OF) == 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = (((regs.r_NF ^ regs.r_OF) == 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBLE( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = regs.r_npc;
regs.r_npc = (((regs.r_ZF | (regs.r_NF ^ regs.r_OF)) == 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBLEA( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = (((regs.r_ZF | (regs.r_NF ^ regs.r_OF)) == 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = (((regs.r_ZF | (regs.r_NF ^ regs.r_OF)) == 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBLEU( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = regs.r_npc;
regs.r_npc = (((regs.r_CF | regs.r_ZF) == 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBLEUA( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = (((regs.r_CF | regs.r_ZF) == 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = (((regs.r_CF | regs.r_ZF) == 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBN( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = regs.r_npc;
regs.r_npc = ((0 == 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBNA( sint32_t op_reloc )
{
regs.r_pc = (regs.r_npc + 4);
regs.r_npc = (regs.r_npc + 8);
regs.r_CTI = 1;
}

void inline executeBNE( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = regs.r_npc;
regs.r_npc = ((regs.r_ZF != 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBNEA( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = ((regs.r_ZF != 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = ((regs.r_ZF != 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBNEG( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = regs.r_npc;
regs.r_npc = ((regs.r_NF == 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBNEGA( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = ((regs.r_NF == 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = ((regs.r_NF == 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBPOS( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = regs.r_npc;
regs.r_npc = ((regs.r_NF != 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBPOSA( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = ((regs.r_NF != 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = ((regs.r_NF != 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBSET( sint32_t op_regorimm, sint8_t op_rd )
{
regs.rd[op_rd] = (regs.rd[op_rd] | op_regorimm);
}

void inline executeBTOG( sint32_t op_regorimm, sint8_t op_rd )
{
regs.rd[op_rd] = (regs.rd[op_rd] ^ op_regorimm);
}

void inline executeBTST( sint32_t op_regorimm, sint8_t op_rs1 )
{
regs.rd[0] = (regs.rd[op_rs1] & op_regorimm);
{regs.r_NF = ((sint8_t)((sint8_t)((regs.rd[0]>>31)&0x1L)));
regs.r_ZF = ((regs.rd[0] == 0) ? 1 : 0);
regs.r_OF = 0;
regs.r_CF = 0;
}
}

void inline executeBVC( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = regs.r_npc;
regs.r_npc = ((regs.r_OF != 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBVCA( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = ((regs.r_OF != 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = ((regs.r_OF != 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBVS( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = regs.r_npc;
regs.r_npc = ((regs.r_OF == 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeBVSA( sint32_t op_reloc )
{

	int oldpc = regs.r_pc;		
 
 regs.r_pc = ((regs.r_OF == 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = ((regs.r_OF == 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;

  
	// check back branches
	if (oldpc > op_reloc) {
		if (trace_mode) {
			// regardless of whether back branch is taken, trace ends
			// item 2 of Dynamo's end of trace condition
			// - hot trace can only have one loop
			end_build_trace(oldpc, op_reloc);
			// end_build_trace(oldpc, regs.r_pc);
		} else {
		
   			// branch is taken
			if (regs.r_npc == op_reloc) {			
 				// check to see if target is in the fragment cache
				map<pair<unsigned,unsigned>, Fragment>::iterator mi = 
				 entry_points.find(pair<unsigned,unsigned>(oldpc, op_reloc));
 				if (mi == entry_points.end()) {				
 	  				increment_counter(oldpc, op_reloc, 0);
				} else {
					jump_to_fragment((*mi).second.host_address);
				}
			}
		}
  	}
}

void inline executeCALL_( sint32_t op_eaddr )
{

	if (trace_mode) {
		// monitor the value of eaddr
		monitor_eaddr(regs.r_pc, op_eaddr);		
	}
  sint32_t tmp;
tmp = op_eaddr;
regs.rd[15] = regs.r_pc;
regs.r_pc = regs.r_npc;
regs.r_npc = tmp;
regs.r_CTI = 1;
}

void inline executeCALL__( sint32_t op_reloc )
{
regs.rd[15] = regs.r_pc;
regs.r_pc = regs.r_npc;
regs.r_npc = op_reloc;
regs.r_CTI = 1;
}

void inline executeCLR( sint8_t op_rd )
{
regs.rd[op_rd] = (regs.rd[0] | regs.rd[0]);
}

void inline executeCLRB( sint32_t op_eaddr )
{
setMemsint8_t(op_eaddr, ((sint8_t)regs.rd[0])) ;
}

void inline executeCLRH( sint32_t op_eaddr )
{
setMemsint16_t(op_eaddr, ((sint16_t)regs.rd[0])) ;
}

void inline executeCLR_( sint32_t op_eaddr )
{
setMemsint32_t(op_eaddr, regs.rd[0]) ;
}

void inline executeCMP( sint8_t op_rs1, sint32_t op_regorimm )
{
sint32_t tmp;
tmp = regs.rd[op_rs1];
regs.rd[0] = (regs.rd[op_rs1] - op_regorimm);
{regs.r_NF = ((sint8_t)((sint8_t)((regs.rd[0]>>31)&0x1L)));
regs.r_ZF = ((regs.rd[0] == 0) ? 1 : 0);
regs.r_OF = (((((sint8_t)((sint8_t)((tmp>>31)&0x1L))) &  ! ((sint8_t)((sint8_t)((op_regorimm>>31)&0x1L)))) &  ! ((sint8_t)((sint8_t)((regs.rd[0]>>31)&0x1L)))) | (( ! ((sint8_t)((sint8_t)((tmp>>31)&0x1L))) & ((sint8_t)((sint8_t)((op_regorimm>>31)&0x1L)))) & ((sint8_t)((sint8_t)((regs.rd[0]>>31)&0x1L)))));
regs.r_CF = (( ! ((sint8_t)((sint8_t)((tmp>>31)&0x1L))) & ((sint8_t)((sint8_t)((op_regorimm>>31)&0x1L)))) | (((sint8_t)((sint8_t)((regs.rd[0]>>31)&0x1L))) & ( ! ((sint8_t)((sint8_t)((tmp>>31)&0x1L))) | ((sint8_t)((sint8_t)((op_regorimm>>31)&0x1L))))));
}
}

void inline executeDEC( sint16_t op_simm13, sint8_t op_rd )
{
sint32_t tmp;
tmp = regs.rd[op_rd];
regs.rd[op_rd] = (regs.rd[op_rd] - ((sint32_t)( ~(((sint8_t)((op_simm13>>12)&0x1L)) - 1) << 13) | op_simm13));
}

void inline executeDECCC( sint16_t op_simm13, sint8_t op_rd )
{
sint32_t tmp;
tmp = regs.rd[op_rd];
regs.rd[op_rd] = (regs.rd[op_rd] - ((sint32_t)( ~(((sint8_t)((op_simm13>>12)&0x1L)) - 1) << 13) | op_simm13));
{regs.r_NF = ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)));
regs.r_ZF = ((regs.rd[op_rd] == 0) ? 1 : 0);
regs.r_OF = (((((sint8_t)((sint8_t)((tmp>>31)&0x1L))) &  ! ((sint8_t)((sint8_t)((((sint32_t)( ~(((sint8_t)((op_simm13>>12)&0x1L)) - 1) << 13) | op_simm13)>>31)&0x1L)))) &  ! ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)))) | (( ! ((sint8_t)((sint8_t)((tmp>>31)&0x1L))) & ((sint8_t)((sint8_t)((((sint32_t)( ~(((sint8_t)((op_simm13>>12)&0x1L)) - 1) << 13) | op_simm13)>>31)&0x1L)))) & ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)))));
regs.r_CF = (( ! ((sint8_t)((sint8_t)((tmp>>31)&0x1L))) & ((sint8_t)((sint8_t)((((sint32_t)( ~(((sint8_t)((op_simm13>>12)&0x1L)) - 1) << 13) | op_simm13)>>31)&0x1L)))) | (((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L))) & ( ! ((sint8_t)((sint8_t)((tmp>>31)&0x1L))) | ((sint8_t)((sint8_t)((((sint32_t)( ~(((sint8_t)((op_simm13>>12)&0x1L)) - 1) << 13) | op_simm13)>>31)&0x1L))))));
}
}

void inline executeDLY_RST_IMM( sint8_t op_rs1, sint32_t op_imm, sint8_t op_rd )
{
sint32_t tmp1;
tmp1 = (regs.rd[op_rs1] + op_imm);
regs.rd[8] = regs.rd[24];
regs.rd[9] = regs.rd[25];
regs.rd[10] = regs.rd[26];
regs.rd[11] = regs.rd[27];
regs.rd[12] = regs.rd[28];
regs.rd[13] = regs.rd[29];
regs.rd[op_rd] = tmp1;
}

void inline executeDLY_RST_REG( sint8_t op_rs1, sint8_t op_rs2, sint8_t op_rd )
{
sint32_t tmp1;
tmp1 = (regs.rd[op_rs1] + regs.rd[op_rs2]);
regs.rd[8] = regs.rd[24];
regs.rd[9] = regs.rd[25];
regs.rd[10] = regs.rd[26];
regs.rd[11] = regs.rd[27];
regs.rd[12] = regs.rd[28];
regs.rd[13] = regs.rd[29];
regs.rd[op_rd] = tmp1;
}

void inline executeFABSS( sint8_t op_fs2s, sint8_t op_fds )
{
(*(regs_fds[op_fds])) = (((*(regs_fds[op_fs2s])) < 0) ? (0 - (*(regs_fds[op_fs2s]))) : (*(regs_fds[op_fs2s])));
}

void inline executeFADDD( sint8_t op_fs1d, sint8_t op_fs2d, sint8_t op_fdd )
{
(*(regs_fdd[op_fdd])) = ((*(regs_fdd[op_fs1d])) + (*(regs_fdd[op_fs2d])));
}

void inline executeFADDQ( sint8_t op_fs1q, sint8_t op_fs2q, sint8_t op_fdq )
{
(*(regs_fdq[op_fdq])) = ((*(regs_fdq[op_fs1q])) + (*(regs_fdq[op_fs2q])));
}

void inline executeFADDS( sint8_t op_fs1s, sint8_t op_fs2s, sint8_t op_fds )
{
(*(regs_fds[op_fds])) = ((*(regs_fds[op_fs1s])) + (*(regs_fds[op_fs2s])));
}

void inline executeFBA( sint32_t op_reloc )
{
regs.r_pc = regs.r_npc;
regs.r_npc = ((1 == 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBAA( sint32_t op_reloc )
{
regs.r_pc = op_reloc;
regs.r_npc = (op_reloc + 4);
regs.r_CTI = 1;
}

void inline executeFBE( sint32_t op_reloc )
{
regs.r_pc = regs.r_npc;
regs.r_npc = ((regs.r_FZF == 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBEA( sint32_t op_reloc )
{
regs.r_pc = ((regs.r_FZF == 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = ((regs.r_FZF == 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBG( sint32_t op_reloc )
{
regs.r_pc = regs.r_npc;
regs.r_npc = ((regs.r_FGF == 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBGA( sint32_t op_reloc )
{
regs.r_pc = ((regs.r_FGF == 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = ((regs.r_FGF == 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBGE( sint32_t op_reloc )
{
regs.r_pc = regs.r_npc;
regs.r_npc = (((regs.r_FGF | regs.r_FZF) == 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBGEA( sint32_t op_reloc )
{
regs.r_pc = (((regs.r_FGF | regs.r_FZF) == 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = (((regs.r_FGF | regs.r_FZF) == 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBL( sint32_t op_reloc )
{
regs.r_pc = regs.r_npc;
regs.r_npc = ((regs.r_FLF == 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBLA( sint32_t op_reloc )
{
regs.r_pc = ((regs.r_FLF == 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = ((regs.r_FLF == 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBLE( sint32_t op_reloc )
{
regs.r_pc = regs.r_npc;
regs.r_npc = (((regs.r_FZF | regs.r_FLF) == 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBLEA( sint32_t op_reloc )
{
regs.r_pc = (((regs.r_FZF | regs.r_FLF) == 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = (((regs.r_FZF | regs.r_FLF) == 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBLG( sint32_t op_reloc )
{
regs.r_pc = regs.r_npc;
regs.r_npc = (((regs.r_FGF | regs.r_FLF) == 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBLGA( sint32_t op_reloc )
{
regs.r_pc = (((regs.r_FGF | regs.r_FLF) == 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = (((regs.r_FGF | regs.r_FLF) == 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBN( sint32_t op_reloc )
{
regs.r_pc = regs.r_npc;
regs.r_npc = ((0 == 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBNA( sint32_t op_reloc )
{
regs.r_pc = (regs.r_npc + 4);
regs.r_npc = (regs.r_npc + 8);
regs.r_CTI = 1;
}

void inline executeFBNE( sint32_t op_reloc )
{
regs.r_pc = regs.r_npc;
regs.r_npc = ((regs.r_FZF != 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBNEA( sint32_t op_reloc )
{
regs.r_pc = ((regs.r_FZF != 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = ((regs.r_FZF != 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBO( sint32_t op_reloc )
{
regs.r_pc = regs.r_npc;
regs.r_npc = ((((regs.r_FZF | regs.r_FGF) | regs.r_FLF) == 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBOA( sint32_t op_reloc )
{
regs.r_pc = ((((regs.r_FZF | regs.r_FGF) | regs.r_FLF) == 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = ((((regs.r_FZF | regs.r_FGF) | regs.r_FLF) == 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBU( sint32_t op_reloc )
{
regs.r_pc = regs.r_npc;
regs.r_npc = ((((regs.r_FZF | regs.r_FGF) | regs.r_FLF) != 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBUA( sint32_t op_reloc )
{
regs.r_pc = ((((regs.r_FZF | regs.r_FGF) | regs.r_FLF) != 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = ((((regs.r_FZF | regs.r_FGF) | regs.r_FLF) != 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBUE( sint32_t op_reloc )
{
regs.r_pc = regs.r_npc;
regs.r_npc = (((regs.r_FGF | regs.r_FLF) != 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBUEA( sint32_t op_reloc )
{
regs.r_pc = (((regs.r_FGF | regs.r_FLF) != 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = (((regs.r_FGF | regs.r_FLF) != 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBUG( sint32_t op_reloc )
{
regs.r_pc = regs.r_npc;
regs.r_npc = (((regs.r_FZF | regs.r_FLF) != 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBUGA( sint32_t op_reloc )
{
regs.r_pc = (((regs.r_FZF | regs.r_FLF) != 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = (((regs.r_FZF | regs.r_FLF) != 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBUGE( sint32_t op_reloc )
{
regs.r_pc = regs.r_npc;
regs.r_npc = ((regs.r_FLF != 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBUGEA( sint32_t op_reloc )
{
regs.r_pc = ((regs.r_FLF != 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = ((regs.r_FLF != 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBUL( sint32_t op_reloc )
{
regs.r_pc = regs.r_npc;
regs.r_npc = (((regs.r_FZF | regs.r_FGF) != 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBULA( sint32_t op_reloc )
{
regs.r_pc = (((regs.r_FZF | regs.r_FGF) != 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = (((regs.r_FZF | regs.r_FGF) != 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBULE( sint32_t op_reloc )
{
regs.r_pc = regs.r_npc;
regs.r_npc = ((regs.r_FGF != 0) ? (regs.r_npc + 4) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFBULEA( sint32_t op_reloc )
{
regs.r_pc = ((regs.r_FGF != 0) ? (regs.r_npc + 4) : regs.r_npc);
regs.r_npc = ((regs.r_FGF != 0) ? (regs.r_npc + 8) : op_reloc);
regs.r_CTI = 1;
}

void inline executeFCMPD( sint8_t op_fs1d, sint8_t op_fs2d )
{
float64_t tmpd;
tmpd = ((*(regs_fdd[op_fs1d])) - (*(regs_fdd[op_fs2d])));
{regs.r_FZF = (((*(regs_fdd[op_fs1d])) == (*(regs_fdd[op_fs2d]))) ? 1 : 0);
regs.r_FLF = (((*(regs_fdd[op_fs1d])) < (*(regs_fdd[op_fs2d]))) ? 1 : 0);
regs.r_FGF = (((*(regs_fdd[op_fs1d])) > (*(regs_fdd[op_fs2d]))) ? 1 : 0);
}
}

void inline executeFCMPED( sint8_t op_fs1d, sint8_t op_fs2d )
{
float64_t tmpd;
tmpd = ((*(regs_fdd[op_fs1d])) - (*(regs_fdd[op_fs2d])));
{regs.r_FZF = (((*(regs_fdd[op_fs1d])) == (*(regs_fdd[op_fs2d]))) ? 1 : 0);
regs.r_FLF = (((*(regs_fdd[op_fs1d])) < (*(regs_fdd[op_fs2d]))) ? 1 : 0);
regs.r_FGF = (((*(regs_fdd[op_fs1d])) > (*(regs_fdd[op_fs2d]))) ? 1 : 0);
}
}

void inline executeFCMPEQ( sint8_t op_fs1q, sint8_t op_fs2q )
{
float128_t tmpD;
tmpD = ((*(regs_fdq[op_fs1q])) - (*(regs_fdq[op_fs2q])));
{regs.r_FZF = (((*(regs_fdq[op_fs1q])) == (*(regs_fdq[op_fs2q]))) ? 1 : 0);
regs.r_FLF = (((*(regs_fdq[op_fs1q])) < (*(regs_fdq[op_fs2q]))) ? 1 : 0);
regs.r_FGF = (((*(regs_fdq[op_fs1q])) > (*(regs_fdq[op_fs2q]))) ? 1 : 0);
}
}

void inline executeFCMPES( sint8_t op_fs1s, sint8_t op_fs2s )
{
float32_t tmpf;
tmpf = ((*(regs_fds[op_fs1s])) - (*(regs_fds[op_fs2s])));
{regs.r_FZF = (((*(regs_fds[op_fs1s])) == (*(regs_fds[op_fs2s]))) ? 1 : 0);
regs.r_FLF = (((*(regs_fds[op_fs1s])) < (*(regs_fds[op_fs2s]))) ? 1 : 0);
regs.r_FGF = (((*(regs_fds[op_fs1s])) > (*(regs_fds[op_fs2s]))) ? 1 : 0);
}
}

void inline executeFCMPQ( sint8_t op_fs1q, sint8_t op_fs2q )
{
float128_t tmpD;
tmpD = ((*(regs_fdq[op_fs1q])) - (*(regs_fdq[op_fs2q])));
{regs.r_FZF = (((*(regs_fdq[op_fs1q])) == (*(regs_fdq[op_fs2q]))) ? 1 : 0);
regs.r_FLF = (((*(regs_fdq[op_fs1q])) < (*(regs_fdq[op_fs2q]))) ? 1 : 0);
regs.r_FGF = (((*(regs_fdq[op_fs1q])) > (*(regs_fdq[op_fs2q]))) ? 1 : 0);
}
}

void inline executeFCMPS( sint8_t op_fs1s, sint8_t op_fs2s )
{
float32_t tmpf;
tmpf = ((*(regs_fds[op_fs1s])) - (*(regs_fds[op_fs2s])));
{regs.r_FZF = (((*(regs_fds[op_fs1s])) == (*(regs_fds[op_fs2s]))) ? 1 : 0);
regs.r_FLF = (((*(regs_fds[op_fs1s])) < (*(regs_fds[op_fs2s]))) ? 1 : 0);
regs.r_FGF = (((*(regs_fds[op_fs1s])) > (*(regs_fds[op_fs2s]))) ? 1 : 0);
}
}

void inline executeFDIVD( sint8_t op_fs1d, sint8_t op_fs2d, sint8_t op_fdd )
{
(*(regs_fdd[op_fdd])) = ((*(regs_fdd[op_fs1d])) / (*(regs_fdd[op_fs2d])));
}

void inline executeFDIVQ( sint8_t op_fs1q, sint8_t op_fs2q, sint8_t op_fdq )
{
(*(regs_fdq[op_fdq])) = ((*(regs_fdq[op_fs1q])) / (*(regs_fdq[op_fs2q])));
}

void inline executeFDIVS( sint8_t op_fs1s, sint8_t op_fs2s, sint8_t op_fds )
{
(*(regs_fds[op_fds])) = ((*(regs_fds[op_fs1s])) / (*(regs_fds[op_fs2s])));
}

void inline executeFDMULQ( sint8_t op_fs1q, sint8_t op_fs2q, sint8_t op_fdq )
{
(*(regs_fdq[op_fdq])) = ((*(regs_fdq[op_fs1q])) * (*(regs_fdq[op_fs2q])));
}

void inline executeFDTOI( sint8_t op_fs2d, sint8_t op_fds )
{
(*(regs_fds[op_fds])) = sint32ToFloat32(((sint32_t)(*(regs_fdd[op_fs2d]))));
}

void inline executeFDTOQ( sint8_t op_fs2d, sint8_t op_fdq )
{
(*(regs_fdq[op_fdq])) = ((float128_t)(*(regs_fdd[op_fs2d])));
}

void inline executeFDTOS( sint8_t op_fs2d, sint8_t op_fds )
{
(*(regs_fds[op_fds])) = ((float32_t)(*(regs_fdd[op_fs2d])));
}

void inline executeFITOD( sint8_t op_fs2s, sint8_t op_fdd )
{
(*(regs_fdd[op_fdd])) = ((float64_t)float32ToSint32((*(regs_fds[op_fs2s]))));
}

void inline executeFITOQ( sint8_t op_fs2s, sint8_t op_fdq )
{
(*(regs_fdq[op_fdq])) = ((float128_t)float32ToSint32((*(regs_fds[op_fs2s]))));
}

void inline executeFITOS( sint8_t op_fs2s, sint8_t op_fds )
{
(*(regs_fds[op_fds])) = ((float32_t)float32ToSint32((*(regs_fds[op_fs2s]))));
}

void inline executeFLUSH( sint32_t op_eaddr )
{

}

void inline executeFMOVS( sint8_t op_fs2s, sint8_t op_fds )
{
(*(regs_fds[op_fds])) = (*(regs_fds[op_fs2s]));
}

void inline executeFMULD( sint8_t op_fs1d, sint8_t op_fs2d, sint8_t op_fdd )
{
(*(regs_fdd[op_fdd])) = ((*(regs_fdd[op_fs1d])) * (*(regs_fdd[op_fs2d])));
}

void inline executeFMULQ( sint8_t op_fs1q, sint8_t op_fs2q, sint8_t op_fdq )
{
(*(regs_fdq[op_fdq])) = ((*(regs_fdq[op_fs1q])) * (*(regs_fdq[op_fs2q])));
}

void inline executeFMULS( sint8_t op_fs1s, sint8_t op_fs2s, sint8_t op_fds )
{
(*(regs_fds[op_fds])) = ((*(regs_fds[op_fs1s])) * (*(regs_fds[op_fs2s])));
}

void inline executeFNEGS( sint8_t op_fs2s, sint8_t op_fds )
{
(*(regs_fds[op_fds])) = (0 - (*(regs_fds[op_fs2s])));
}

void inline executeFQTOD( sint8_t op_fs2q, sint8_t op_fdd )
{
(*(regs_fdd[op_fdd])) = ((float64_t)(*(regs_fdq[op_fs2q])));
}

void inline executeFQTOI( sint8_t op_fs2q, sint8_t op_fds )
{
(*(regs_fds[op_fds])) = sint32ToFloat32(((sint32_t)(*(regs_fdq[op_fs2q]))));
}

void inline executeFQTOS( sint8_t op_fs2q, sint8_t op_fds )
{
(*(regs_fds[op_fds])) = ((float32_t)(*(regs_fdq[op_fs2q])));
}

void inline executeFSMULD( sint8_t op_fs1d, sint8_t op_fs2d, sint8_t op_fdd )
{
(*(regs_fdd[op_fdd])) = ((*(regs_fdd[op_fs1d])) * (*(regs_fdd[op_fs2d])));
}

void inline executeFSQRTD( sint8_t op_fs2d, sint8_t op_fdd )
{
(*(regs_fdd[op_fdd])) = sqrt((*(regs_fdd[op_fs2d])));
}

void inline executeFSQRTQ( sint8_t op_fs2q, sint8_t op_fdq )
{
(*(regs_fdq[op_fdq])) = sqrt((*(regs_fdq[op_fs2q])));
}

void inline executeFSQRTS( sint8_t op_fs2s, sint8_t op_fds )
{
(*(regs_fds[op_fds])) = sqrt((*(regs_fds[op_fs2s])));
}

void inline executeFSTOD( sint8_t op_fs2s, sint8_t op_fdd )
{
(*(regs_fdd[op_fdd])) = ((float64_t)(*(regs_fds[op_fs2s])));
}

void inline executeFSTOI( sint8_t op_fs2s, sint8_t op_fds )
{
(*(regs_fds[op_fds])) = sint32ToFloat32(((sint32_t)(*(regs_fds[op_fs2s]))));
}

void inline executeFSTOQ( sint8_t op_fs2s, sint8_t op_fdq )
{
(*(regs_fdq[op_fdq])) = ((float128_t)(*(regs_fds[op_fs2s])));
}

void inline executeFSUBD( sint8_t op_fs1d, sint8_t op_fs2d, sint8_t op_fdd )
{
(*(regs_fdd[op_fdd])) = ((*(regs_fdd[op_fs1d])) - (*(regs_fdd[op_fs2d])));
}

void inline executeFSUBQ( sint8_t op_fs1q, sint8_t op_fs2q, sint8_t op_fdq )
{
(*(regs_fdq[op_fdq])) = ((*(regs_fdq[op_fs1q])) - (*(regs_fdq[op_fs2q])));
}

void inline executeFSUBS( sint8_t op_fs1s, sint8_t op_fs2s, sint8_t op_fds )
{
(*(regs_fds[op_fds])) = ((*(regs_fds[op_fs1s])) - (*(regs_fds[op_fs2s])));
}

void inline executeINC( sint16_t op_simm13, sint8_t op_rd )
{
sint32_t tmp;
tmp = regs.rd[op_rd];
regs.rd[op_rd] = (regs.rd[op_rd] + ((sint32_t)( ~(((sint8_t)((op_simm13>>12)&0x1L)) - 1) << 13) | op_simm13));
}

void inline executeINCCC( sint16_t op_simm13, sint8_t op_rd )
{
sint32_t tmp;
tmp = regs.rd[op_rd];
regs.rd[op_rd] = (regs.rd[op_rd] + ((sint32_t)( ~(((sint8_t)((op_simm13>>12)&0x1L)) - 1) << 13) | op_simm13));
{regs.r_NF = ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)));
regs.r_ZF = ((regs.rd[op_rd] == 0) ? 1 : 0);
regs.r_OF = (((((sint8_t)((sint8_t)((tmp>>31)&0x1L))) & ((sint8_t)((sint8_t)((((sint32_t)( ~(((sint8_t)((op_simm13>>12)&0x1L)) - 1) << 13) | op_simm13)>>31)&0x1L)))) &  ! ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)))) | (( ! ((sint8_t)((sint8_t)((tmp>>31)&0x1L))) &  ! ((sint8_t)((sint8_t)((((sint32_t)( ~(((sint8_t)((op_simm13>>12)&0x1L)) - 1) << 13) | op_simm13)>>31)&0x1L)))) & ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)))));
regs.r_CF = ((((sint8_t)((sint8_t)((tmp>>31)&0x1L))) & ((sint8_t)((sint8_t)((((sint32_t)( ~(((sint8_t)((op_simm13>>12)&0x1L)) - 1) << 13) | op_simm13)>>31)&0x1L)))) | ( ! ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L))) & (((sint8_t)((sint8_t)((tmp>>31)&0x1L))) | ((sint8_t)((sint8_t)((((sint32_t)( ~(((sint8_t)((op_simm13>>12)&0x1L)) - 1) << 13) | op_simm13)>>31)&0x1L))))));
}
}

void inline executeJMP( sint32_t op_eaddr )
{

	if (trace_mode) {
		// monitor the value of eaddr
		monitor_eaddr(regs.r_pc, op_eaddr);		
	}
  sint32_t tmp;
tmp = op_eaddr;
regs.rd[0] = regs.r_pc;
regs.r_pc = regs.r_npc;
regs.r_npc = tmp;
regs.r_CTI = 1;
}

void inline executeJMPL( sint32_t op_eaddr, sint8_t op_rd )
{

	if (trace_mode) {
		// monitor the value of eaddr
		monitor_eaddr(regs.r_pc, op_eaddr);		
	}
  sint32_t tmp;
tmp = op_eaddr;
regs.rd[op_rd] = regs.r_pc;
regs.r_pc = regs.r_npc;
regs.r_npc = tmp;
regs.r_CTI = 1;
}

void inline executeLD( sint32_t op_eaddr, sint8_t op_rd )
{

	if (trace_mode) {
		// monitor the value of eaddr
		// monitor_eaddr(regs.r_pc - 4, op_eaddr);		
		monitor_eaddr(regs.r_pc, op_eaddr);		
	}
  regs.rd[op_rd] = getMemsint32_t(op_eaddr) ;
}

void inline executeLDD( sint32_t op_eaddr, sint8_t op_rd )
{

	if (trace_mode) {
		// monitor the value of eaddr
		// monitor_eaddr(regs.r_pc - 4, op_eaddr);		
		monitor_eaddr(regs.r_pc, op_eaddr);		
	}
  regs.rd[(( op_rd + 0 ) & 30)- 0] = getMemsint32_t(op_eaddr) ;
regs.rd[((( op_rd + 0 ) & 30) + 1)- 0] = getMemsint32_t((op_eaddr + 4)) ;
}

void inline executeLDDF( sint32_t op_eaddr, sint8_t op_fdd )
{

	if (trace_mode) {
		// monitor the value of eaddr
		// monitor_eaddr(regs.r_pc - 4, op_eaddr);		
		monitor_eaddr(regs.r_pc, op_eaddr);		
	}
  (*(regs_fdd[op_fdd])) = getMemfloat64_t(op_eaddr) ;
}

void inline executeLDF( sint32_t op_eaddr, sint8_t op_fds )
{

	if (trace_mode) {
		// monitor the value of eaddr
		// monitor_eaddr(regs.r_pc - 4, op_eaddr);		
		monitor_eaddr(regs.r_pc, op_eaddr);		
	}
  (*(regs_fds[op_fds])) = getMemfloat32_t(op_eaddr) ;
}

void inline executeLDFSR( sint32_t op_eaddr )
{
regs.r_FSR = getMemsint32_t(op_eaddr) ;
}

void inline executeLDSB( sint32_t op_eaddr, sint8_t op_rd )
{

	if (trace_mode) {
		// monitor the value of eaddr
		// monitor_eaddr(regs.r_pc - 4, op_eaddr);		
		monitor_eaddr(regs.r_pc, op_eaddr);		
	}
  regs.rd[op_rd] = ((sint32_t)getMemsint8_t(op_eaddr) );
}

void inline executeLDSH( sint32_t op_eaddr, sint8_t op_rd )
{

	if (trace_mode) {
		// monitor the value of eaddr
		// monitor_eaddr(regs.r_pc - 4, op_eaddr);		
		monitor_eaddr(regs.r_pc, op_eaddr);		
	}
  regs.rd[op_rd] = ((sint32_t)getMemsint16_t(op_eaddr) );
}

void inline executeLDSTUB( sint32_t op_eaddr, sint8_t op_rd )
{

	if (trace_mode) {
		// monitor the value of eaddr
		// monitor_eaddr(regs.r_pc - 4, op_eaddr);		
		monitor_eaddr(regs.r_pc, op_eaddr);		
	}
  regs.rd[op_rd] = ((sint32_t)((uint32_t)((uint8_t)getMemsint8_t(op_eaddr) )));
setMemsint8_t(op_eaddr, (getMemsint8_t(op_eaddr)  | 255)) ;
}

void inline executeLDUB( sint32_t op_eaddr, sint8_t op_rd )
{

	if (trace_mode) {
		// monitor the value of eaddr
		// monitor_eaddr(regs.r_pc - 4, op_eaddr);		
		monitor_eaddr(regs.r_pc, op_eaddr);		
	}
  regs.rd[op_rd] = ((sint32_t)((uint32_t)((uint8_t)getMemsint8_t(op_eaddr) )));
}

void inline executeLDUH( sint32_t op_eaddr, sint8_t op_rd )
{

	if (trace_mode) {
		// monitor the value of eaddr
		// monitor_eaddr(regs.r_pc - 4, op_eaddr);		
		monitor_eaddr(regs.r_pc, op_eaddr);		
	}
  regs.rd[op_rd] = ((sint32_t)((uint32_t)((uint16_t)getMemsint16_t(op_eaddr) )));
}

void inline executeMOV( sint32_t op_regorimm, sint8_t op_rd )
{
regs.rd[op_rd] = (regs.rd[0] | op_regorimm);
}

void inline executeMOV_( sint8_t op_rs2, sint8_t op_rd )
{
regs.rd[op_rd] = (regs.rd[0] | regs.rd[op_rs2]);
}

void inline executeMULSCC( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
sint32_t tmp;
sint32_t tmp2;
tmp = (((sint32_t)(((uint32_t)regs.rd[op_rs1]) >> ((uint32_t)1))) | (((regs.r_NF ^ regs.r_OF) == 1) ? (1 << 31) : 0));
tmp2 = ((((sint8_t)((sint8_t)(regs.r_Y&0x1L))) == 1) ? op_regorimm : 0);
regs.r_Y = (((sint32_t)(((uint32_t)regs.r_Y) >> ((uint32_t)1))) | (regs.rd[op_rs1] << 31));
regs.rd[op_rd] = (tmp + tmp2);
{regs.r_NF = ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)));
regs.r_ZF = ((regs.rd[op_rd] == 0) ? 1 : 0);
regs.r_OF = (((((sint8_t)((sint8_t)((tmp>>31)&0x1L))) & ((sint8_t)((sint8_t)((tmp2>>31)&0x1L)))) &  ! ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)))) | (( ! ((sint8_t)((sint8_t)((tmp>>31)&0x1L))) &  ! ((sint8_t)((sint8_t)((tmp2>>31)&0x1L)))) & ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)))));
regs.r_CF = ((((sint8_t)((sint8_t)((tmp>>31)&0x1L))) & ((sint8_t)((sint8_t)((tmp2>>31)&0x1L)))) | ( ! ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L))) & (((sint8_t)((sint8_t)((tmp>>31)&0x1L))) | ((sint8_t)((sint8_t)((tmp2>>31)&0x1L))))));
}
}

void inline executeNEG( sint8_t op_rd )
{
sint32_t tmp;
tmp = regs.rd[0];
regs.rd[op_rd] = (regs.rd[0] - regs.rd[op_rd]);
}

void inline executeNEG2( sint8_t op_rs2, sint8_t op_rd )
{
sint32_t tmp;
tmp = regs.rd[0];
regs.rd[op_rd] = (regs.rd[0] - regs.rd[op_rs2]);
}

void inline executeNOP(  )
{

}

void inline executeNOT( sint8_t op_rd )
{
regs.rd[op_rd] = (regs.rd[op_rd] ^ ((0 - regs.rd[0]) - 1));
}

void inline executeNOT2( sint8_t op_rs1, sint8_t op_rd )
{
regs.rd[op_rd] = (regs.rd[op_rs1] ^ ((0 - regs.rd[0]) - 1));
}

void inline executeOR( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
regs.rd[op_rd] = (regs.rd[op_rs1] | op_regorimm);
}

void inline executeORCC( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
regs.rd[op_rd] = (regs.rd[op_rs1] | op_regorimm);
{regs.r_NF = ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)));
regs.r_ZF = ((regs.rd[op_rd] == 0) ? 1 : 0);
regs.r_OF = 0;
regs.r_CF = 0;
}
}

void inline executeORN( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
regs.rd[op_rd] = (regs.rd[op_rs1] | ((0 - op_regorimm) - 1));
}

void inline executeORNCC( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
regs.rd[op_rd] = (regs.rd[op_rs1] | ((0 - op_regorimm) - 1));
{regs.r_NF = ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)));
regs.r_ZF = ((regs.rd[op_rd] == 0) ? 1 : 0);
regs.r_OF = 0;
regs.r_CF = 0;
}
}

void inline executeRDPSR( sint8_t op_rd )
{
regs.rd[op_rd] = regs.r_PSR;
}

void inline executeRDTBR( sint8_t op_rd )
{
regs.rd[op_rd] = regs.r_TBR;
}

void inline executeRDWIM( sint8_t op_rd )
{
regs.rd[op_rd] = regs.r_WIM;
}

void inline executeRDY( sint8_t op_rd )
{
regs.rd[op_rd] = regs.r_Y;
}

void inline executeRESTORE( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
sint32_t tmp;
tmp = (regs.rd[op_rs1] + op_regorimm);
regs.rd[8] = regs.rd[24];
regs.rd[9] = regs.rd[25];
regs.rd[10] = regs.rd[26];
regs.rd[11] = regs.rd[27];
regs.rd[12] = regs.rd[28];
regs.rd[13] = regs.rd[29];
regs.rd[14] = regs.rd[30];
regs.rd[15] = regs.rd[31];
regs.rd[op_rd] = tmp;
regs.rd[16] = getMemsint32_t((regs.rd[14] + 0)) ;
regs.rd[17] = getMemsint32_t((regs.rd[14] + 4)) ;
regs.rd[18] = getMemsint32_t((regs.rd[14] + 8)) ;
regs.rd[19] = getMemsint32_t((regs.rd[14] + 12)) ;
regs.rd[20] = getMemsint32_t((regs.rd[14] + 16)) ;
regs.rd[21] = getMemsint32_t((regs.rd[14] + 20)) ;
regs.rd[22] = getMemsint32_t((regs.rd[14] + 24)) ;
regs.rd[23] = getMemsint32_t((regs.rd[14] + 28)) ;
regs.rd[24] = getMemsint32_t((regs.rd[14] + 32)) ;
regs.rd[25] = getMemsint32_t((regs.rd[14] + 36)) ;
regs.rd[26] = getMemsint32_t((regs.rd[14] + 40)) ;
regs.rd[27] = getMemsint32_t((regs.rd[14] + 44)) ;
regs.rd[28] = getMemsint32_t((regs.rd[14] + 48)) ;
regs.rd[29] = getMemsint32_t((regs.rd[14] + 52)) ;
regs.rd[30] = getMemsint32_t((regs.rd[14] + 56)) ;
regs.rd[31] = getMemsint32_t((regs.rd[14] + 60)) ;
regs.rd[op_rd] = tmp;
}

void inline executeRESTORE_(  )
{
sint32_t tmp;
tmp = (regs.rd[0] + regs.rd[0]);
regs.rd[8] = regs.rd[24];
regs.rd[9] = regs.rd[25];
regs.rd[10] = regs.rd[26];
regs.rd[11] = regs.rd[27];
regs.rd[12] = regs.rd[28];
regs.rd[13] = regs.rd[29];
regs.rd[14] = regs.rd[30];
regs.rd[15] = regs.rd[31];
regs.rd[0] = tmp;
regs.rd[16] = getMemsint32_t((regs.rd[14] + 0)) ;
regs.rd[17] = getMemsint32_t((regs.rd[14] + 4)) ;
regs.rd[18] = getMemsint32_t((regs.rd[14] + 8)) ;
regs.rd[19] = getMemsint32_t((regs.rd[14] + 12)) ;
regs.rd[20] = getMemsint32_t((regs.rd[14] + 16)) ;
regs.rd[21] = getMemsint32_t((regs.rd[14] + 20)) ;
regs.rd[22] = getMemsint32_t((regs.rd[14] + 24)) ;
regs.rd[23] = getMemsint32_t((regs.rd[14] + 28)) ;
regs.rd[24] = getMemsint32_t((regs.rd[14] + 32)) ;
regs.rd[25] = getMemsint32_t((regs.rd[14] + 36)) ;
regs.rd[26] = getMemsint32_t((regs.rd[14] + 40)) ;
regs.rd[27] = getMemsint32_t((regs.rd[14] + 44)) ;
regs.rd[28] = getMemsint32_t((regs.rd[14] + 48)) ;
regs.rd[29] = getMemsint32_t((regs.rd[14] + 52)) ;
regs.rd[30] = getMemsint32_t((regs.rd[14] + 56)) ;
regs.rd[31] = getMemsint32_t((regs.rd[14] + 60)) ;
regs.rd[0] = tmp;
}

void inline executeRET(  )
{

	int oldpc = regs.r_pc;		
  sint32_t tmp;
tmp = (regs.rd[31] + ((sint32_t)( ~(((sint8_t)((8>>12)&0x1L)) - 1) << 13) | 8));
regs.rd[0] = regs.r_pc;
regs.r_pc = regs.r_npc;
regs.r_npc = tmp;
regs.r_CTI = 1;

	if (trace_mode) {
		// monitor the value of npc
		monitor_eaddr(oldpc, regs.r_npc);		
	}
}

void inline executeRETL(  )
{

	int oldpc = regs.r_pc;		
  sint32_t tmp;
tmp = (regs.rd[15] + ((sint32_t)( ~(((sint8_t)((8>>12)&0x1L)) - 1) << 13) | 8));
regs.rd[0] = regs.r_pc;
regs.r_pc = regs.r_npc;
regs.r_npc = tmp;
regs.r_CTI = 1;

	if (trace_mode) {
		// monitor the value of npc
		monitor_eaddr(oldpc, regs.r_npc);		
	}
}

void inline executeRET_IMM_VAL( sint8_t op_rs1, sint32_t op_imm )
{
regs.rd[8] = (regs.rd[op_rs1] + op_imm);
}

void inline executeRET_REG_VAL( sint8_t op_rs1, sint8_t op_rs2 )
{
regs.rd[8] = (regs.rd[op_rs1] + regs.rd[op_rs2]);
}

void inline executeSAVE( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
sint32_t tmp;
tmp = (regs.rd[op_rs1] + op_regorimm);
setMemsint32_t((regs.rd[14] + 0), regs.rd[16]) ;
setMemsint32_t((regs.rd[14] + 4), regs.rd[17]) ;
setMemsint32_t((regs.rd[14] + 8), regs.rd[18]) ;
setMemsint32_t((regs.rd[14] + 12), regs.rd[19]) ;
setMemsint32_t((regs.rd[14] + 16), regs.rd[20]) ;
setMemsint32_t((regs.rd[14] + 20), regs.rd[21]) ;
setMemsint32_t((regs.rd[14] + 24), regs.rd[22]) ;
setMemsint32_t((regs.rd[14] + 28), regs.rd[23]) ;
setMemsint32_t((regs.rd[14] + 32), regs.rd[24]) ;
setMemsint32_t((regs.rd[14] + 36), regs.rd[25]) ;
setMemsint32_t((regs.rd[14] + 40), regs.rd[26]) ;
setMemsint32_t((regs.rd[14] + 44), regs.rd[27]) ;
setMemsint32_t((regs.rd[14] + 48), regs.rd[28]) ;
setMemsint32_t((regs.rd[14] + 52), regs.rd[29]) ;
setMemsint32_t((regs.rd[14] + 56), regs.rd[30]) ;
setMemsint32_t((regs.rd[14] + 60), regs.rd[31]) ;
regs.rd[24] = regs.rd[8];
regs.rd[25] = regs.rd[9];
regs.rd[26] = regs.rd[10];
regs.rd[27] = regs.rd[11];
regs.rd[28] = regs.rd[12];
regs.rd[29] = regs.rd[13];
regs.rd[30] = regs.rd[14];
regs.rd[31] = regs.rd[15];
regs.rd[op_rd] = tmp;
}

void inline executeSAVE_(  )
{
sint32_t tmp;
tmp = (regs.rd[0] + regs.rd[0]);
setMemsint32_t((regs.rd[14] + 0), regs.rd[16]) ;
setMemsint32_t((regs.rd[14] + 4), regs.rd[17]) ;
setMemsint32_t((regs.rd[14] + 8), regs.rd[18]) ;
setMemsint32_t((regs.rd[14] + 12), regs.rd[19]) ;
setMemsint32_t((regs.rd[14] + 16), regs.rd[20]) ;
setMemsint32_t((regs.rd[14] + 20), regs.rd[21]) ;
setMemsint32_t((regs.rd[14] + 24), regs.rd[22]) ;
setMemsint32_t((regs.rd[14] + 28), regs.rd[23]) ;
setMemsint32_t((regs.rd[14] + 32), regs.rd[24]) ;
setMemsint32_t((regs.rd[14] + 36), regs.rd[25]) ;
setMemsint32_t((regs.rd[14] + 40), regs.rd[26]) ;
setMemsint32_t((regs.rd[14] + 44), regs.rd[27]) ;
setMemsint32_t((regs.rd[14] + 48), regs.rd[28]) ;
setMemsint32_t((regs.rd[14] + 52), regs.rd[29]) ;
setMemsint32_t((regs.rd[14] + 56), regs.rd[30]) ;
setMemsint32_t((regs.rd[14] + 60), regs.rd[31]) ;
regs.rd[24] = regs.rd[8];
regs.rd[25] = regs.rd[9];
regs.rd[26] = regs.rd[10];
regs.rd[27] = regs.rd[11];
regs.rd[28] = regs.rd[12];
regs.rd[29] = regs.rd[13];
regs.rd[30] = regs.rd[14];
regs.rd[31] = regs.rd[15];
regs.rd[0] = tmp;
}

void inline executeSDIV( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
sint64_t tmpl;
tmpl = ((((sint64_t)((uint64_t)((uint32_t)regs.r_Y))) << 32) | ((sint64_t)((uint64_t)((uint32_t)regs.rd[op_rs1]))));
regs.rd[op_rd] = ((sint32_t)(tmpl / ((sint64_t)op_regorimm)));
}

void inline executeSDIVCC( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
sint64_t tmpl;
tmpl = ((((sint64_t)((uint64_t)((uint32_t)regs.r_Y))) << 32) | ((sint64_t)((uint64_t)((uint32_t)regs.rd[op_rs1]))));
regs.rd[op_rd] = ((sint32_t)(tmpl / ((sint64_t)op_regorimm)));
}

void inline executeSDIVCCQ( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
regs.rd[op_rd] = (regs.rd[op_rs1] / op_regorimm);
{regs.r_NF = ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)));
regs.r_ZF = ((regs.rd[op_rd] == 0) ? 1 : 0);
regs.r_CF = 0;
}
}

void inline executeSDIVQ( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
regs.rd[op_rd] = (regs.rd[op_rs1] / op_regorimm);
}

void inline executeSETHI( sint32_t op_val, sint8_t op_rd )
{
regs.rd[op_rd] = op_val;
}

void inline executeSLL( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
regs.rd[op_rd] = (regs.rd[op_rs1] << op_regorimm);
}

void inline executeSMUL( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
sint32_t tmp;
sint64_t tmpl;
tmp = regs.rd[op_rs1];
tmpl = (((sint64_t)regs.rd[op_rs1]) * ((sint64_t)op_regorimm));
regs.rd[op_rd] = ((sint32_t)tmpl);
regs.r_Y = ((sint32_t)((sint32_t)((tmpl>>32)&0xffffffffL)));
}

void inline executeSMULCC( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
sint32_t tmp;
sint64_t tmpl;
tmp = regs.rd[op_rs1];
tmpl = (((sint64_t)regs.rd[op_rs1]) * ((sint64_t)op_regorimm));
regs.rd[op_rd] = ((sint32_t)tmpl);
regs.r_Y = ((sint32_t)((sint32_t)((tmpl>>32)&0xffffffffL)));
{regs.r_NF = ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)));
regs.r_ZF = ((regs.rd[op_rd] == 0) ? 1 : 0);
regs.r_OF = 0;
regs.r_CF = 0;
}
}

void inline executeSMULCCQ( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
regs.rd[op_rd] = (regs.rd[op_rs1] * op_regorimm);
{regs.r_NF = ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)));
regs.r_ZF = ((regs.rd[op_rd] == 0) ? 1 : 0);
regs.r_OF = 0;
regs.r_CF = 0;
}
}

void inline executeSMULQ( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
regs.rd[op_rd] = (regs.rd[op_rs1] * op_regorimm);
}

void inline executeSRA( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
regs.rd[op_rd] = (regs.rd[op_rs1] >> op_regorimm);
}

void inline executeSRL( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
regs.rd[op_rd] = ((sint32_t)(((uint32_t)regs.rd[op_rs1]) >> ((uint32_t)op_regorimm)));
}

void inline executeST( sint8_t op_rd, sint32_t op_eaddr )
{

	if (trace_mode) {
		// monitor the value of eaddr
		monitor_eaddr(regs.r_pc, op_eaddr);		
	}
  setMemsint32_t(op_eaddr, regs.rd[op_rd]) ;
}

void inline executeSTB( sint8_t op_rd, sint32_t op_eaddr )
{

	if (trace_mode) {
		// monitor the value of eaddr
		monitor_eaddr(regs.r_pc, op_eaddr);		
	}
  setMemsint8_t(op_eaddr, ((sint8_t)regs.rd[op_rd])) ;
}

void inline executeSTBAR(  )
{

}

void inline executeSTD( sint8_t op_rd, sint32_t op_eaddr )
{

	if (trace_mode) {
		// monitor the value of eaddr
		monitor_eaddr(regs.r_pc, op_eaddr);		
	}
  setMemsint32_t(op_eaddr, regs.rd[(( op_rd + 0 ) & 30) - 0]) ;
setMemsint32_t((op_eaddr + 4), regs.rd[((( op_rd + 0 ) & 30) + 1) - 0]) ;
}

void inline executeSTDF( sint8_t op_fdd, sint32_t op_eaddr )
{

	if (trace_mode) {
		// monitor the value of eaddr
		monitor_eaddr(regs.r_pc, op_eaddr);		
	}
  setMemfloat64_t(op_eaddr, (*(regs_fdd[op_fdd]))) ;
}

void inline executeSTD_RET(  )
{
regs.rd[8] = regs.rd[24];
}

void inline executeSTF( sint8_t op_fds, sint32_t op_eaddr )
{

	if (trace_mode) {
		// monitor the value of eaddr
		monitor_eaddr(regs.r_pc, op_eaddr);		
	}
  setMemfloat32_t(op_eaddr, (*(regs_fds[op_fds]))) ;
}

void inline executeSTFSR( sint32_t op_eaddr )
{
setMemsint32_t(op_eaddr, regs.r_FSR) ;
}

void inline executeSTH( sint8_t op_rd, sint32_t op_eaddr )
{

	if (trace_mode) {
		// monitor the value of eaddr
		monitor_eaddr(regs.r_pc, op_eaddr);		
	}
  setMemsint16_t(op_eaddr, ((sint16_t)regs.rd[op_rd])) ;
}

void inline executeSUB( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
sint32_t tmp;
tmp = regs.rd[op_rs1];
regs.rd[op_rd] = (regs.rd[op_rs1] - op_regorimm);
}

void inline executeSUBCC( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
sint32_t tmp;
tmp = regs.rd[op_rs1];
regs.rd[op_rd] = (regs.rd[op_rs1] - op_regorimm);
{regs.r_NF = ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)));
regs.r_ZF = ((regs.rd[op_rd] == 0) ? 1 : 0);
regs.r_OF = (((((sint8_t)((sint8_t)((tmp>>31)&0x1L))) &  ! ((sint8_t)((sint8_t)((op_regorimm>>31)&0x1L)))) &  ! ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)))) | (( ! ((sint8_t)((sint8_t)((tmp>>31)&0x1L))) & ((sint8_t)((sint8_t)((op_regorimm>>31)&0x1L)))) & ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)))));
regs.r_CF = (( ! ((sint8_t)((sint8_t)((tmp>>31)&0x1L))) & ((sint8_t)((sint8_t)((op_regorimm>>31)&0x1L)))) | (((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L))) & ( ! ((sint8_t)((sint8_t)((tmp>>31)&0x1L))) | ((sint8_t)((sint8_t)((op_regorimm>>31)&0x1L))))));
}
}

void inline executeSUBX( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
sint32_t tmp;
tmp = regs.rd[op_rs1];
regs.rd[op_rd] = ((regs.rd[op_rs1] - op_regorimm) - ((sint32_t)((uint32_t)((uint8_t)(regs.r_CF&0x1L)))));
}

void inline executeSUBXCC( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
sint32_t tmp;
tmp = regs.rd[op_rs1];
regs.rd[op_rd] = ((regs.rd[op_rs1] - op_regorimm) - ((sint32_t)((uint32_t)((uint8_t)(regs.r_CF&0x1L)))));
{regs.r_NF = ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)));
regs.r_ZF = ((regs.rd[op_rd] == 0) ? 1 : 0);
regs.r_OF = (((((sint8_t)((sint8_t)((tmp>>31)&0x1L))) &  ! ((sint8_t)((sint8_t)((op_regorimm>>31)&0x1L)))) &  ! ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)))) | (( ! ((sint8_t)((sint8_t)((tmp>>31)&0x1L))) & ((sint8_t)((sint8_t)((op_regorimm>>31)&0x1L)))) & ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)))));
regs.r_CF = (( ! ((sint8_t)((sint8_t)((tmp>>31)&0x1L))) & ((sint8_t)((sint8_t)((op_regorimm>>31)&0x1L)))) | (((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L))) & ( ! ((sint8_t)((sint8_t)((tmp>>31)&0x1L))) | ((sint8_t)((sint8_t)((op_regorimm>>31)&0x1L))))));
}
}

void inline executeSWAP( sint32_t op_eaddr, sint8_t op_rd )
{
sint32_t tmp1;
tmp1 = regs.rd[op_rd];
regs.rd[op_rd] = getMemsint32_t(op_eaddr) ;
setMemsint32_t(op_eaddr, tmp1) ;
}

void inline executeTA( sint32_t op_eaddr )
{
doFlagTRAP((1 == 1), (op_eaddr + 128)) ;
}

void inline executeTADDCC( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
sint32_t tmp;
tmp = regs.rd[op_rs1];
regs.rd[op_rd] = (regs.rd[op_rs1] + op_regorimm);
{regs.r_NF = ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)));
regs.r_ZF = ((regs.rd[op_rd] == 0) ? 1 : 0);
regs.r_CF = ((((sint8_t)((sint8_t)((tmp>>31)&0x1L))) & ((sint8_t)((sint8_t)((op_regorimm>>31)&0x1L)))) | ( ! ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L))) & (((sint8_t)((sint8_t)((tmp>>31)&0x1L))) | ((sint8_t)((sint8_t)((op_regorimm>>31)&0x1L))))));
}
}

void inline executeTCC( sint32_t op_eaddr )
{
doFlagTRAP((regs.r_CF != 1), (op_eaddr + 128)) ;
}

void inline executeTCS( sint32_t op_eaddr )
{
doFlagTRAP((regs.r_CF == 1), (op_eaddr + 128)) ;
}

void inline executeTE( sint32_t op_eaddr )
{
doFlagTRAP((regs.r_ZF == 1), (op_eaddr + 128)) ;
}

void inline executeTG( sint32_t op_eaddr )
{
doFlagTRAP(((regs.r_ZF | (regs.r_NF ^ regs.r_OF)) != 1), (op_eaddr + 128)) ;
}

void inline executeTGE( sint32_t op_eaddr )
{
doFlagTRAP(((regs.r_NF ^ regs.r_OF) != 1), (op_eaddr + 128)) ;
}

void inline executeTGU( sint32_t op_eaddr )
{
doFlagTRAP(((regs.r_CF | regs.r_ZF) != 1), (op_eaddr + 128)) ;
}

void inline executeTL( sint32_t op_eaddr )
{
doFlagTRAP(((regs.r_NF ^ regs.r_OF) == 1), (op_eaddr + 128)) ;
}

void inline executeTLE( sint32_t op_eaddr )
{
doFlagTRAP(((regs.r_ZF | (regs.r_NF ^ regs.r_OF)) == 1), (op_eaddr + 128)) ;
}

void inline executeTLEU( sint32_t op_eaddr )
{
doFlagTRAP(((regs.r_CF | regs.r_ZF) == 1), (op_eaddr + 128)) ;
}

void inline executeTN( sint32_t op_eaddr )
{
doFlagTRAP((0 == 1), (op_eaddr + 128)) ;
}

void inline executeTNE( sint32_t op_eaddr )
{
doFlagTRAP((regs.r_ZF != 1), (op_eaddr + 128)) ;
}

void inline executeTNEG( sint32_t op_eaddr )
{
doFlagTRAP((regs.r_NF == 1), (op_eaddr + 128)) ;
}

void inline executeTPOS( sint32_t op_eaddr )
{
doFlagTRAP((regs.r_NF != 1), (op_eaddr + 128)) ;
}

void inline executeTST( sint8_t op_rs2 )
{
regs.rd[0] = (regs.rd[0] | regs.rd[op_rs2]);
{regs.r_NF = ((sint8_t)((sint8_t)((regs.rd[0]>>31)&0x1L)));
regs.r_ZF = ((regs.rd[0] == 0) ? 1 : 0);
regs.r_OF = 0;
regs.r_CF = 0;
}
}

void inline executeTSUBCC( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
sint32_t tmp;
tmp = regs.rd[op_rs1];
regs.rd[op_rd] = (regs.rd[op_rs1] - op_regorimm);
{regs.r_NF = ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)));
regs.r_ZF = ((regs.rd[op_rd] == 0) ? 1 : 0);
regs.r_CF = (( ! ((sint8_t)((sint8_t)((tmp>>31)&0x1L))) & ((sint8_t)((sint8_t)((op_regorimm>>31)&0x1L)))) | (((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L))) & ( ! ((sint8_t)((sint8_t)((tmp>>31)&0x1L))) | ((sint8_t)((sint8_t)((op_regorimm>>31)&0x1L))))));
}
}

void inline executeTVC( sint32_t op_eaddr )
{
doFlagTRAP((regs.r_OF != 1), (op_eaddr + 128)) ;
}

void inline executeTVS( sint32_t op_eaddr )
{
doFlagTRAP((regs.r_OF == 1), (op_eaddr + 128)) ;
}

void inline executeUDIV( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
sint64_t tmpl;
tmpl = ((((sint64_t)((uint64_t)((uint32_t)regs.r_Y))) << 32) | ((sint64_t)((uint64_t)((uint32_t)regs.rd[op_rs1]))));
regs.rd[op_rd] = ((sint32_t)((uint32_t)((uint64_t)((sint64_t)(((uint64_t)tmpl) / ((uint64_t)((sint64_t)((uint64_t)((uint32_t)op_regorimm)))))))));
}

void inline executeUDIVCC( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
sint64_t tmpl;
tmpl = ((((sint64_t)((uint64_t)((uint32_t)regs.r_Y))) << 32) | ((sint64_t)((uint64_t)((uint32_t)regs.rd[op_rs1]))));
regs.rd[op_rd] = ((sint32_t)((uint32_t)((uint64_t)((sint64_t)(((uint64_t)tmpl) / ((uint64_t)((sint64_t)((uint64_t)((uint32_t)op_regorimm)))))))));
}

void inline executeUDIVCCQ( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
regs.rd[op_rd] = ((sint32_t)(((uint32_t)regs.rd[op_rs1]) / ((uint32_t)op_regorimm)));
{regs.r_NF = ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)));
regs.r_ZF = ((regs.rd[op_rd] == 0) ? 1 : 0);
regs.r_CF = 0;
}
}

void inline executeUDIVQ( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
regs.rd[op_rd] = ((sint32_t)(((uint32_t)regs.rd[op_rs1]) / ((uint32_t)op_regorimm)));
}

void inline executeUMUL( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
sint32_t tmp;
sint64_t tmpl;
tmp = regs.rd[op_rs1];
tmpl = ((sint64_t)(((uint64_t)((sint64_t)((uint64_t)((uint32_t)regs.rd[op_rs1])))) * ((uint64_t)((sint64_t)((uint64_t)((uint32_t)op_regorimm))))));
regs.rd[op_rd] = ((sint32_t)tmpl);
regs.r_Y = ((sint32_t)((sint32_t)((tmpl>>32)&0xffffffffL)));
}

void inline executeUMULCC( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
sint32_t tmp;
sint64_t tmpl;
tmp = regs.rd[op_rs1];
tmpl = ((sint64_t)(((uint64_t)((sint64_t)((uint64_t)((uint32_t)regs.rd[op_rs1])))) * ((uint64_t)((sint64_t)((uint64_t)((uint32_t)op_regorimm))))));
regs.rd[op_rd] = ((sint32_t)tmpl);
regs.r_Y = ((sint32_t)((sint32_t)((tmpl>>32)&0xffffffffL)));
}

void inline executeUMULCCQ( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
regs.rd[op_rd] = ((sint32_t)(((uint32_t)regs.rd[op_rs1]) * ((uint32_t)op_regorimm)));
{regs.r_NF = ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)));
regs.r_ZF = ((regs.rd[op_rd] == 0) ? 1 : 0);
regs.r_OF = 0;
regs.r_CF = 0;
}
}

void inline executeUMULQ( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
regs.rd[op_rd] = ((sint32_t)(((uint32_t)regs.rd[op_rs1]) * ((uint32_t)op_regorimm)));
}

void inline executeUMULTCC( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
{regs.r_NF = ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)));
regs.r_ZF = ((regs.rd[op_rd] == 0) ? 1 : 0);
regs.r_OF = 0;
regs.r_CF = 0;
}
}

void inline executeWRPSR( sint8_t op_rs1, sint32_t op_regorimm )
{
regs.r_PSR = (regs.rd[op_rs1] ^ op_regorimm);
}

void inline executeWRTBR( sint8_t op_rs1, sint32_t op_regorimm )
{
regs.r_TBR = (regs.r_TBR | ((regs.rd[op_rs1] ^ op_regorimm) << 12));
}

void inline executeWRWIM( sint8_t op_rs1, sint32_t op_regorimm )
{
regs.r_WIM = (regs.rd[op_rs1] ^ op_regorimm);
}

void inline executeWRY( sint8_t op_rs1, sint32_t op_regorimm )
{
regs.r_Y = (regs.rd[op_rs1] ^ op_regorimm);
}

void inline executeXNOR( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
regs.rd[op_rd] = (regs.rd[op_rs1] ^ ((0 - op_regorimm) - 1));
}

void inline executeXNORCC( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
regs.rd[op_rd] = (regs.rd[op_rs1] ^ ((0 - op_regorimm) - 1));
{regs.r_NF = ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)));
regs.r_ZF = ((regs.rd[op_rd] == 0) ? 1 : 0);
regs.r_OF = 0;
regs.r_CF = 0;
}
}

void inline executeXOR( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
regs.rd[op_rd] = (regs.rd[op_rs1] ^ op_regorimm);
}

void inline executeXORCC( sint8_t op_rs1, sint32_t op_regorimm, sint8_t op_rd )
{
regs.rd[op_rd] = (regs.rd[op_rs1] ^ op_regorimm);
{regs.r_NF = ((sint8_t)((sint8_t)((regs.rd[op_rd]>>31)&0x1L)));
regs.r_ZF = ((regs.rd[op_rd] == 0) ? 1 : 0);
regs.r_OF = 0;
regs.r_CF = 0;
}
}



sint32_t inline execute( sint32_t pc )
{
sint32_t nextPC;


#line 4437 "dynamic/emu/spathfinder.m"
{ 
  dword MATCH_p = 
    
    #line 4437 "dynamic/emu/spathfinder.m"
    pc
    ;
  unsigned MATCH_w_32_0;
  { 
    MATCH_w_32_0 = getDword(MATCH_p); 
    
      switch((MATCH_w_32_0 >> 30 & 0x3) /* op at 0 */) {
        case 0: 
          
            switch((MATCH_w_32_0 >> 22 & 0x7) /* op2 at 0 */) {
              case 0: case 1: case 3: case 5: case 7: 
                goto MATCH_label_a0; break;
              case 2: 
                if ((MATCH_w_32_0 >> 29 & 0x1) /* a at 0 */ == 1) 
                  
                    switch((MATCH_w_32_0 >> 25 & 0xf) /* cond at 0 */) {
                      case 0: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4472 "dynamic/emu/spathfinder.m"
                           executeBNA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 1: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4458 "dynamic/emu/spathfinder.m"
                           executeBEA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 2: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4468 "dynamic/emu/spathfinder.m"
                           executeBLEA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 3: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4466 "dynamic/emu/spathfinder.m"
                           executeBLA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 4: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4470 "dynamic/emu/spathfinder.m"
                           executeBLEUA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 5: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4456 "dynamic/emu/spathfinder.m"
                           executeBCSA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 6: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4476 "dynamic/emu/spathfinder.m"
                           executeBNEGA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 7: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4482 "dynamic/emu/spathfinder.m"
                           executeBVSA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 8: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4452 "dynamic/emu/spathfinder.m"
                           executeBAA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 9: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4474 "dynamic/emu/spathfinder.m"
                           executeBNEA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 10: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4460 "dynamic/emu/spathfinder.m"
                           executeBGA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 11: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4462 "dynamic/emu/spathfinder.m"
                           executeBGEA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 12: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4464 "dynamic/emu/spathfinder.m"
                           executeBGUA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 13: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4454 "dynamic/emu/spathfinder.m"
                           executeBCCA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 14: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4478 "dynamic/emu/spathfinder.m"
                           executeBPOSA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 15: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4480 "dynamic/emu/spathfinder.m"
                           executeBVCA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      default: assert(0);
                    } /* (MATCH_w_32_0 >> 25 & 0xf) -- cond at 0 --*/  
                else 
                  
                    switch((MATCH_w_32_0 >> 25 & 0xf) /* cond at 0 */) {
                      case 0: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4471 "dynamic/emu/spathfinder.m"
                           executeBN( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 1: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4457 "dynamic/emu/spathfinder.m"
                           executeBE( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 2: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4467 "dynamic/emu/spathfinder.m"
                           executeBLE( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 3: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4465 "dynamic/emu/spathfinder.m"
                           executeBL( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 4: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4469 "dynamic/emu/spathfinder.m"
                           executeBLEU( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 5: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4455 "dynamic/emu/spathfinder.m"
                           executeBCS( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 6: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4475 "dynamic/emu/spathfinder.m"
                           executeBNEG( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 7: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4481 "dynamic/emu/spathfinder.m"
                           executeBVS( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 8: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4451 "dynamic/emu/spathfinder.m"
                           executeBA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 9: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4473 "dynamic/emu/spathfinder.m"
                           executeBNE( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 10: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4459 "dynamic/emu/spathfinder.m"
                           executeBG( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 11: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4461 "dynamic/emu/spathfinder.m"
                           executeBGE( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 12: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4463 "dynamic/emu/spathfinder.m"
                           executeBGU( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 13: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4453 "dynamic/emu/spathfinder.m"
                           executeBCC( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 14: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4477 "dynamic/emu/spathfinder.m"
                           executeBPOS( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 15: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4479 "dynamic/emu/spathfinder.m"
                           executeBVC( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      default: assert(0);
                    } /* (MATCH_w_32_0 >> 25 & 0xf) -- cond at 0 --*/  
                break;
              case 4: 
                if ((MATCH_w_32_0 & 0x3fffff) /* imm22 at 0 */ == 0 && 
                  (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ == 0) { 
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4570 "dynamic/emu/spathfinder.m"
                   executeNOP(  );

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                else 
                  goto MATCH_label_a1;  /*opt-block+*/
                
                break;
              case 6: 
                if ((MATCH_w_32_0 >> 29 & 0x1) /* a at 0 */ == 1) 
                  
                    switch((MATCH_w_32_0 >> 25 & 0xf) /* cond at 0 */) {
                      case 0: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4502 "dynamic/emu/spathfinder.m"
                           executeFBNA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 1: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4504 "dynamic/emu/spathfinder.m"
                           executeFBNEA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 2: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4500 "dynamic/emu/spathfinder.m"
                           executeFBLGA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 3: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4516 "dynamic/emu/spathfinder.m"
                           executeFBULA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 4: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4496 "dynamic/emu/spathfinder.m"
                           executeFBLA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 5: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4512 "dynamic/emu/spathfinder.m"
                           executeFBUGA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 6: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4492 "dynamic/emu/spathfinder.m"
                           executeFBGA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 7: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4508 "dynamic/emu/spathfinder.m"
                           executeFBUA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 8: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4488 "dynamic/emu/spathfinder.m"
                           executeFBAA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 9: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4490 "dynamic/emu/spathfinder.m"
                           executeFBEA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 10: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4510 "dynamic/emu/spathfinder.m"
                           executeFBUEA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 11: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4494 "dynamic/emu/spathfinder.m"
                           executeFBGEA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 12: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4514 "dynamic/emu/spathfinder.m"
                           executeFBUGEA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 13: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4498 "dynamic/emu/spathfinder.m"
                           executeFBLEA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 14: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4518 "dynamic/emu/spathfinder.m"
                           executeFBULEA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 15: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4506 "dynamic/emu/spathfinder.m"
                           executeFBOA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      default: assert(0);
                    } /* (MATCH_w_32_0 >> 25 & 0xf) -- cond at 0 --*/  
                else 
                  
                    switch((MATCH_w_32_0 >> 25 & 0xf) /* cond at 0 */) {
                      case 0: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4501 "dynamic/emu/spathfinder.m"
                           executeFBN( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 1: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4503 "dynamic/emu/spathfinder.m"
                           executeFBNE( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 2: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4499 "dynamic/emu/spathfinder.m"
                           executeFBLG( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 3: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4515 "dynamic/emu/spathfinder.m"
                           executeFBUL( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 4: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4495 "dynamic/emu/spathfinder.m"
                           executeFBL( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 5: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4511 "dynamic/emu/spathfinder.m"
                           executeFBUG( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 6: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4491 "dynamic/emu/spathfinder.m"
                           executeFBG( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 7: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4507 "dynamic/emu/spathfinder.m"
                           executeFBU( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 8: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4487 "dynamic/emu/spathfinder.m"
                           executeFBA( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 9: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4489 "dynamic/emu/spathfinder.m"
                           executeFBE( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 10: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4509 "dynamic/emu/spathfinder.m"
                           executeFBUE( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 11: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4493 "dynamic/emu/spathfinder.m"
                           executeFBGE( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 12: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4513 "dynamic/emu/spathfinder.m"
                           executeFBUGE( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 13: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4497 "dynamic/emu/spathfinder.m"
                           executeFBLE( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 14: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4517 "dynamic/emu/spathfinder.m"
                           executeFBULE( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      case 15: 
                        { 
                          unsigned op_reloc = 
                            4 * sign_extend(
                                        (MATCH_w_32_0 & 0x3fffff) 
                                              /* disp22 at 0 */, 22) + 
                            addressToPC(MATCH_p);
                          nextPC = 4 + MATCH_p; 
                          
                          #line 4505 "dynamic/emu/spathfinder.m"
                           executeFBO( op_reloc );

                          
                          
                          
                        }
                        
                        break;
                      default: assert(0);
                    } /* (MATCH_w_32_0 >> 25 & 0xf) -- cond at 0 --*/  
                break;
              default: assert(0);
            } /* (MATCH_w_32_0 >> 22 & 0x7) -- op2 at 0 --*/ 
          break;
        case 1: 
          { 
            unsigned op_reloc = 
              4 * sign_extend((MATCH_w_32_0 & 0x3fffffff) /* disp30 at 0 */, 
                          30) + addressToPC(MATCH_p);
            nextPC = 4 + MATCH_p; 
            
            #line 4648 "dynamic/emu/spathfinder.m"
             executeCALL__( op_reloc );

            
            
            
          }
          
          break;
        case 2: 
          
            switch((MATCH_w_32_0 >> 19 & 0x3f) /* op3 at 0 */) {
              case 0: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 1) 
                  if ((MATCH_w_32_0 >> 14 & 0x1f) 
                          /* rs1 at 0 */ == (MATCH_w_32_0 >> 25 & 0x1f) 
                          /* rd at 0 */) { 
                    unsigned op_rd = 
                      (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                    int /* [~4096..4095] */ op_simm13 = 
                      sign_extend((MATCH_w_32_0 & 0x1fff) /* simm13 at 0 */, 
                                  13);
                    nextPC = 4 + MATCH_p; 
                    
                    #line 4438 "dynamic/emu/spathfinder.m"
                     executeINC( ((sint16_t)op_simm13), ((sint8_t)op_rd) );

                    
                    
                    
                  } /*opt-block*/
                  else { 
                    unsigned op_rd = 
                      (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                    unsigned op_regorimm = addressToPC(MATCH_p);
                    unsigned op_rs1 = 
                      (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                    nextPC = 4 + MATCH_p; 
                    
                    #line 4439 "dynamic/emu/spathfinder.m"
                     executeADD( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                    
                    
                    
                  } /*opt-block*/ /*opt-block+*/
                else { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4439 "dynamic/emu/spathfinder.m"
                   executeADD( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                
                break;
              case 1: 
                { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4445 "dynamic/emu/spathfinder.m"
                   executeAND( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 2: 
                if ((MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */ == 0) 
                  if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0 && 
                    (1 <= (MATCH_w_32_0 & 0x1f) /* rs2 at 0 */ && 
                    (MATCH_w_32_0 & 0x1f) /* rs2 at 0 */ < 32) || 
                    (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 1) 
                    goto MATCH_label_a2;  /*opt-block+*/
                  else 
                    if ((MATCH_w_32_0 >> 14 & 0x1f) 
                            /* rs1 at 0 */ == (MATCH_w_32_0 >> 25 & 0x1f) 
                            /* rd at 0 */) { 
                      unsigned op_rd = 
                        (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                      unsigned op_regorimm = addressToPC(MATCH_p);
                      nextPC = 4 + MATCH_p; 
                      
                      #line 4571 "dynamic/emu/spathfinder.m"
                       executeBSET( decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                      
                      
                      
                    } /*opt-block*/
                    else { 
                      unsigned op_rd = 
                        (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                      nextPC = 4 + MATCH_p; 
                      
                      #line 4572 "dynamic/emu/spathfinder.m"
                       executeCLR( ((sint8_t)op_rd) );

                      
                      
                      
                    } /*opt-block*/ /*opt-block+*/ /*opt-block+*/
                else 
                  if ((MATCH_w_32_0 >> 14 & 0x1f) 
                          /* rs1 at 0 */ == (MATCH_w_32_0 >> 25 & 0x1f) 
                          /* rd at 0 */) { 
                    unsigned op_rd = 
                      (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                    unsigned op_regorimm = addressToPC(MATCH_p);
                    nextPC = 4 + MATCH_p; 
                    
                    #line 4571 "dynamic/emu/spathfinder.m"
                     executeBSET( decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                    
                    
                    
                  } /*opt-block*/
                  else { 
                    unsigned op_rd = 
                      (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                    unsigned op_regorimm = addressToPC(MATCH_p);
                    unsigned op_rs1 = 
                      (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                    nextPC = 4 + MATCH_p; 
                    
                    #line 4575 "dynamic/emu/spathfinder.m"
                     executeOR( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                    
                    
                    
                  } /*opt-block*/ /*opt-block+*/
                break;
              case 3: 
                if ((MATCH_w_32_0 >> 14 & 0x1f) 
                        /* rs1 at 0 */ == (MATCH_w_32_0 >> 25 & 0x1f) 
                        /* rd at 0 */) { 
                  unsigned op_rd = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4645 "dynamic/emu/spathfinder.m"
                   executeBTOG( decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                } /*opt-block*/
                else { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4646 "dynamic/emu/spathfinder.m"
                   executeXOR( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                } /*opt-block*/
                
                break;
              case 4: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 1) 
                  if ((MATCH_w_32_0 >> 14 & 0x1f) 
                          /* rs1 at 0 */ == (MATCH_w_32_0 >> 25 & 0x1f) 
                          /* rd at 0 */) { 
                    unsigned op_rd = 
                      (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                    int /* [~4096..4095] */ op_simm13 = 
                      sign_extend((MATCH_w_32_0 & 0x1fff) /* simm13 at 0 */, 
                                  13);
                    nextPC = 4 + MATCH_p; 
                    
                    #line 4606 "dynamic/emu/spathfinder.m"
                     executeDEC( ((sint16_t)op_simm13), ((sint8_t)op_rd) );

                    
                    
                    
                  } /*opt-block*/
                  else { 
                    unsigned op_rd = 
                      (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                    unsigned op_regorimm = addressToPC(MATCH_p);
                    unsigned op_rs1 = 
                      (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                    nextPC = 4 + MATCH_p; 
                    
                    #line 4609 "dynamic/emu/spathfinder.m"
                     executeSUB( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                    
                    
                    
                  } /*opt-block*/ /*opt-block+*/
                else 
                  if ((MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */ == 0) 
                    if ((MATCH_w_32_0 & 0x1f) 
                            /* rs2 at 0 */ == (MATCH_w_32_0 >> 25 & 0x1f) 
                            /* rd at 0 */) { 
                      unsigned op_rd = (MATCH_w_32_0 & 0x1f) /* rs2 at 0 */;
                      nextPC = 4 + MATCH_p; 
                      
                      #line 4607 "dynamic/emu/spathfinder.m"
                       executeNEG( ((sint8_t)op_rd) );

                      
                      
                      
                    } /*opt-block*/
                    else { 
                      unsigned op_rd = 
                        (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                      unsigned op_rs2 = (MATCH_w_32_0 & 0x1f) /* rs2 at 0 */;
                      nextPC = 4 + MATCH_p; 
                      
                      #line 4608 "dynamic/emu/spathfinder.m"
                       executeNEG2( ((sint8_t)op_rs2), ((sint8_t)op_rd) );

                      
                      
                      
                    } /*opt-block*/ /*opt-block+*/
                  else { 
                    unsigned op_rd = 
                      (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                    unsigned op_regorimm = addressToPC(MATCH_p);
                    unsigned op_rs1 = 
                      (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                    nextPC = 4 + MATCH_p; 
                    
                    #line 4609 "dynamic/emu/spathfinder.m"
                     executeSUB( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                    
                    
                    
                  } /*opt-block*//*opt-block+*/ /*opt-block+*/
                break;
              case 5: 
                if ((MATCH_w_32_0 >> 14 & 0x1f) 
                        /* rs1 at 0 */ == (MATCH_w_32_0 >> 25 & 0x1f) 
                        /* rd at 0 */) { 
                  unsigned op_rd = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4446 "dynamic/emu/spathfinder.m"
                   executeBCLR( decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                } /*opt-block*/
                else { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4447 "dynamic/emu/spathfinder.m"
                   executeANDN( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                } /*opt-block*/
                
                break;
              case 6: 
                { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4576 "dynamic/emu/spathfinder.m"
                   executeORN( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 7: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0 && 
                  (1 <= (MATCH_w_32_0 & 0x1f) /* rs2 at 0 */ && 
                  (MATCH_w_32_0 & 0x1f) /* rs2 at 0 */ < 32) || 
                  (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 1) 
                  goto MATCH_label_a3;  /*opt-block+*/
                else 
                  if ((MATCH_w_32_0 >> 14 & 0x1f) 
                          /* rs1 at 0 */ == (MATCH_w_32_0 >> 25 & 0x1f) 
                          /* rd at 0 */) { 
                    unsigned op_rd = 
                      (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                    nextPC = 4 + MATCH_p; 
                    
                    #line 4641 "dynamic/emu/spathfinder.m"
                     executeNOT( ((sint8_t)op_rd) );

                    
                    
                    
                  } /*opt-block*/
                  else { 
                    unsigned op_rd = 
                      (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                    unsigned op_rs1 = 
                      (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                    nextPC = 4 + MATCH_p; 
                    
                    #line 4642 "dynamic/emu/spathfinder.m"
                     executeNOT2( ((sint8_t)op_rs1), ((sint8_t)op_rd) );

                    
                    
                    
                  } /*opt-block*/ /*opt-block+*/
                
                break;
              case 8: 
                { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4440 "dynamic/emu/spathfinder.m"
                   executeADDX( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 9: case 13: case 25: case 29: case 34: case 35: case 44: 
              case 45: case 46: case 47: case 54: case 55: case 57: case 62: 
              case 63: 
                goto MATCH_label_a0; break;
              case 10: 
                { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4636 "dynamic/emu/spathfinder.m"
                   executeUMUL( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 11: 
                { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4591 "dynamic/emu/spathfinder.m"
                   executeSMUL( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 12: 
                { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4610 "dynamic/emu/spathfinder.m"
                   executeSUBX( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 14: 
                { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4634 "dynamic/emu/spathfinder.m"
                   executeUDIV( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 15: 
                { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4588 "dynamic/emu/spathfinder.m"
                   executeSDIV( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 16: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 1) 
                  if ((MATCH_w_32_0 >> 14 & 0x1f) 
                          /* rs1 at 0 */ == (MATCH_w_32_0 >> 25 & 0x1f) 
                          /* rd at 0 */) { 
                    unsigned op_rd = 
                      (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                    int /* [~4096..4095] */ op_simm13 = 
                      sign_extend((MATCH_w_32_0 & 0x1fff) /* simm13 at 0 */, 
                                  13);
                    nextPC = 4 + MATCH_p; 
                    
                    #line 4443 "dynamic/emu/spathfinder.m"
                     executeINCCC( ((sint16_t)op_simm13), ((sint8_t)op_rd) );

                    
                    
                    
                  } /*opt-block*/
                  else { 
                    unsigned op_rd = 
                      (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                    unsigned op_regorimm = addressToPC(MATCH_p);
                    unsigned op_rs1 = 
                      (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                    nextPC = 4 + MATCH_p; 
                    
                    #line 4444 "dynamic/emu/spathfinder.m"
                     executeADDCC( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                    
                    
                    
                  } /*opt-block*/ /*opt-block+*/
                else { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4444 "dynamic/emu/spathfinder.m"
                   executeADDCC( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                
                break;
              case 17: 
                if ((MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ == 0 && 
                  (0 <= (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ && 
                  (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ < 2)) { 
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4449 "dynamic/emu/spathfinder.m"
                   executeBTST( decodereg_or_imm( op_regorimm ), ((sint8_t)op_rs1) );

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                else { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4450 "dynamic/emu/spathfinder.m"
                   executeANDCC( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                
                break;
              case 18: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0 && 
                  (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ == 0 && 
                  (1 <= (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */ && 
                  (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */ < 32) || 
                  (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0 && 
                  (1 <= (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ && 
                  (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ < 32) || 
                  (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 1) 
                  goto MATCH_label_a4;  /*opt-block+*/
                else { 
                  unsigned op_rs2 = (MATCH_w_32_0 & 0x1f) /* rs2 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4578 "dynamic/emu/spathfinder.m"
                   executeTST( ((sint8_t)op_rs2) );

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                
                break;
              case 19: 
                { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4647 "dynamic/emu/spathfinder.m"
                   executeXORCC( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 20: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 1) 
                  if ((MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ == 0) 
                    goto MATCH_label_a5;  /*opt-block+*/
                  else 
                    if ((MATCH_w_32_0 >> 14 & 0x1f) 
                            /* rs1 at 0 */ == (MATCH_w_32_0 >> 25 & 0x1f) 
                            /* rd at 0 */) { 
                      unsigned op_rd = 
                        (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                      int /* [~4096..4095] */ op_simm13 = 
                        sign_extend(
                                    (MATCH_w_32_0 & 0x1fff) 
                                          /* simm13 at 0 */, 13);
                      nextPC = 4 + MATCH_p; 
                      
                      #line 4613 "dynamic/emu/spathfinder.m"
                       executeDECCC( ((sint16_t)op_simm13), ((sint8_t)op_rd) );

                      
                      
                      
                    } /*opt-block*/
                    else { 
                      unsigned op_rd = 
                        (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                      unsigned op_regorimm = addressToPC(MATCH_p);
                      unsigned op_rs1 = 
                        (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                      nextPC = 4 + MATCH_p; 
                      
                      #line 4614 "dynamic/emu/spathfinder.m"
                       executeSUBCC( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                      
                      
                      
                    } /*opt-block*/ /*opt-block+*/ /*opt-block+*/
                else 
                  if ((MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ == 0) 
                    goto MATCH_label_a5;  /*opt-block+*/
                  else { 
                    unsigned op_rd = 
                      (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                    unsigned op_regorimm = addressToPC(MATCH_p);
                    unsigned op_rs1 = 
                      (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                    nextPC = 4 + MATCH_p; 
                    
                    #line 4614 "dynamic/emu/spathfinder.m"
                     executeSUBCC( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                    
                    
                    
                  } /*opt-block*//*opt-block+*/ /*opt-block+*/
                break;
              case 21: 
                { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4448 "dynamic/emu/spathfinder.m"
                   executeANDNCC( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 22: 
                { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4577 "dynamic/emu/spathfinder.m"
                   executeORNCC( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 23: 
                { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4644 "dynamic/emu/spathfinder.m"
                   executeXNORCC( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 24: 
                { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4442 "dynamic/emu/spathfinder.m"
                   executeADDXCC( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 26: 
                { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4637 "dynamic/emu/spathfinder.m"
                   executeUMULCC( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 27: 
                { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4592 "dynamic/emu/spathfinder.m"
                   executeSMULCC( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 28: 
                { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4611 "dynamic/emu/spathfinder.m"
                   executeSUBXCC( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 30: 
                { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4635 "dynamic/emu/spathfinder.m"
                   executeUDIVCC( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 31: 
                { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4589 "dynamic/emu/spathfinder.m"
                   executeSDIVCC( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 32: 
                { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4617 "dynamic/emu/spathfinder.m"
                   executeTADDCC( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 33: 
                { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4631 "dynamic/emu/spathfinder.m"
                   executeTSUBCC( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 36: 
                { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4569 "dynamic/emu/spathfinder.m"
                   executeMULSCC( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 37: 
                { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4590 "dynamic/emu/spathfinder.m"
                   executeSLL( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 38: 
                { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4594 "dynamic/emu/spathfinder.m"
                   executeSRL( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 39: 
                { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4593 "dynamic/emu/spathfinder.m"
                   executeSRA( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 40: 
                
                  switch((MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */) {
                    case 0: 
                      { 
                        unsigned op_rd = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4583 "dynamic/emu/spathfinder.m"
                         executeRDY( ((sint8_t)op_rd) );

                        
                        
                        
                      }
                      
                      break;
                    case 1: case 2: case 3: case 4: case 5: case 6: case 7: 
                    case 8: case 9: case 10: case 11: case 12: case 13: 
                    case 14: case 16: case 17: case 18: case 19: case 20: 
                    case 21: case 22: case 23: case 24: case 25: case 26: 
                    case 27: case 28: case 29: case 30: case 31: 
                      goto MATCH_label_a0; break;
                    case 15: 
                      if ((MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ == 0) { 
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4599 "dynamic/emu/spathfinder.m"
                         executeSTBAR(  );

                        
                        
                        
                      } /*opt-block*//*opt-block+*/
                      else 
                        goto MATCH_label_a0;  /*opt-block+*/
                      
                      break;
                    default: assert(0);
                  } /* (MATCH_w_32_0 >> 14 & 0x1f) -- rs1 at 0 --*/ 
                break;
              case 41: 
                { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4580 "dynamic/emu/spathfinder.m"
                   executeRDPSR( ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 42: 
                { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4582 "dynamic/emu/spathfinder.m"
                   executeRDWIM( ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 43: 
                { 
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4581 "dynamic/emu/spathfinder.m"
                   executeRDTBR( ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 48: 
                if (1 <= (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ && 
                  (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ < 32) 
                  goto MATCH_label_a0;  /*opt-block+*/
                else { 
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4441 "dynamic/emu/spathfinder.m"
                   executeWRY( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ) );

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                
                break;
              case 49: 
                { 
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4638 "dynamic/emu/spathfinder.m"
                   executeWRPSR( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ) );

                  
                  
                  
                }
                
                break;
              case 50: 
                { 
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4640 "dynamic/emu/spathfinder.m"
                   executeWRWIM( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ) );

                  
                  
                  
                }
                
                break;
              case 51: 
                { 
                  unsigned op_regorimm = addressToPC(MATCH_p);
                  unsigned op_rs1 = 
                    (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4639 "dynamic/emu/spathfinder.m"
                   executeWRTBR( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ) );

                  
                  
                  
                }
                
                break;
              case 52: 
                if (111 <= (MATCH_w_32_0 >> 5 & 0x1ff) /* opf at 0 */ && 
                  (MATCH_w_32_0 >> 5 & 0x1ff) /* opf at 0 */ < 196 || 
                  212 <= (MATCH_w_32_0 >> 5 & 0x1ff) /* opf at 0 */ && 
                  (MATCH_w_32_0 >> 5 & 0x1ff) /* opf at 0 */ < 512) 
                  goto MATCH_label_a0;  /*opt-block+*/
                else 
                  switch((MATCH_w_32_0 >> 5 & 0x1ff) /* opf at 0 */) {
                    case 0: case 2: case 3: case 4: case 6: case 7: case 8: 
                    case 10: case 11: case 12: case 13: case 14: case 15: 
                    case 16: case 17: case 18: case 19: case 20: case 21: 
                    case 22: case 23: case 24: case 25: case 26: case 27: 
                    case 28: case 29: case 30: case 31: case 32: case 33: 
                    case 34: case 35: case 36: case 37: case 38: case 39: 
                    case 40: case 44: case 45: case 46: case 47: case 48: 
                    case 49: case 50: case 51: case 52: case 53: case 54: 
                    case 55: case 56: case 57: case 58: case 59: case 60: 
                    case 61: case 62: case 63: case 64: case 68: case 72: 
                    case 76: case 80: case 81: case 82: case 83: case 84: 
                    case 85: case 86: case 87: case 88: case 89: case 90: 
                    case 91: case 92: case 93: case 94: case 95: case 96: 
                    case 97: case 98: case 99: case 100: case 101: case 102: 
                    case 103: case 104: case 106: case 107: case 108: 
                    case 109: case 197: case 202: case 207: case 208: 
                      goto MATCH_label_a0; break;
                    case 1: 
                      { 
                        unsigned op_fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned op_fs2s = 
                          (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4529 "dynamic/emu/spathfinder.m"
                         executeFMOVS( ((sint8_t)op_fs2s), ((sint8_t)op_fds) );

                        
                        
                        
                      }
                      
                      break;
                    case 5: 
                      { 
                        unsigned op_fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned op_fs2s = 
                          (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4533 "dynamic/emu/spathfinder.m"
                         executeFNEGS( ((sint8_t)op_fs2s), ((sint8_t)op_fds) );

                        
                        
                        
                      }
                      
                      break;
                    case 9: 
                      { 
                        unsigned op_fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned op_fs2s = 
                          (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4483 "dynamic/emu/spathfinder.m"
                         executeFABSS( ((sint8_t)op_fs2s), ((sint8_t)op_fds) );

                        
                        
                        
                      }
                      
                      break;
                    case 41: 
                      { 
                        unsigned op_fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned op_fs2s = 
                          (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4536 "dynamic/emu/spathfinder.m"
                         executeFSQRTS( ((sint8_t)op_fs2s), ((sint8_t)op_fds) );

                        
                        
                        
                      }
                      
                      break;
                    case 42: 
                      { 
                        unsigned op_fdd = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdd at 0 */;
                        unsigned op_fs2d = 
                          (MATCH_w_32_0 & 0x1f) /* fs2d at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4534 "dynamic/emu/spathfinder.m"
                         executeFSQRTD( ((sint8_t)op_fs2d), ((sint8_t)op_fdd) );

                        
                        
                        
                      }
                      
                      break;
                    case 43: 
                      { 
                        unsigned op_fdq = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdq at 0 */;
                        unsigned op_fs2q = 
                          (MATCH_w_32_0 & 0x1f) /* fs2q at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4535 "dynamic/emu/spathfinder.m"
                         executeFSQRTQ( ((sint8_t)op_fs2q), ((sint8_t)op_fdq) );

                        
                        
                        
                      }
                      
                      break;
                    case 65: 
                      { 
                        unsigned op_fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned op_fs1s = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1s at 0 */;
                        unsigned op_fs2s = 
                          (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4486 "dynamic/emu/spathfinder.m"
                         executeFADDS( ((sint8_t)op_fs1s), ((sint8_t)op_fs2s), ((sint8_t)op_fds) );

                        
                        
                        
                      }
                      
                      break;
                    case 66: 
                      { 
                        unsigned op_fdd = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdd at 0 */;
                        unsigned op_fs1d = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1d at 0 */;
                        unsigned op_fs2d = 
                          (MATCH_w_32_0 & 0x1f) /* fs2d at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4484 "dynamic/emu/spathfinder.m"
                         executeFADDD( ((sint8_t)op_fs1d), ((sint8_t)op_fs2d), ((sint8_t)op_fdd) );

                        
                        
                        
                      }
                      
                      break;
                    case 67: 
                      { 
                        unsigned op_fdq = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdq at 0 */;
                        unsigned op_fs1q = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1q at 0 */;
                        unsigned op_fs2q = 
                          (MATCH_w_32_0 & 0x1f) /* fs2q at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4485 "dynamic/emu/spathfinder.m"
                         executeFADDQ( ((sint8_t)op_fs1q), ((sint8_t)op_fs2q), ((sint8_t)op_fdq) );

                        
                        
                        
                      }
                      
                      break;
                    case 69: 
                      { 
                        unsigned op_fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned op_fs1s = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1s at 0 */;
                        unsigned op_fs2s = 
                          (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4539 "dynamic/emu/spathfinder.m"
                         executeFSUBS( ((sint8_t)op_fs1s), ((sint8_t)op_fs2s), ((sint8_t)op_fds) );

                        
                        
                        
                      }
                      
                      break;
                    case 70: 
                      { 
                        unsigned op_fdd = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdd at 0 */;
                        unsigned op_fs1d = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1d at 0 */;
                        unsigned op_fs2d = 
                          (MATCH_w_32_0 & 0x1f) /* fs2d at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4537 "dynamic/emu/spathfinder.m"
                         executeFSUBD( ((sint8_t)op_fs1d), ((sint8_t)op_fs2d), ((sint8_t)op_fdd) );

                        
                        
                        
                      }
                      
                      break;
                    case 71: 
                      { 
                        unsigned op_fdq = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdq at 0 */;
                        unsigned op_fs1q = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1q at 0 */;
                        unsigned op_fs2q = 
                          (MATCH_w_32_0 & 0x1f) /* fs2q at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4538 "dynamic/emu/spathfinder.m"
                         executeFSUBQ( ((sint8_t)op_fs1q), ((sint8_t)op_fs2q), ((sint8_t)op_fdq) );

                        
                        
                        
                      }
                      
                      break;
                    case 73: 
                      { 
                        unsigned op_fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned op_fs1s = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1s at 0 */;
                        unsigned op_fs2s = 
                          (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4532 "dynamic/emu/spathfinder.m"
                         executeFMULS( ((sint8_t)op_fs1s), ((sint8_t)op_fs2s), ((sint8_t)op_fds) );

                        
                        
                        
                      }
                      
                      break;
                    case 74: 
                      { 
                        unsigned op_fdd = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdd at 0 */;
                        unsigned op_fs1d = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1d at 0 */;
                        unsigned op_fs2d = 
                          (MATCH_w_32_0 & 0x1f) /* fs2d at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4530 "dynamic/emu/spathfinder.m"
                         executeFMULD( ((sint8_t)op_fs1d), ((sint8_t)op_fs2d), ((sint8_t)op_fdd) );

                        
                        
                        
                      }
                      
                      break;
                    case 75: 
                      { 
                        unsigned op_fdq = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdq at 0 */;
                        unsigned op_fs1q = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1q at 0 */;
                        unsigned op_fs2q = 
                          (MATCH_w_32_0 & 0x1f) /* fs2q at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4531 "dynamic/emu/spathfinder.m"
                         executeFMULQ( ((sint8_t)op_fs1q), ((sint8_t)op_fs2q), ((sint8_t)op_fdq) );

                        
                        
                        
                      }
                      
                      break;
                    case 77: 
                      { 
                        unsigned op_fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned op_fs1s = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1s at 0 */;
                        unsigned op_fs2s = 
                          (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4527 "dynamic/emu/spathfinder.m"
                         executeFDIVS( ((sint8_t)op_fs1s), ((sint8_t)op_fs2s), ((sint8_t)op_fds) );

                        
                        
                        
                      }
                      
                      break;
                    case 78: 
                      { 
                        unsigned op_fdd = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdd at 0 */;
                        unsigned op_fs1d = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1d at 0 */;
                        unsigned op_fs2d = 
                          (MATCH_w_32_0 & 0x1f) /* fs2d at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4525 "dynamic/emu/spathfinder.m"
                         executeFDIVD( ((sint8_t)op_fs1d), ((sint8_t)op_fs2d), ((sint8_t)op_fdd) );

                        
                        
                        
                      }
                      
                      break;
                    case 79: 
                      { 
                        unsigned op_fdq = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdq at 0 */;
                        unsigned op_fs1q = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1q at 0 */;
                        unsigned op_fs2q = 
                          (MATCH_w_32_0 & 0x1f) /* fs2q at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4526 "dynamic/emu/spathfinder.m"
                         executeFDIVQ( ((sint8_t)op_fs1q), ((sint8_t)op_fs2q), ((sint8_t)op_fdq) );

                        
                        
                        
                      }
                      
                      break;
                    case 105: 
                      { 
                        unsigned op_fdd = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdd at 0 */;
                        unsigned op_fs1d = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1d at 0 */;
                        unsigned op_fs2d = 
                          (MATCH_w_32_0 & 0x1f) /* fs2d at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4550 "dynamic/emu/spathfinder.m"
                         executeFSMULD( ((sint8_t)op_fs1d), ((sint8_t)op_fs2d), ((sint8_t)op_fdd) );

                        
                        
                        
                      }
                      
                      break;
                    case 110: 
                      { 
                        unsigned op_fdq = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdq at 0 */;
                        unsigned op_fs1q = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1q at 0 */;
                        unsigned op_fs2q = 
                          (MATCH_w_32_0 & 0x1f) /* fs2q at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4540 "dynamic/emu/spathfinder.m"
                         executeFDMULQ( ((sint8_t)op_fs1q), ((sint8_t)op_fs2q), ((sint8_t)op_fdq) );

                        
                        
                        
                      }
                      
                      break;
                    case 196: 
                      { 
                        unsigned op_fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned op_fs2s = 
                          (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4546 "dynamic/emu/spathfinder.m"
                         executeFITOS( ((sint8_t)op_fs2s), ((sint8_t)op_fds) );

                        
                        
                        
                      }
                      
                      break;
                    case 198: 
                      { 
                        unsigned op_fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned op_fs2d = 
                          (MATCH_w_32_0 & 0x1f) /* fs2d at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4543 "dynamic/emu/spathfinder.m"
                         executeFDTOS( ((sint8_t)op_fs2d), ((sint8_t)op_fds) );

                        
                        
                        
                      }
                      
                      break;
                    case 199: 
                      { 
                        unsigned op_fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned op_fs2q = 
                          (MATCH_w_32_0 & 0x1f) /* fs2q at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4549 "dynamic/emu/spathfinder.m"
                         executeFQTOS( ((sint8_t)op_fs2q), ((sint8_t)op_fds) );

                        
                        
                        
                      }
                      
                      break;
                    case 200: 
                      { 
                        unsigned op_fdd = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdd at 0 */;
                        unsigned op_fs2s = 
                          (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4544 "dynamic/emu/spathfinder.m"
                         executeFITOD( ((sint8_t)op_fs2s), ((sint8_t)op_fdd) );

                        
                        
                        
                      }
                      
                      break;
                    case 201: 
                      { 
                        unsigned op_fdd = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdd at 0 */;
                        unsigned op_fs2s = 
                          (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4551 "dynamic/emu/spathfinder.m"
                         executeFSTOD( ((sint8_t)op_fs2s), ((sint8_t)op_fdd) );

                        
                        
                        
                      }
                      
                      break;
                    case 203: 
                      { 
                        unsigned op_fdd = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdd at 0 */;
                        unsigned op_fs2q = 
                          (MATCH_w_32_0 & 0x1f) /* fs2q at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4547 "dynamic/emu/spathfinder.m"
                         executeFQTOD( ((sint8_t)op_fs2q), ((sint8_t)op_fdd) );

                        
                        
                        
                      }
                      
                      break;
                    case 204: 
                      { 
                        unsigned op_fdq = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdq at 0 */;
                        unsigned op_fs2s = 
                          (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4545 "dynamic/emu/spathfinder.m"
                         executeFITOQ( ((sint8_t)op_fs2s), ((sint8_t)op_fdq) );

                        
                        
                        
                      }
                      
                      break;
                    case 205: 
                      { 
                        unsigned op_fdq = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdq at 0 */;
                        unsigned op_fs2s = 
                          (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4553 "dynamic/emu/spathfinder.m"
                         executeFSTOQ( ((sint8_t)op_fs2s), ((sint8_t)op_fdq) );

                        
                        
                        
                      }
                      
                      break;
                    case 206: 
                      { 
                        unsigned op_fdq = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fdq at 0 */;
                        unsigned op_fs2d = 
                          (MATCH_w_32_0 & 0x1f) /* fs2d at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4542 "dynamic/emu/spathfinder.m"
                         executeFDTOQ( ((sint8_t)op_fs2d), ((sint8_t)op_fdq) );

                        
                        
                        
                      }
                      
                      break;
                    case 209: 
                      { 
                        unsigned op_fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned op_fs2s = 
                          (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4552 "dynamic/emu/spathfinder.m"
                         executeFSTOI( ((sint8_t)op_fs2s), ((sint8_t)op_fds) );

                        
                        
                        
                      }
                      
                      break;
                    case 210: 
                      { 
                        unsigned op_fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned op_fs2d = 
                          (MATCH_w_32_0 & 0x1f) /* fs2d at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4541 "dynamic/emu/spathfinder.m"
                         executeFDTOI( ((sint8_t)op_fs2d), ((sint8_t)op_fds) );

                        
                        
                        
                      }
                      
                      break;
                    case 211: 
                      { 
                        unsigned op_fds = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                        unsigned op_fs2q = 
                          (MATCH_w_32_0 & 0x1f) /* fs2q at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4548 "dynamic/emu/spathfinder.m"
                         executeFQTOI( ((sint8_t)op_fs2q), ((sint8_t)op_fds) );

                        
                        
                        
                      }
                      
                      break;
                    default: assert(0);
                  } /* (MATCH_w_32_0 >> 5 & 0x1ff) -- opf at 0 --*/ 
                break;
              case 53: 
                if (0 <= (MATCH_w_32_0 >> 5 & 0x1ff) /* opf at 0 */ && 
                  (MATCH_w_32_0 >> 5 & 0x1ff) /* opf at 0 */ < 81 || 
                  88 <= (MATCH_w_32_0 >> 5 & 0x1ff) /* opf at 0 */ && 
                  (MATCH_w_32_0 >> 5 & 0x1ff) /* opf at 0 */ < 512) 
                  goto MATCH_label_a0;  /*opt-block+*/
                else 
                  switch((MATCH_w_32_0 >> 5 & 0x1ff) /* opf at 0 */) {
                    case 84: 
                      goto MATCH_label_a0; break;
                    case 81: 
                      { 
                        unsigned op_fs1s = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1s at 0 */;
                        unsigned op_fs2s = 
                          (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4524 "dynamic/emu/spathfinder.m"
                         executeFCMPS( ((sint8_t)op_fs1s), ((sint8_t)op_fs2s) );

                        
                        
                        
                      }
                      
                      break;
                    case 82: 
                      { 
                        unsigned op_fs1d = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1d at 0 */;
                        unsigned op_fs2d = 
                          (MATCH_w_32_0 & 0x1f) /* fs2d at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4522 "dynamic/emu/spathfinder.m"
                         executeFCMPD( ((sint8_t)op_fs1d), ((sint8_t)op_fs2d) );

                        
                        
                        
                      }
                      
                      break;
                    case 83: 
                      { 
                        unsigned op_fs1q = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1q at 0 */;
                        unsigned op_fs2q = 
                          (MATCH_w_32_0 & 0x1f) /* fs2q at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4523 "dynamic/emu/spathfinder.m"
                         executeFCMPQ( ((sint8_t)op_fs1q), ((sint8_t)op_fs2q) );

                        
                        
                        
                      }
                      
                      break;
                    case 85: 
                      { 
                        unsigned op_fs1s = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1s at 0 */;
                        unsigned op_fs2s = 
                          (MATCH_w_32_0 & 0x1f) /* fs2s at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4521 "dynamic/emu/spathfinder.m"
                         executeFCMPES( ((sint8_t)op_fs1s), ((sint8_t)op_fs2s) );

                        
                        
                        
                      }
                      
                      break;
                    case 86: 
                      { 
                        unsigned op_fs1d = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1d at 0 */;
                        unsigned op_fs2d = 
                          (MATCH_w_32_0 & 0x1f) /* fs2d at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4519 "dynamic/emu/spathfinder.m"
                         executeFCMPED( ((sint8_t)op_fs1d), ((sint8_t)op_fs2d) );

                        
                        
                        
                      }
                      
                      break;
                    case 87: 
                      { 
                        unsigned op_fs1q = 
                          (MATCH_w_32_0 >> 14 & 0x1f) /* fs1q at 0 */;
                        unsigned op_fs2q = 
                          (MATCH_w_32_0 & 0x1f) /* fs2q at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4520 "dynamic/emu/spathfinder.m"
                         executeFCMPEQ( ((sint8_t)op_fs1q), ((sint8_t)op_fs2q) );

                        
                        
                        
                      }
                      
                      break;
                    default: assert(0);
                  } /* (MATCH_w_32_0 >> 5 & 0x1ff) -- opf at 0 --*/ 
                break;
              case 56: 
                
                  switch((MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */) {
                    case 0: 
                      { 
                        unsigned op_eaddr = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4555 "dynamic/emu/spathfinder.m"
                         executeJMP( decodeeaddr( op_eaddr ) );

                        
                        
                        
                      }
                      
                      break;
                    case 1: case 2: case 3: case 4: case 5: case 6: case 7: 
                    case 8: case 9: case 10: case 11: case 12: case 13: 
                    case 14: case 16: case 17: case 18: case 19: case 20: 
                    case 21: case 22: case 23: case 24: case 25: case 26: 
                    case 27: case 28: case 29: case 30: case 31: 
                      { 
                        unsigned op_eaddr = addressToPC(MATCH_p);
                        unsigned op_rd = 
                          (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4558 "dynamic/emu/spathfinder.m"
                         executeJMPL( decodeeaddr( op_eaddr ), ((sint8_t)op_rd) );

                        
                        
                        
                      }
                      
                      break;
                    case 15: 
                      { 
                        unsigned op_eaddr = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4554 "dynamic/emu/spathfinder.m"
                         executeCALL_( decodeeaddr( op_eaddr ) );

                        
                        
                        
                      }
                      
                      break;
                    default: assert(0);
                  } /* (MATCH_w_32_0 >> 25 & 0x1f) -- rd at 0 --*/ 
                break;
              case 58: 
                
                  switch((MATCH_w_32_0 >> 25 & 0xf) /* cond at 0 */) {
                    case 0: 
                      { 
                        unsigned op_eaddr = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4627 "dynamic/emu/spathfinder.m"
                         executeTN( decodeeaddr( op_eaddr ) );

                        
                        
                        
                      }
                      
                      break;
                    case 1: 
                      { 
                        unsigned op_eaddr = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4620 "dynamic/emu/spathfinder.m"
                         executeTE( decodeeaddr( op_eaddr ) );

                        
                        
                        
                      }
                      
                      break;
                    case 2: 
                      { 
                        unsigned op_eaddr = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4625 "dynamic/emu/spathfinder.m"
                         executeTLE( decodeeaddr( op_eaddr ) );

                        
                        
                        
                      }
                      
                      break;
                    case 3: 
                      { 
                        unsigned op_eaddr = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4624 "dynamic/emu/spathfinder.m"
                         executeTL( decodeeaddr( op_eaddr ) );

                        
                        
                        
                      }
                      
                      break;
                    case 4: 
                      { 
                        unsigned op_eaddr = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4626 "dynamic/emu/spathfinder.m"
                         executeTLEU( decodeeaddr( op_eaddr ) );

                        
                        
                        
                      }
                      
                      break;
                    case 5: 
                      { 
                        unsigned op_eaddr = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4619 "dynamic/emu/spathfinder.m"
                         executeTCS( decodeeaddr( op_eaddr ) );

                        
                        
                        
                      }
                      
                      break;
                    case 6: 
                      { 
                        unsigned op_eaddr = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4629 "dynamic/emu/spathfinder.m"
                         executeTNEG( decodeeaddr( op_eaddr ) );

                        
                        
                        
                      }
                      
                      break;
                    case 7: 
                      { 
                        unsigned op_eaddr = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4633 "dynamic/emu/spathfinder.m"
                         executeTVS( decodeeaddr( op_eaddr ) );

                        
                        
                        
                      }
                      
                      break;
                    case 8: 
                      { 
                        unsigned op_eaddr = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4616 "dynamic/emu/spathfinder.m"
                         executeTA( decodeeaddr( op_eaddr ) );

                        
                        
                        
                      }
                      
                      break;
                    case 9: 
                      { 
                        unsigned op_eaddr = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4628 "dynamic/emu/spathfinder.m"
                         executeTNE( decodeeaddr( op_eaddr ) );

                        
                        
                        
                      }
                      
                      break;
                    case 10: 
                      { 
                        unsigned op_eaddr = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4621 "dynamic/emu/spathfinder.m"
                         executeTG( decodeeaddr( op_eaddr ) );

                        
                        
                        
                      }
                      
                      break;
                    case 11: 
                      { 
                        unsigned op_eaddr = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4622 "dynamic/emu/spathfinder.m"
                         executeTGE( decodeeaddr( op_eaddr ) );

                        
                        
                        
                      }
                      
                      break;
                    case 12: 
                      { 
                        unsigned op_eaddr = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4623 "dynamic/emu/spathfinder.m"
                         executeTGU( decodeeaddr( op_eaddr ) );

                        
                        
                        
                      }
                      
                      break;
                    case 13: 
                      { 
                        unsigned op_eaddr = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4618 "dynamic/emu/spathfinder.m"
                         executeTCC( decodeeaddr( op_eaddr ) );

                        
                        
                        
                      }
                      
                      break;
                    case 14: 
                      { 
                        unsigned op_eaddr = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4630 "dynamic/emu/spathfinder.m"
                         executeTPOS( decodeeaddr( op_eaddr ) );

                        
                        
                        
                      }
                      
                      break;
                    case 15: 
                      { 
                        unsigned op_eaddr = addressToPC(MATCH_p);
                        nextPC = 4 + MATCH_p; 
                        
                        #line 4632 "dynamic/emu/spathfinder.m"
                         executeTVC( decodeeaddr( op_eaddr ) );

                        
                        
                        
                      }
                      
                      break;
                    default: assert(0);
                  } /* (MATCH_w_32_0 >> 25 & 0xf) -- cond at 0 --*/ 
                break;
              case 59: 
                { 
                  unsigned op_eaddr = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4528 "dynamic/emu/spathfinder.m"
                   executeFLUSH( decodeeaddr( op_eaddr ) );

                  
                  
                  
                }
                
                break;
              case 60: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0 && 
                  (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ == 0 && 
                  (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */ == 0 && 
                  (1 <= (MATCH_w_32_0 & 0x1f) /* rs2 at 0 */ && 
                  (MATCH_w_32_0 & 0x1f) /* rs2 at 0 */ < 32) || 
                  (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0 && 
                  (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ == 0 && 
                  (1 <= (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */ && 
                  (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */ < 32) || 
                  (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0 && 
                  (1 <= (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ && 
                  (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ < 32) || 
                  (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 1) 
                  goto MATCH_label_a6;  /*opt-block+*/
                else { 
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4586 "dynamic/emu/spathfinder.m"
                   executeSAVE_(  );

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                
                break;
              case 61: 
                if ((MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0 && 
                  (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ == 0 && 
                  (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */ == 0 && 
                  (1 <= (MATCH_w_32_0 & 0x1f) /* rs2 at 0 */ && 
                  (MATCH_w_32_0 & 0x1f) /* rs2 at 0 */ < 32) || 
                  (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0 && 
                  (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ == 0 && 
                  (1 <= (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */ && 
                  (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */ < 32) || 
                  (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 0 && 
                  (1 <= (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ && 
                  (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ < 32) || 
                  (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ == 1) 
                  goto MATCH_label_a7;  /*opt-block+*/
                else { 
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4584 "dynamic/emu/spathfinder.m"
                   executeRESTORE_(  );

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                
                break;
              default: assert(0);
            } /* (MATCH_w_32_0 >> 19 & 0x3f) -- op3 at 0 --*/ 
          break;
        case 3: 
          
            switch((MATCH_w_32_0 >> 19 & 0x3f) /* op3 at 0 */) {
              case 0: 
                { 
                  unsigned op_eaddr = addressToPC(MATCH_p);
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4559 "dynamic/emu/spathfinder.m"
                   executeLD( decodeeaddr( op_eaddr ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 1: 
                { 
                  unsigned op_eaddr = addressToPC(MATCH_p);
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4567 "dynamic/emu/spathfinder.m"
                   executeLDUB( decodeeaddr( op_eaddr ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 2: 
                { 
                  unsigned op_eaddr = addressToPC(MATCH_p);
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4568 "dynamic/emu/spathfinder.m"
                   executeLDUH( decodeeaddr( op_eaddr ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 3: 
                { 
                  unsigned op_eaddr = addressToPC(MATCH_p);
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4560 "dynamic/emu/spathfinder.m"
                   executeLDD( decodeeaddr( op_eaddr ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 4: 
                if ((MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ == 0 && 
                  (0 <= (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ && 
                  (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ < 2)) { 
                  unsigned op_eaddr = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4595 "dynamic/emu/spathfinder.m"
                   executeCLR_( decodeeaddr( op_eaddr ) );

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                else { 
                  unsigned op_eaddr = addressToPC(MATCH_p);
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4596 "dynamic/emu/spathfinder.m"
                   executeST( ((sint8_t)op_rd), decodeeaddr( op_eaddr ) );

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                
                break;
              case 5: 
                if ((MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ == 0 && 
                  (0 <= (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ && 
                  (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ < 2)) { 
                  unsigned op_eaddr = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4597 "dynamic/emu/spathfinder.m"
                   executeCLRB( decodeeaddr( op_eaddr ) );

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                else { 
                  unsigned op_eaddr = addressToPC(MATCH_p);
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4598 "dynamic/emu/spathfinder.m"
                   executeSTB( ((sint8_t)op_rd), decodeeaddr( op_eaddr ) );

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                
                break;
              case 6: 
                if ((MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */ == 0 && 
                  (0 <= (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ && 
                  (MATCH_w_32_0 >> 13 & 0x1) /* i at 0 */ < 2)) { 
                  unsigned op_eaddr = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4604 "dynamic/emu/spathfinder.m"
                   executeCLRH( decodeeaddr( op_eaddr ) );

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                else { 
                  unsigned op_eaddr = addressToPC(MATCH_p);
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4605 "dynamic/emu/spathfinder.m"
                   executeSTH( ((sint8_t)op_rd), decodeeaddr( op_eaddr ) );

                  
                  
                  
                } /*opt-block*//*opt-block+*/
                
                break;
              case 7: 
                { 
                  unsigned op_eaddr = addressToPC(MATCH_p);
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4600 "dynamic/emu/spathfinder.m"
                   executeSTD( ((sint8_t)op_rd), decodeeaddr( op_eaddr ) );

                  
                  
                  
                }
                
                break;
              case 8: case 11: case 12: case 14: case 16: case 17: case 18: 
              case 19: case 20: case 21: case 22: case 23: case 24: case 25: 
              case 26: case 27: case 28: case 29: case 30: case 31: case 34: 
              case 38: case 40: case 41: case 42: case 43: case 44: case 45: 
              case 46: case 47: case 48: case 49: case 50: case 51: case 52: 
              case 53: case 54: case 55: case 56: case 57: case 58: case 59: 
              case 60: case 61: case 62: case 63: 
                goto MATCH_label_a0; break;
              case 9: 
                { 
                  unsigned op_eaddr = addressToPC(MATCH_p);
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4564 "dynamic/emu/spathfinder.m"
                   executeLDSB( decodeeaddr( op_eaddr ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 10: 
                { 
                  unsigned op_eaddr = addressToPC(MATCH_p);
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4565 "dynamic/emu/spathfinder.m"
                   executeLDSH( decodeeaddr( op_eaddr ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 13: 
                { 
                  unsigned op_eaddr = addressToPC(MATCH_p);
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4566 "dynamic/emu/spathfinder.m"
                   executeLDSTUB( decodeeaddr( op_eaddr ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 15: 
                { 
                  unsigned op_eaddr = addressToPC(MATCH_p);
                  unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4615 "dynamic/emu/spathfinder.m"
                   executeSWAP( decodeeaddr( op_eaddr ), ((sint8_t)op_rd) );

                  
                  
                  
                }
                
                break;
              case 32: 
                { 
                  unsigned op_eaddr = addressToPC(MATCH_p);
                  unsigned op_fds = 
                    (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4562 "dynamic/emu/spathfinder.m"
                   executeLDF( decodeeaddr( op_eaddr ), ((sint8_t)op_fds) );

                  
                  
                  
                }
                
                break;
              case 33: 
                { 
                  unsigned op_eaddr = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4563 "dynamic/emu/spathfinder.m"
                   executeLDFSR( decodeeaddr( op_eaddr ) );

                  
                  
                  
                }
                
                break;
              case 35: 
                { 
                  unsigned op_eaddr = addressToPC(MATCH_p);
                  unsigned op_fdd = 
                    (MATCH_w_32_0 >> 25 & 0x1f) /* fdd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4561 "dynamic/emu/spathfinder.m"
                   executeLDDF( decodeeaddr( op_eaddr ), ((sint8_t)op_fdd) );

                  
                  
                  
                }
                
                break;
              case 36: 
                { 
                  unsigned op_eaddr = addressToPC(MATCH_p);
                  unsigned op_fds = 
                    (MATCH_w_32_0 >> 25 & 0x1f) /* fds at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4602 "dynamic/emu/spathfinder.m"
                   executeSTF( ((sint8_t)op_fds), decodeeaddr( op_eaddr ) );

                  
                  
                  
                }
                
                break;
              case 37: 
                { 
                  unsigned op_eaddr = addressToPC(MATCH_p);
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4603 "dynamic/emu/spathfinder.m"
                   executeSTFSR( decodeeaddr( op_eaddr ) );

                  
                  
                  
                }
                
                break;
              case 39: 
                { 
                  unsigned op_eaddr = addressToPC(MATCH_p);
                  unsigned op_fdd = 
                    (MATCH_w_32_0 >> 25 & 0x1f) /* fdd at 0 */;
                  nextPC = 4 + MATCH_p; 
                  
                  #line 4601 "dynamic/emu/spathfinder.m"
                   executeSTDF( ((sint8_t)op_fdd), decodeeaddr( op_eaddr ) );

                  
                  
                  
                }
                
                break;
              default: assert(0);
            } /* (MATCH_w_32_0 >> 19 & 0x3f) -- op3 at 0 --*/ 
          break;
        default: assert(0);
      } /* (MATCH_w_32_0 >> 30 & 0x3) -- op at 0 --*/ 
    
  }goto MATCH_finished_a; 
  
  MATCH_label_a0: (void)0; /*placeholder for label*/ 
    { 
      nextPC = MATCH_p; 
      
      #line 4650 "dynamic/emu/spathfinder.m"
      unimplemented(pc);

      
      
      
    } 
    goto MATCH_finished_a; 
    
  MATCH_label_a1: (void)0; /*placeholder for label*/ 
    { 
      unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
      unsigned op_val = (MATCH_w_32_0 & 0x3fffff) /* imm22 at 0 */ << 10;
      nextPC = 4 + MATCH_p; 
      
      #line 4649 "dynamic/emu/spathfinder.m"
       executeSETHI( op_val, ((sint8_t)op_rd) );

      
      
      
    } 
    goto MATCH_finished_a; 
    
  MATCH_label_a2: (void)0; /*placeholder for label*/ 
    if ((MATCH_w_32_0 >> 14 & 0x1f) 
            /* rs1 at 0 */ == (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */) { 
      unsigned op_rd = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
      unsigned op_regorimm = addressToPC(MATCH_p);
      nextPC = 4 + MATCH_p; 
      
      #line 4571 "dynamic/emu/spathfinder.m"
       executeBSET( decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

      
      
      
    } /*opt-block*/
    else { 
      unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
      unsigned op_regorimm = addressToPC(MATCH_p);
      nextPC = 4 + MATCH_p; 
      
      #line 4573 "dynamic/emu/spathfinder.m"
       executeMOV( decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

      
      
      
    } /*opt-block*/ 
    goto MATCH_finished_a; 
    
  MATCH_label_a3: (void)0; /*placeholder for label*/ 
    { 
      unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
      unsigned op_regorimm = addressToPC(MATCH_p);
      unsigned op_rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
      nextPC = 4 + MATCH_p; 
      
      #line 4643 "dynamic/emu/spathfinder.m"
       executeXNOR( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

      
      
      
    } 
    goto MATCH_finished_a; 
    
  MATCH_label_a4: (void)0; /*placeholder for label*/ 
    { 
      unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
      unsigned op_regorimm = addressToPC(MATCH_p);
      unsigned op_rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
      nextPC = 4 + MATCH_p; 
      
      #line 4579 "dynamic/emu/spathfinder.m"
       executeORCC( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

      
      
      
    } 
    goto MATCH_finished_a; 
    
  MATCH_label_a5: (void)0; /*placeholder for label*/ 
    { 
      unsigned op_regorimm = addressToPC(MATCH_p);
      unsigned op_rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
      nextPC = 4 + MATCH_p; 
      
      #line 4612 "dynamic/emu/spathfinder.m"
       executeCMP( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ) );

      
      
      
    } 
    goto MATCH_finished_a; 
    
  MATCH_label_a6: (void)0; /*placeholder for label*/ 
    { 
      unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
      unsigned op_regorimm = addressToPC(MATCH_p);
      unsigned op_rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
      nextPC = 4 + MATCH_p; 
      
      #line 4587 "dynamic/emu/spathfinder.m"
       executeSAVE( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

      
      
      
    } 
    goto MATCH_finished_a; 
    
  MATCH_label_a7: (void)0; /*placeholder for label*/ 
    { 
      unsigned op_rd = (MATCH_w_32_0 >> 25 & 0x1f) /* rd at 0 */;
      unsigned op_regorimm = addressToPC(MATCH_p);
      unsigned op_rs1 = (MATCH_w_32_0 >> 14 & 0x1f) /* rs1 at 0 */;
      nextPC = 4 + MATCH_p; 
      
      #line 4585 "dynamic/emu/spathfinder.m"
       executeRESTORE( ((sint8_t)op_rs1), decodereg_or_imm( op_regorimm ), ((sint8_t)op_rd) );

      
      
      
    } 
    goto MATCH_finished_a; 
    
  MATCH_finished_a: (void)0; /*placeholder for label*/
  
}

#line 4653 "dynamic/emu/spathfinder.m"
return nextPC;
}


/**************** Global Functions ****************/
void executeOneInstruction()
{
    
	if (trace_mode) {
		add_to_trace(regs.r_pc);		
	}
  regs.rd[0] = 0;
regs.r_CTI = 0;
execute(regs.r_pc);
regs.r_pc = ((regs.r_CTI == 0) ? regs.r_npc : regs.r_pc);
regs.r_npc = ((regs.r_CTI == 0) ? (regs.r_npc + 4) : regs.r_npc);

}

void run( )
{
    while(1) {
#ifndef NDEBUG
        icount++;
        if( debug ) {
            char buf[80];
            sprintDisassembleInst( regs.r_pc, buf, sizeof(buf) );
            dumpMainRegisters( stderr );
            fprintf( stderr, "%5ld|%s\n", icount, buf );
        }
#endif
        executeOneInstruction();
    }
}






